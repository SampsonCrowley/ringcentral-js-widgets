{"version":3,"sources":["modules/ConferenceUI/index.js"],"names":["ConferenceUI","name","deps","conference","regionSettings","locale","composeText","extensionInfo","brand","alert","routerInteraction","call","options","_conference","_regionSettings","_locale","_composeText","_extensionInfo","_brand","_alert","_routerInteraction","_call","phoneNumbers","countryCounter","acc","item","country","isoCode","countryName","countryNames","getString","currentLocale","region","location","phoneNumber","data","hostCode","participantCode","allowJoinBeforeHost","dialInNumbers","getDialInNumbers","dialInNumber","additionalNumbers","disableTxtBtn","serviceFeatures","SMS","enabled","Pager","countryCode","areaCode","code","showSpinner","ready","showSaveAsDefault","enableAutoEnterHostKey","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","push","joinAsHost","onJoinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","RcUIModule"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport { reduce, map } from 'ramda';\nimport RcUIModule from '../../lib/RcUIModule';\nimport countryNames from '../../lib/countryNames';\n\n@Module({\n  name: 'ConferenceUI',\n  deps: [\n    'Conference',\n    'RegionSettings',\n    'Locale',\n    'ComposeText',\n    'ExtensionInfo',\n    'Brand',\n    'Alert',\n    'RouterInteraction',\n    'Call'\n  ],\n})\nexport default class ConferenceUI extends RcUIModule {\n  constructor({\n    conference,\n    regionSettings,\n    locale,\n    composeText,\n    extensionInfo,\n    brand,\n    alert,\n    routerInteraction,\n    call,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._conference = conference;\n    this._regionSettings = regionSettings;\n    this._locale = locale;\n    this._composeText = composeText;\n    this._extensionInfo = extensionInfo;\n    this._brand = brand;\n    this._alert = alert;\n    this._routerInteraction = routerInteraction;\n    this._call = call;\n  }\n\n  getDialInNumbers(phoneNumbers) {\n    const countryCounter = reduce((acc, item) => {\n      if (!acc[item.country.isoCode]) {\n        acc[item.country.isoCode] = 1;\n      } else {\n        acc[item.country.isoCode] += 1;\n      }\n      return acc;\n    }, {}, phoneNumbers);\n    return map((item) => {\n      const countryName = countryNames.getString(item.country.isoCode, this._locale.currentLocale);\n      // only show the provinces of canada\n      return {\n        region: countryCounter[item.country.isoCode] > 1 ?\n          `${countryName}, ${item.location}` :\n          countryName,\n        phoneNumber: item.phoneNumber\n      };\n    }, phoneNumbers);\n  }\n\n  get serviceFeatures() {\n    return this._extensionInfo.serviceFeatures;\n  }\n\n  getUIProps() {\n    const {\n      hostCode = '',\n      participantCode = '',\n      allowJoinBeforeHost = false,\n      phoneNumbers = [],\n    } = this._conference.data || {};\n    return {\n      dialInNumbers: this.getDialInNumbers(phoneNumbers),\n      dialInNumber: this._conference.dialInNumber || '',\n      hostCode,\n      participantCode,\n      allowJoinBeforeHost,\n      additionalNumbers: this._conference.additionalNumbers,\n      disableTxtBtn: (\n        (!this.serviceFeatures.SMS || !this.serviceFeatures.SMS.enabled) &&\n        (!this.serviceFeatures.Pager || !this.serviceFeatures.Pager.enabled)\n      ),\n      countryCode: this._regionSettings.countryCode,\n      areaCode: this._regionSettings.areaCode,\n      currentLocale: this._locale.currentLocale,\n      brand: {\n        code: this._brand.code,\n        name: this._brand.name\n      },\n      showSpinner: !(\n        this._conference.ready &&\n        this._regionSettings.ready &&\n        this._locale.ready &&\n        this._composeText.ready\n      ),\n      showSaveAsDefault: this._conference.showSaveAsDefault,\n    };\n  }\n\n  getUIFunctions({ enableAutoEnterHostKey = false }) {\n    return {\n      alert: (msg) => {\n        this._alert.warning({ message: msg });\n      },\n      updateDialInNumber: (dialInNumber) => {\n        this._conference.updateDialInNumber(dialInNumber);\n      },\n      updateAdditionalNumbers: (additionalDialInNumbers) => {\n        this._conference.updateAdditionalNumbers(additionalDialInNumbers);\n      },\n      inviteWithText: (text) => {\n        this._composeText.updateMessageText(text);\n        // for track\n        this._conference.onInviteWithText();\n        this._routerInteraction.push('/composeText');\n        // update settings\n      },\n      joinAsHost: () => {\n        // for track\n        this._conference.onJoinAsHost();\n        this._routerInteraction.history.push('/dialer');\n        const phoneNumber = enableAutoEnterHostKey ?\n          `${this._conference.dialInNumber},,${this._conference.data.hostCode}#` :\n          this._conference.dialInNumber;\n        this._call.call({ phoneNumber });\n      },\n      onAllowJoinBeforeHostChange: (allowJoinBeforeHost) => {\n        this._conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n      },\n      showHelpCommands: () => {\n        this._routerInteraction.push('/conference/commands');\n      },\n    };\n  }\n}\n"],"file":"index.js"}