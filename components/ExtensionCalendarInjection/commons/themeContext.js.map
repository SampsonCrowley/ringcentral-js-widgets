{"version":3,"sources":["components/ExtensionCalendarInjection/commons/themeContext.js"],"names":["themes","rc","key","isOldUI","UI","att","telus","bt","officeBlue","ThemeContext","React","createContext","ThemeProvider","theme","children","propTypes","PropTypes","object","isRequired","node","defaultProps","ThemeConsumer","Comp","WithTheme","props"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEO,IAAMA,MAAM,GAAG;AACpBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,GAAG,EAAE,IADH;AAEFC,IAAAA,OAAO,EAAE,KAFP;AAGFC,IAAAA,EAAE,EAAE;AAHF,GADgB;AAMpBC,EAAAA,GAAG,EAAE;AACHH,IAAAA,GAAG,EAAE,KADF;AAEHC,IAAAA,OAAO,EAAE,KAFN;AAGHC,IAAAA,EAAE,EAAE;AAHD,GANe;AAWpBE,EAAAA,KAAK,EAAE;AACLJ,IAAAA,GAAG,EAAE,OADA;AAELC,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,EAAE,EAAE;AAHC,GAXa;AAgBpBG,EAAAA,EAAE,EAAE;AACFL,IAAAA,GAAG,EAAE,IADH;AAEFC,IAAAA,OAAO,EAAE,KAFP;AAGFC,IAAAA,EAAE,EAAE;AAHF,GAhBgB;AAqBpBI,EAAAA,UAAU,EAAE;AACVN,IAAAA,GAAG,EAAE,YADK;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,EAAE,EAAE;AAHM;AArBQ,CAAf;;;AA4BA,IAAMK,YAAY,GAAGC,kBAAMC,aAAN,CAAoBX,MAAM,CAACC,EAA3B,CAArB;;;;AAEA,SAASW,aAAT,OAGJ;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,QACC,QADDA,QACC;AACD,SACE,gCAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAED;AAA9B,KACGC,QADH,CADF;AAKD;;AACDF,aAAa,CAACG,SAAd,GAA0B;AACxBF,EAAAA,KAAK,EAAEG,sBAAUC,MAAV,CAAiBC,UADA;AAExBJ,EAAAA,QAAQ,EAAEE,sBAAUG;AAFI,CAA1B;AAIAP,aAAa,CAACQ,YAAd,GAA6B;AAC3BN,EAAAA,QAAQ,EAAE;AADiB,CAA7B;;AAIO,SAASO,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WACE,gCAAC,YAAD,CAAc,QAAd,QAEI,UAAAX,KAAK;AAAA,aACH,gCAAC,IAAD;AACE,QAAA,KAAK,EAAEA;AADT,SAEMW,KAFN,EADG;AAAA,KAFT,CADF;AAYD;;AACD,SAAOD,SAAP;AACD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const themes = {\n  rc: {\n    key: 'rc',\n    isOldUI: false,\n    UI: 'google',\n  },\n  att: {\n    key: 'att',\n    isOldUI: false,\n    UI: 'google',\n  },\n  telus: {\n    key: 'telus',\n    isOldUI: false,\n    UI: 'google',\n  },\n  bt: {\n    key: 'bt',\n    isOldUI: false,\n    UI: 'google',\n  },\n  officeBlue: {\n    key: 'officeBlue',\n    isOldUI: false,\n    UI: 'google',\n  },\n};\n\nexport const ThemeContext = React.createContext(themes.rc);\n\nexport function ThemeProvider({\n  theme,\n  children,\n}) {\n  return (\n    <ThemeContext.Provider value={theme}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\nThemeProvider.propTypes = {\n  theme: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\nThemeProvider.defaultProps = {\n  children: null,\n};\n\nexport function ThemeConsumer(Comp) {\n  function WithTheme(props) {\n    return (\n      <ThemeContext.Consumer>\n        {\n          theme => (\n            <Comp\n              theme={theme}\n              {...props}\n            />\n          )\n        }\n      </ThemeContext.Consumer>\n    );\n  }\n  return WithTheme;\n}\n"],"file":"themeContext.js"}