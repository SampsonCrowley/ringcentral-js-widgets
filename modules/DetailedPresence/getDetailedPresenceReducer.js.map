{"version":3,"sources":["modules/DetailedPresence/getDetailedPresenceReducer.js"],"names":["removeIntermediateCall","result","activeCall","item","sessionId","direction","push","getDataReducer","types","state","type","timestamp","activeCalls","totalActiveCalls","fetchSuccess","notification","length","existingCall","find","call","normalizedCall","startTime","offset","Math","min","resetSuccess","getTelephonyStatusReducer","telephonyStatus","getDetailedPresenceReducer","reducers","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAMA,IAAMA,sBAAsB,GAAG,mBAAO,UAACC,MAAD,EAASC,UAAT,EAAwB;AAC5D,MACE,CAAC,wCAAmBA,UAAnB,CAAD,IACA,CAAC,iBACC,UAAAC,IAAI;AAAA,WACFA,IAAI,CAACC,SAAL,KAAmBF,UAAU,CAACE,SAA9B,IACAD,IAAI,CAACE,SAAL,KAAmBH,UAAU,CAACG,SAF5B;AAAA,GADL,EAKCJ,MALD,CAFH,EASE;AACAA,IAAAA,MAAM,CAACK,IAAP,CAAYJ,UAAZ;AACD;;AACD,SAAOD,MAAP;AACD,CAd8B,CAA/B;;AAgBO,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,SAAO,YAKD;AAAA,QALEC,KAKF,uEALU,EAKV;;AAAA;AAAA,QAJJC,IAII,QAJJA,IAII;AAAA,QAHJC,SAGI,QAHJA,SAGI;AAAA,gCAFJC,WAEI;AAAA,QAFJA,WAEI,iCAFU,EAEV;AAAA,qCADJC,gBACI;AAAA,QADJA,gBACI,sCADe,CACf;;AACJ,YAAQH,IAAR;AACE,WAAKF,KAAK,CAACM,YAAX;AACA,WAAKN,KAAK,CAACO,YAAX;AAAyB;AACvB,cAAIH,WAAW,CAACI,MAAZ,KAAuBH,gBAA3B,EAA6C;AAC3C,mBAAOJ,KAAP;AACD;;AACD,iBAAO,gBAAI,UAACP,UAAD,EAAgB;AACzB,gBAAMe,YAAY,GAAGR,KAAK,CAACS,IAAN,CAAW,UAAAC,IAAI;AAAA,qBAClCA,IAAI,CAACf,SAAL,KAAmBF,UAAU,CAACE,SADI;AAAA,aAAf,CAArB;;AAGA,gBAAI,CAACa,YAAL,EAAmB;AACjB,kBAAMG,cAAc,GAAG,wCAAmB,qCAAgBlB,UAAhB,CAAnB,CAAvB;AACA,kBAAMmB,SAAS,GAAGD,cAAc,CAACC,SAAf,IAA4BV,SAA9C;AACA,kBAAMW,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASb,SAAS,GAAGU,SAArB,EAAgC,CAAhC,CAAf;AACA,uCACKD,cADL;AAEEC,gBAAAA,SAAS,EAATA,SAFF;AAGEC,gBAAAA,MAAM,EAANA;AAHF;AAKD;;AACD,qCACKL,YADL,EAEK,wCAAmB,qCAAgBf,UAAhB,CAAnB,CAFL;AAID,WAlBM,EAkBJF,sBAAsB,CAAC,EAAD,EAAKY,WAAL,CAlBlB,CAAP;AAmBD;;AACD,WAAKJ,KAAK,CAACiB,YAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOhB,KAAP;AA7BJ;AA+BD,GArCD;AAsCD;;AAEM,SAASiB,yBAAT,CAAmClB,KAAnC,EAA0C;AAC/C,SAAO,YAAqD;AAAA,QAApDC,KAAoD,uEAA5C,IAA4C;;AAAA;AAAA,QAApCC,IAAoC,SAApCA,IAAoC;AAAA,sCAA9BiB,eAA8B;AAAA,QAA9BA,eAA8B,sCAAZlB,KAAY;;AAC1D,YAAQC,IAAR;AACE,WAAKF,KAAK,CAACM,YAAX;AACA,WAAKN,KAAK,CAACO,YAAX;AACE,eAAOY,eAAP;;AACF,WAAKnB,KAAK,CAACiB,YAAX;AACE,eAAO,IAAP;;AACF;AACE,eAAOhB,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASmB,0BAAT,CAAoCpB,KAApC,EAA0D;AAAA,MAAfqB,QAAe,uEAAJ,EAAI;AACvE,SAAO,iCAAmBrB,KAAnB,oBACFqB,QADE;AAELC,IAAAA,IAAI,EAAEvB,cAAc,CAACC,KAAD,CAFf;AAGLmB,IAAAA,eAAe,EAAED,yBAAyB,CAAClB,KAAD;AAHrC,KAAP;AAKD","sourcesContent":["import 'core-js/fn/array/find';\nimport 'core-js/fn/array/find-index';\nimport { find, reduce, map } from 'ramda';\nimport getPresenceReducer from '../Presence/getPresenceReducer';\nimport {\n  normalizeFromTo,\n  normalizeStartTime,\n  isIntermediateCall,\n} from '../../lib/callLogHelpers';\n\nconst removeIntermediateCall = reduce((result, activeCall) => {\n  if (\n    !isIntermediateCall(activeCall) &&\n    !find(\n      item => (\n        item.sessionId === activeCall.sessionId &&\n        item.direction === activeCall.direction\n      ),\n      result\n    )\n  ) {\n    result.push(activeCall);\n  }\n  return result;\n});\n\nexport function getDataReducer(types) {\n  return (state = [], {\n    type,\n    timestamp,\n    activeCalls = [],\n    totalActiveCalls = 0,\n  }) => {\n    switch (type) {\n      case types.fetchSuccess:\n      case types.notification: {\n        if (activeCalls.length !== totalActiveCalls) {\n          return state;\n        }\n        return map((activeCall) => {\n          const existingCall = state.find(call => (\n            call.sessionId === activeCall.sessionId\n          ));\n          if (!existingCall) {\n            const normalizedCall = normalizeStartTime(normalizeFromTo(activeCall));\n            const startTime = normalizedCall.startTime || timestamp;\n            const offset = Math.min(timestamp - startTime, 0);\n            return {\n              ...normalizedCall,\n              startTime,\n              offset,\n            };\n          }\n          return {\n            ...existingCall,\n            ...normalizeStartTime(normalizeFromTo(activeCall)),\n          };\n        }, removeIntermediateCall([], activeCalls));\n      }\n      case types.resetSuccess:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getTelephonyStatusReducer(types) {\n  return (state = null, { type, telephonyStatus = state }) => {\n    switch (type) {\n      case types.fetchSuccess:\n      case types.notification:\n        return telephonyStatus;\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getDetailedPresenceReducer(types, reducers = {}) {\n  return getPresenceReducer(types, {\n    ...reducers,\n    data: getDataReducer(types),\n    telephonyStatus: getTelephonyStatusReducer(types),\n  });\n}\n"],"file":"getDetailedPresenceReducer.js"}