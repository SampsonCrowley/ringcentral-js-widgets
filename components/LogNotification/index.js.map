{"version":3,"sources":["components/LogNotification/index.js"],"names":["LogNotification","formatPhone","currentLog","currentLocale","showLogButton","isExpand","onStay","onDiscard","onSave","onExpand","currentSession","onReject","onHangup","showEndButton","disableLinks","extraButtons","endButton","callStatus","direction","isInComingCall","callDirections","inbound","telephonyStatuses","ringing","endTitle","endAction","i18n","getString","EndIcon","styles","hangup","buttonDisabled","extraButtonBox","expandButtonWithEnd","expandDisableButton","expandButton","container","basicInfo","confirmationContainer","confirmationInfo","confirmationButtons","saveButton","selected","discardButton","stayButton","propTypes","PropTypes","string","isRequired","bool","object","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport telephonyStatuses from 'ringcentral-integration/enums/telephonyStatus';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport CircleButton from '../CircleButton';\nimport EndIcon from '../../assets/images/End.svg';\n\nimport Button from '../Button';\nimport LogBasicInfo from '../LogBasicInfo';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\n\nexport default function LogNotification(\n  {\n    formatPhone,\n    currentLog,\n    currentLocale,\n    showLogButton,\n    isExpand,\n    onStay,\n    onDiscard,\n    onSave,\n    onExpand,\n    currentSession,\n    onReject,\n    onHangup,\n    showEndButton,\n    disableLinks,\n  }\n) {\n  let extraButtons = null;\n  if (showEndButton && showLogButton) {\n    let endButton = null;\n    if (currentSession) {\n      const { callStatus, direction } = currentSession;\n      const isInComingCall = (callDirections.inbound === direction &&\n        telephonyStatuses.ringing === callStatus);\n      const endTitle = isInComingCall ? 'reject' : 'hangup';\n      const endAction = isInComingCall ? onReject : onHangup;\n      endButton = (\n        <span title={i18n.getString(endTitle, currentLocale)}>\n          <CircleButton\n            dataSign={endTitle}\n            showBorder={false}\n            icon={EndIcon}\n            onClick={endAction}\n            className={classnames({\n              [styles.hangup]: true,\n              [styles.endButton]: true,\n              [styles.buttonDisabled]: disableLinks\n            })}\n            disabled={disableLinks} />\n        </span>\n      );\n    }\n\n    extraButtons = (\n      <div className={styles.extraButtonBox}>\n        {endButton}\n        <Button\n          disabled={isExpand}\n          className={classnames(styles.expandButtonWithEnd, isExpand && styles.expandDisableButton)}\n          onClick={() => onExpand()}>\n          {i18n.getString('log', currentLocale)}\n        </Button>\n      </div>\n\n    );\n  } else if (showLogButton) {\n    extraButtons = (\n      <Button\n        disabled={isExpand}\n        className={classnames(styles.expandButton, isExpand && styles.expandDisableButton)}\n        onClick={() => onExpand()}>\n        {i18n.getString('log', currentLocale)}\n      </Button>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.basicInfo}>\n        <LogBasicInfo\n          currentLog={currentLog}\n          currentLocale={currentLocale}\n          formatPhone={formatPhone}\n        />\n        {extraButtons}\n      </div>\n      {\n        isExpand ? (\n          <div className={styles.confirmationContainer}>\n            <div className={styles.confirmationInfo}>\n              {i18n.getString('confirmationInfo', currentLocale)}\n            </div>\n            <div className={styles.confirmationButtons}>\n              {\n                onSave ? (\n                  <Button\n                    className={classnames(styles.saveButton, styles.selected)}\n                    onClick={() => onSave()}>\n                    {i18n.getString('save', currentLocale)}\n                  </Button>\n                ) : null\n              }\n              {\n                onDiscard ? (\n                  <Button\n                    className={styles.discardButton}\n                    onClick={() => onDiscard()}>\n                    {i18n.getString('discard', currentLocale)}\n                  </Button>\n                ) : null\n              }\n              {\n                onStay ? (\n                  <Button\n                    className={styles.stayButton}\n                    onClick={() => onStay()}>\n                    {i18n.getString('stay', currentLocale)}\n                  </Button>\n                ) : null\n              }\n            </div>\n          </div>\n        ) : null\n      }\n    </div>\n  );\n}\n\nLogNotification.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showLogButton: PropTypes.bool,\n  currentLog: PropTypes.object,\n  formatPhone: PropTypes.func,\n  isExpand: PropTypes.bool,\n  onStay: PropTypes.func,\n  onDiscard: PropTypes.func,\n  onSave: PropTypes.func,\n  onExpand: PropTypes.func,\n  currentSession: PropTypes.object,\n  onReject: PropTypes.func,\n  onHangup: PropTypes.func,\n  showEndButton: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n};\n\nLogNotification.defaultProps = {\n  showLogButton: true,\n  currentLog: {},\n  formatPhone: undefined,\n  isExpand: undefined,\n  onStay: undefined,\n  onDiscard: undefined,\n  onSave: undefined,\n  onExpand: undefined,\n  currentSession: undefined,\n  onReject: () => null,\n  onHangup: () => null,\n  showEndButton: false,\n  disableLinks: false,\n};\n"],"file":"index.js"}