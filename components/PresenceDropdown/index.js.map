{"version":3,"sources":["components/PresenceDropdown/index.js"],"names":["PresenceDropdown","props","state","showSelects","toggleShow","isReady","setState","preState","userStatus","dndStatus","currentLocale","setAvailable","setBusy","setDoNotDisturb","setInvisible","showDropdown","styles","root","showBackground","bk","presence","presenceBar","presenceList","presenceItem","presenceStatus","available","DndStatus","takeAllCalls","doNotAcceptAnyCalls","busy","offline","Component","propTypes","PropTypes","string","isRequired","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport DndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Line from '../Line';\nimport PresenceItem from '../PresenceItem';\nimport styles from './style.scss';\n\nexport default class PresenceDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: false,\n    };\n    // TODO: Consider for the bubble event of click to set status.\n    // (maybe discuss in coding dojo)\n    this.toggleShow = () => {\n      const {\n        isReady\n      } = this.props;\n      if (isReady) {\n        this.setState(preState => ({\n          showSelects: !preState.showSelects,\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      userStatus,\n      dndStatus,\n      currentLocale,\n      setAvailable,\n      setBusy,\n      setDoNotDisturb,\n      setInvisible,\n    } = this.props;\n    const {\n      showSelects,\n    } = this.state;\n    const showDropdown = classnames(\n      styles.root,\n      showSelects ? styles.showSelects : null,\n    );\n    const showBackground = classnames(\n      styles.bk,\n      showSelects ? styles.showSelects : null,\n    );\n    return (\n      <div>\n        <div\n          className={classnames(\n            styles.presence,\n            styles[userStatus],\n            styles[dndStatus],\n          )}\n          onClick={this.toggleShow}\n        >\n          <div className={styles.presenceBar} />\n          <div className={showDropdown}>\n            <Line className={styles.presenceList}>\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.available}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setAvailable}\n                selected={\n                  userStatus === presenceStatus.available &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.busy}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setBusy}\n                selected={\n                  userStatus === presenceStatus.busy &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.busy}\n                dndStatus={DndStatus.doNotAcceptAnyCalls}\n                currentLocale={currentLocale}\n                onClick={setDoNotDisturb}\n                selected={\n                  dndStatus === DndStatus.doNotAcceptAnyCalls\n                }\n              />\n              <PresenceItem\n                className={styles.presenceItem}\n                userStatus={presenceStatus.offline}\n                dndStatus={DndStatus.takeAllCalls}\n                currentLocale={currentLocale}\n                onClick={setInvisible}\n                selected={\n                  userStatus === presenceStatus.offline &&\n                  dndStatus !== DndStatus.doNotAcceptAnyCalls\n                }\n              />\n            </Line>\n          </div>\n        </div>\n        <div className={showBackground} onClick={this.toggleShow} />\n      </div>\n    );\n  }\n}\n\nPresenceDropdown.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  isReady: PropTypes.bool.isRequired\n};\n\nPresenceDropdown.defaultProps = {\n  dndStatus: null,\n  userStatus: null,\n};\n"],"file":"index.js"}