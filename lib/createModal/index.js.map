{"version":3,"sources":["lib/createModal/index.js"],"names":["createModal","Comp","props","_container","document","createElement","root","appendDOM","context","modalRoot","current","body","appendChild","parentNode","removeChild","className","maskClassName","modalClassName","show","onClose","clickOutToClose","onClick","styles","container","containerHidden","mask","maskHidden","modal","modalHidden","ReactDOM","createPortal","renderDialog","Component","propTypes","string","bool","func","object","defaultProps","undefined","contextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAQwBA,W;;AARxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA;AACe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AACxC;AAAA;;AAsBE,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wIACXA,KADW;;AAEjB,YAAKC,UAAL,GAAkBC,SAASC,aAAT,CAAuB,KAAvB,CAAlB;AAFiB;AAGlB;;AAzBH;AAAA;AAAA,0CA0BsB;AAClB,YAAMC,OACJ,KAAKJ,KAAL,CAAWK,SAAX,IACC,KAAKC,OAAL,CAAaC,SAAb,IAA0B,KAAKD,OAAL,CAAaC,SAAb,CAAuBC,OADlD,IAEAN,SAASO,IAHX;AAKAL,aAAKM,WAAL,CAAiB,KAAKT,UAAtB;AACD;AAjCH;AAAA;AAAA,6CAkCyB;AACrB,YAAI,KAAKA,UAAL,CAAgBU,UAApB,EAAgC;AAC9B,eAAKV,UAAL,CAAgBU,UAAhB,CAA2BC,WAA3B,CAAuC,KAAKX,UAA5C;AACD;AACF;AAtCH;AAAA;AAAA,qCAuCiB;AAAA,qBAST,KAAKD,KATI;AAAA,YAEXa,SAFW,UAEXA,SAFW;AAAA,YAGXC,aAHW,UAGXA,aAHW;AAAA,YAIXC,cAJW,UAIXA,cAJW;AAAA,YAKXC,IALW,UAKXA,IALW;AAAA,YAMXC,OANW,UAMXA,OANW;AAAA,YAOXC,eAPW,UAOXA,eAPW;AAAA,YAQRlB,KARQ;;AAUb,YAAMmB,UAAUD,kBAAkBD,OAAlB,GAA4B,YAAM,CAAE,CAApD;AACA,eACE;AAAA;AAAA,YAAK,WAAWD,OAAO,0BAAWI,iBAAOC,SAAlB,EAA6BR,SAA7B,CAAP,GAAiDO,iBAAOE,eAAxE;AACE;AACE,uBAAWN,OAAO,0BAAWI,iBAAOG,IAAlB,EAAwBT,aAAxB,CAAP,GAAgDM,iBAAOI,UADpE;AAEE,qBAASL;AAFX,YADF;AAKE;AAAA;AAAA,cAAK,WAAWH,OAAO,0BAAWI,iBAAOK,KAAlB,EAAyBV,cAAzB,CAAP,GAAkDK,iBAAOM,WAAzE;AACE,0CAAC,IAAD,EACM1B,KADN;AADF;AALF,SADF;AAaD;AA/DH;AAAA;AAAA,+BAgEW;AACP,eAAO2B,mBAASC,YAAT,CACL,KAAKC,YAAL,EADK,EAEL,KAAK5B,UAFA,CAAP;AAID;AArEH;AAAA;AAAA,IAA4B6B,gBAA5B,UACSC,SADT,GACqB;AACjBlB,eAAWkB,oBAAUC,MADJ;AAEjBjB,oBAAgBgB,oBAAUC,MAFT;AAGjBhB,UAAMe,oBAAUE,IAHC;AAIjBhB,aAASc,oBAAUG,IAJF;AAKjBhB,qBAAiBa,oBAAUE,IALV;AAMjB5B,eAAW0B,oBAAUI,MANJ;AAOjBrB,mBAAeiB,oBAAUC;AAPR,GADrB,SAUSI,YAVT,GAUwB;AACpBvB,eAAW,EADS;AAEpBE,oBAAgB,EAFI;AAGpBC,UAAM,KAHc;AAIpBC,aAASoB,SAJW;AAKpBnB,qBAAiB,KALG;AAMpBb,eAAWgC,SANS;AAOpBvB,mBAAeuB;AAPK,GAVxB,SAmBSC,YAnBT,GAmBwB;AACpB/B,eAAWwB,oBAAUI;AADD,GAnBxB;AAuED","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport propTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport styles from './styles.scss';\n\n// TODO: consider refactoring onClose + clickOutToClose to onOverlayClick\nexport default function createModal(Comp) {\n  return class KModal extends Component {\n    static propTypes = {\n      className: propTypes.string,\n      modalClassName: propTypes.string,\n      show: propTypes.bool,\n      onClose: propTypes.func,\n      clickOutToClose: propTypes.bool,\n      appendDOM: propTypes.object,\n      maskClassName: propTypes.string,\n    }\n    static defaultProps = {\n      className: '',\n      modalClassName: '',\n      show: false,\n      onClose: undefined,\n      clickOutToClose: false,\n      appendDOM: undefined,\n      maskClassName: undefined,\n    }\n    static contextTypes = {\n      modalRoot: propTypes.object,\n    }\n    constructor(props) {\n      super(props);\n      this._container = document.createElement('div');\n    }\n    componentDidMount() {\n      const root = (\n        this.props.appendDOM ||\n        (this.context.modalRoot && this.context.modalRoot.current) ||\n        document.body\n      );\n      root.appendChild(this._container);\n    }\n    componentWillUnmount() {\n      if (this._container.parentNode) {\n        this._container.parentNode.removeChild(this._container);\n      }\n    }\n    renderDialog() {\n      const {\n        className,\n        maskClassName,\n        modalClassName,\n        show,\n        onClose,\n        clickOutToClose,\n        ...props\n      } = this.props;\n      const onClick = clickOutToClose ? onClose : () => {};\n      return (\n        <div className={show ? classnames(styles.container, className) : styles.containerHidden}>\n          <div\n            className={show ? classnames(styles.mask, maskClassName) : styles.maskHidden}\n            onClick={onClick}\n          />\n          <div className={show ? classnames(styles.modal, modalClassName) : styles.modalHidden}>\n            <Comp\n              {...props}\n            />\n          </div>\n        </div>\n      );\n    }\n    render() {\n      return ReactDOM.createPortal(\n        this.renderDialog(),\n        this._container,\n      );\n    }\n  };\n}\n"]}