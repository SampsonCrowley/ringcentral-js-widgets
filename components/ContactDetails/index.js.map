{"version":3,"sources":["components/ContactDetails/index.js"],"names":["getPresenceStatusName","presence","currentLocale","presenceStatus","dndStatus","DndStatus","doNotAcceptAnyCalls","i18n","getString","AvatarNode","name","avatarUrl","isInactive","avatarStyle","styles","inactiveAvatarNode","avatarNode","propTypes","PropTypes","string","bool","defaultProps","undefined","ContactDetails","onClickToDial","contact","phoneNumber","props","disableCallButton","onClickToSMS","disableLinks","onClickMailTo","email","contactType","renderPresence","contactStatus","presenceName","inactiveText","presenceNodeContainer","presenceNode","contactItem","sourceNodeRenderer","profileImageUrl","type","sourceNode","sourceType","contactProfile","avatar","avatarNodeContainer","sourceNodeContainer","info","nameWithoutPresence","color","fontSize","label","listComp","item","content","showCallBtn","showTextBtn","key","number","needFormat","displayedPhoneNumber","formatNumber","text","menu","disabled","dynamicsFont","call","composeText","phoneNumbers","phoneMaps","schema","length","section","contacts","phoneTypes","extension","getListContainerBuilder","phoneNumberElm","getListItem","internalSmsPermission","fax","outboundSmsPermission","emails","hasMailToHandler","emailListView","map","index","underline","company","jobTitle","companyInfo","companyItems","Object","keys","root","profile","renderProfile","renderCompanyInfo","getPhoneSections","renderEmailCell","PureComponent","contactItemPropTypes","id","oneOfType","isRequired","firstName","lastName","arrayOf","shape","phoneType","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\nimport { map } from 'ramda';\n\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport PlaceholderImage from '../PlaceholderImage';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport phoneTypes from '../../enums/phoneTypes';\nimport i18n from './i18n';\n\nimport styles from './styles.scss';\n\nexport function getPresenceStatusName(presence, currentLocale) {\n  const { presenceStatus, dndStatus } = presence;\n  if (dndStatus === DndStatus.doNotAcceptAnyCalls) {\n    return i18n.getString(dndStatus, currentLocale);\n  }\n  return i18n.getString(presenceStatus, currentLocale);\n}\n\nfunction AvatarNode({ name, avatarUrl, isInactive }) {\n  const avatarStyle = isInactive\n    ? styles.inactiveAvatarNode\n    : styles.avatarNode;\n  return (\n    <PlaceholderImage\n      className={avatarStyle}\n      alt={name}\n      src={avatarUrl}\n      placeholder={<DefaultAvatar className={avatarStyle} />}\n    />\n  );\n}\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  isInactive: PropTypes.bool,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n  isInactive: false,\n};\n\nexport default class ContactDetails extends PureComponent {\n  onClickToDial = (contact, phoneNumber) => {\n    if (this.props.disableCallButton) return;\n\n    this.props.onClickToDial({\n      ...contact,\n      phoneNumber,\n    });\n  };\n\n  onClickToSMS = (contact, phoneNumber) => {\n    if (this.props.disableLinks) return;\n\n    this.props.onClickToSMS({\n      ...contact,\n      phoneNumber,\n    });\n  };\n\n  onClickMailTo = (email, contactType) => {\n    if (typeof this.props.onClickMailTo === 'function') {\n      this.props.onClickMailTo(email, contactType);\n    }\n  };\n\n  renderPresence = (contactStatus, presence, presenceName, currentLocale) => {\n    if (contactStatus === 'NotActivated') {\n      return (\n        <div className={styles.presence}>\n          <div>\n            <span className={styles.inactiveText}>\n              {i18n.getString('notActivated', currentLocale)}\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    return presence ? (\n      <div className={styles.presence}>\n        <div className={styles.presenceNodeContainer}>\n          <PresenceStatusIcon className={styles.presenceNode} {...presence} />\n        </div>\n        <span className={styles.presenceStatus}>{presenceName}</span>\n      </div>\n    ) : null;\n  };\n\n  renderProfile() {\n    const { contactItem, sourceNodeRenderer, currentLocale } = this.props;\n    const {\n      name,\n      presence,\n      profileImageUrl,\n      type,\n      contactStatus,\n    } = contactItem;\n    const sourceNode = sourceNodeRenderer({ sourceType: type });\n    const presenceName = presence\n      ? getPresenceStatusName(presence, currentLocale)\n      : null;\n    return (\n      <div className={styles.contactProfile}>\n        <div className={styles.avatar}>\n          <div className={styles.avatarNodeContainer}>\n            <AvatarNode\n              name={name}\n              avatarUrl={profileImageUrl}\n              isInactive={contactStatus === 'NotActivated'}\n            />\n            {sourceNode ? (\n              <div className={styles.sourceNodeContainer}>{sourceNode}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className={styles.info}>\n          <div\n            className={classnames(\n              styles.name,\n              !presence ? styles.nameWithoutPresence : null,\n            )}\n          >\n            <span\n              style={\n                contactStatus === 'NotActivated'\n                  ? { color: '#999999', fontSize: '12px' }\n                  : null\n              }\n              title={name}\n            >\n              {name}\n            </span>\n          </div>\n          {this.renderPresence(\n            contactStatus,\n            presence,\n            presenceName,\n            currentLocale,\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  getListContainerBuilder(label, listComp) {\n    return (\n      <div className={styles.item} key={label}>\n        <div className={styles.label}>\n          <span>{label}</span>\n        </div>\n        <ul className={styles.content}>{listComp}</ul>\n      </div>\n    );\n  }\n\n  getListItem({\n    showCallBtn,\n    showTextBtn,\n    disableLinks,\n    disableCallButton,\n    key,\n    number,\n    currentLocale,\n    contactItem,\n    needFormat = true,\n  }) {\n    let displayedPhoneNumber;\n    if (needFormat) {\n      const { phoneNumber } = this.props.formatNumber(number);\n      displayedPhoneNumber = phoneNumber;\n    } else {\n      displayedPhoneNumber = number;\n    }\n\n    return (\n      <li key={key}>\n        <div className={classnames(styles.text, styles.number)}>\n          <span data-sign=\"contactNumber\" title={displayedPhoneNumber}>\n            {displayedPhoneNumber}\n          </span>\n        </div>\n        <div className={styles.menu}>\n          {showCallBtn ? (\n            <button\n              className={classnames(disableCallButton && styles.disabled)}\n              title={i18n.getString('call', currentLocale)}\n              onClick={() => this.onClickToDial(contactItem, number)}\n            >\n              <i className={dynamicsFont.call} />\n            </button>\n          ) : null}\n          {showTextBtn ? (\n            <button\n              className={classnames(disableLinks && styles.disabled)}\n              title={i18n.getString('text', currentLocale)}\n              onClick={() => this.onClickToSMS(contactItem, number)}\n            >\n              <i className={dynamicsFont.composeText} />\n            </button>\n          ) : null}\n        </div>\n      </li>\n    );\n  }\n\n  getPhoneSections() {\n    const {\n      contactItem,\n      currentLocale,\n      disableLinks,\n      disableCallButton,\n    } = this.props;\n    const { phoneNumbers, phoneMaps, schema } = contactItem;\n    if (!phoneNumbers.length) {\n      return null;\n    }\n\n    return (\n      <div className={classnames(styles.section, styles.contacts)}>\n        {map((key) => {\n          switch (key) {\n            case phoneTypes.extension: {\n              return this.getListContainerBuilder(\n                i18n.getString(phoneTypes.extension, currentLocale),\n                map(\n                  (phoneNumberElm) =>\n                    this.getListItem({\n                      showCallBtn: this.props.internalSmsPermission,\n                      showTextBtn: this.props.onClickToDial,\n                      disableLinks,\n                      disableCallButton,\n                      key: phoneNumberElm.phoneNumber,\n                      number: phoneNumberElm.phoneNumber,\n                      currentLocale,\n                      contactItem,\n                    }),\n                  phoneMaps[key],\n                ),\n              );\n            }\n            case phoneTypes.fax: {\n              return this.getListContainerBuilder(\n                i18n.getString(phoneTypes.fax, currentLocale),\n                map(\n                  (phoneNumberElm) =>\n                    this.getListItem({\n                      showCallBtn: false,\n                      showTextBtn: false,\n                      key: phoneNumberElm.phoneNumber,\n                      number: phoneNumberElm.phoneNumber,\n                      currentLocale,\n                      contactItem,\n                    }),\n                  phoneMaps[key],\n                ),\n              );\n            }\n            default: {\n              return this.getListContainerBuilder(\n                i18n.getString(phoneTypes[key], currentLocale),\n                map(\n                  (phoneNumberElm) =>\n                    this.getListItem({\n                      showCallBtn: this.props.onClickToDial,\n                      showTextBtn: this.props.outboundSmsPermission,\n                      disableLinks,\n                      disableCallButton,\n                      key: phoneNumberElm.phoneNumber,\n                      number: phoneNumberElm.phoneNumber,\n                      currentLocale,\n                      contactItem,\n                    }),\n                  phoneMaps[key],\n                ),\n              );\n            }\n          }\n        }, schema)}\n      </div>\n    );\n  }\n\n  renderEmailCell() {\n    const { onClickMailTo } = this.props;\n    const { emails, type } = this.props.contactItem;\n    if (!emails || emails.length <= 0) return null;\n    const hasMailToHandler = typeof onClickMailTo === 'function';\n    const emailListView = emails.map((email, index) => (\n      <li key={index}>\n        <a\n          title={email}\n          className={hasMailToHandler ? styles.underline : null}\n          onClick={() => this.onClickMailTo(email, type)}\n        >\n          {email}\n        </a>\n      </li>\n    ));\n    return (\n      <div className={classnames(styles.section, styles.email)}>\n        <div className={styles.label}>\n          <span>{i18n.getString('emailLabel', this.props.currentLocale)}</span>\n        </div>\n        <ul className={styles.content}>{emailListView}</ul>\n      </div>\n    );\n  }\n\n  renderCompanyInfo() {\n    const { currentLocale, contactItem } = this.props;\n    const { company, jobTitle } = contactItem;\n    if (!company && !jobTitle) {\n      return null;\n    }\n    const companyInfo = {\n      company,\n      jobTitle,\n    };\n    const companyItems = Object.keys(companyInfo).map((key) => (\n      <div className={styles.item} key={key}>\n        <div className={styles.label}>\n          <span>{i18n.getString(key, currentLocale)}</span>\n        </div>\n        <div className={styles.content}>\n          <span className={styles.text}>{companyInfo[key]}</span>\n        </div>\n      </div>\n    ));\n    return (\n      <div className={classnames(styles.section, styles.companyInfo)}>\n        {companyItems}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <div className={styles.profile}>{this.renderProfile()}</div>\n        {this.renderCompanyInfo()}\n        {this.getPhoneSections()}\n        {this.renderEmailCell()}\n      </div>\n    );\n  }\n}\n\nexport const contactItemPropTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  email: PropTypes.string,\n  profileImageUrl: PropTypes.string,\n  phoneNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      phoneType: PropTypes.string,\n    }),\n  ),\n  contactStatus: PropTypes.string,\n};\n\nContactDetails.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactItem: PropTypes.shape(contactItemPropTypes).isRequired,\n  sourceNodeRenderer: PropTypes.func,\n  onClickToSMS: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickMailTo: PropTypes.func,\n  formatNumber: PropTypes.func.isRequired,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  disableCallButton: PropTypes.bool,\n};\n\nContactDetails.defaultProps = {\n  onClickToSMS: undefined,\n  onClickToDial: undefined,\n  onClickMailTo: undefined,\n  sourceNodeRenderer: () => null,\n  outboundSmsPermission: false,\n  internalSmsPermission: false,\n  disableLinks: false,\n  disableCallButton: false,\n};\n"],"file":"index.js"}