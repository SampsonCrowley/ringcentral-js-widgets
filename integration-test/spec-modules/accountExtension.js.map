{"version":3,"sources":["integration-test/spec-modules/accountExtension.js"],"names":["authzProfileBody","require","auth","client","accountExtension","account","describe","timeout","mock","mockClient","isLoginSuccess","afterEach","logout","it","restore","mockForLogin","console","error","skip","retries","expect","availableExtensions","length","equal","mockAuthzProfile","authzProfile","permissions","filter","p","permission","id"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;eAEe,kBAACC,IAAD,EAAOC,MAAP,EAAeC,gBAAf,EAAiCC,OAAjC,EAA6C;AAC1DC,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAClC,IAAA,KAAI,CAACC,OAAL,CAAa,KAAb;;AACAC,IAAAA,IAAI,CAACC,UAAL,CAAgBN,MAAhB;AAEA,QAAIO,cAAJ,CAJkC,CAKlC;;AAEAC,IAAAA,SAAS;AAAA;AAAA;AAAA;AAAA,4BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACFT,IAAI,CAACU,MAAL,EADE;;AAAA;AAAA;AAAA,qBAEF,6BAAc,CAAd,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT;AAKAC,IAAAA,EAAE,CAAC,yEAAD;AAAA;AAAA;AAAA;AAAA,4BAA4E;AAAA;AAAA;AAAA;AAAA;AAC5EL,cAAAA,IAAI,CAACM,OAAL;AACAN,cAAAA,IAAI,CAACO,YAAL;AAF4E;AAAA,qBAGrD,2BAAYb,IAAZ,EAAkBG,OAAlB,CAHqD;;AAAA;AAG5EK,cAAAA,cAH4E;;AAI5E,kBAAI,CAACA,cAAL,EAAqB;AACnBM,gBAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd,EAAoEZ,OAApE;;AACA,gBAAA,KAAI,CAACa,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAR4E;AAAA,qBAStE,6BAAc,CAAd,CATsE;;AAAA;AAU5EC,cAAAA,MAAM,CAAChB,gBAAgB,CAACiB,mBAAjB,CAAqCC,MAAtC,CAAN,CAAoDC,KAApD,CAA0D,CAA1D;;AAV4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5E,GAAF;AAaAV,IAAAA,EAAE,CAAC,oEAAD;AAAA;AAAA;AAAA;AAAA,4BAAuE;AAAA;AAAA;AAAA;AAAA;AACvEL,cAAAA,IAAI,CAACM,OAAL;AACAN,cAAAA,IAAI,CAACO,YAAL,CAAkB;AAAES,gBAAAA,gBAAgB,EAAE;AAApB,eAAlB;AACAhB,cAAAA,IAAI,CAACiB,YAAL,CAAkB;AAChBC,gBAAAA,WAAW,EAAE1B,gBAAgB,CAAC0B,WAAjB,CAA6BC,MAA7B,CAAoC,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,UAAF,CAAaC,EAAb,KAAoB,gBAAxB;AAAA,iBAArC;AADG,eAAlB;AAHuE;AAAA,qBAMhD,2BAAY5B,IAAZ,EAAkBG,OAAlB,CANgD;;AAAA;AAMvEK,cAAAA,cANuE;;AAOvE,kBAAI,CAACA,cAAL,EAAqB;AACnBM,gBAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd,EAAoEZ,OAApE;;AACA,gBAAA,KAAI,CAACa,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAXuE;AAAA,qBAYjE,6BAAc,CAAd,CAZiE;;AAAA;AAavEC,cAAAA,MAAM,CAAChB,gBAAgB,CAACiB,mBAAjB,CAAqCC,MAAtC,CAAN,CAAoDC,KAApD,CAA0D,CAA1D;;AAbuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvE,GAAF;AAeD,GAxCO,CAAR;AAyCD,C","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\n// import ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, accountExtension, account) => {\n  describe('AccountExtension:', () => {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    // const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    afterEach(async () => {\n      await auth.logout();\n      await waitInSeconds(1);\n    });\n\n    it('Should load availableExtensions when there is ReadExtensions permission', async () => {\n      mock.restore();\n      mock.mockForLogin();\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error('Skip test case as failed to login with credential ', account);\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(accountExtension.availableExtensions.length).equal(2);\n    });\n\n    it(\"Should not load numbers when there isn't ReadExtensions permission\", async () => {\n      mock.restore();\n      mock.mockForLogin({ mockAuthzProfile: false });\n      mock.authzProfile({\n        permissions: authzProfileBody.permissions.filter(p => p.permission.id !== 'ReadExtensions')\n      });\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error('Skip test case as failed to login with credential ', account);\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(accountExtension.availableExtensions.length).equal(0);\n    });\n  });\n};\n"],"file":"accountExtension.js"}