{"version":3,"sources":["modules/ContactDetails/index.js"],"names":["sortOtherTypes","unSortTypes","MOBILE","BUSINESS","HOME","FAX","OTHER","goalOrderTypes","mobile","business","home","fax","other","sort","a","b","ContactDetails","deps","dep","optional","contacts","options","actionTypes","_contacts","_reducer","addSelector","condition","allContacts","find","currentContact","phoneNumbers","rawPhoneNumbers","length","phoneMaps","acc","phoneNumberElm","phoneType","push","Object","keys","filter","key","phoneTypes","extension","direct","sortedTypes","schema","Array","isArray","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","_shouldReset","resetSuccess","ready","pending","id","updateCondition","resetCondition","contact","getProfileImage","getPresence","clickToSMS","clickToCall","_selectors","currentSortedContact","state","status","RcModule","background","proxify"],"mappings":"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","sourcesContent":["import { filter, reduce } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport getContactDetailsReducer from './getContactDetailsReducer';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport phoneTypes from '../../enums/phoneTypes';\n\n\nconst sortOtherTypes = ({ unSortTypes = [] }) => {\n  const [MOBILE, BUSINESS, HOME, FAX, OTHER] = [0, 1, 2, 3, 4];\n  const goalOrderTypes = {\n    mobile: MOBILE, business: BUSINESS, home: HOME, fax: FAX, other: OTHER\n  };\n  unSortTypes.sort((a, b) => goalOrderTypes[a] - goalOrderTypes[b]);\n  return unSortTypes;\n};\n@Module({\n  deps: [\n    'Contacts',\n    { dep: 'ContactDetailsOptions', optional: true }\n  ]\n})\n\nexport default class ContactDetails extends RcModule {\n  constructor({ contacts, ...options }) {\n    super({ ...options, actionTypes });\n\n    this._contacts = contacts;\n    this._reducer = getContactDetailsReducer(this.actionTypes);\n\n    this.addSelector(\n      'currentContact',\n      () => this.condition,\n      () => this._contacts.allContacts,\n      (condition) => {\n        if (condition) { return this._contacts.find(condition); }\n        return null;\n      }\n    );\n\n    this.addSelector(\n      'currentSortedContact',\n      () => this.currentContact,\n      (currentContact) => {\n        if (!currentContact) return null;\n        let phoneNumbers;\n        if ( currentContact.rawPhoneNumbers && currentContact.rawPhoneNumbers.length > 0 ) {\n          phoneNumbers = currentContact.rawPhoneNumbers;\n        } else {\n          phoneNumbers = currentContact.phoneNumbers;\n        }\n        const phoneMaps = reduce((acc, phoneNumberElm) => {\n          acc[phoneNumberElm.phoneType] = acc[phoneNumberElm.phoneType] || [];\n          acc[phoneNumberElm.phoneType].push(phoneNumberElm);\n          return acc;\n        }, {}, phoneNumbers);\n\n        const unSortTypes = (Object.keys(phoneMaps).filter(\n          key => key !== phoneTypes.extension && key !== phoneTypes.direct\n        ));\n\n        const sortedTypes = sortOtherTypes({ unSortTypes });\n        // we need sequence that: ext followed by direct followed by others.\n        const schema = filter(\n          key => (!!phoneTypes[key] && Array.isArray(phoneMaps[key])),\n          [\n            phoneTypes.extension,\n            phoneTypes.direct,\n            ...sortedTypes\n          ],\n        );\n        return { ...currentContact, schema, phoneMaps };\n      }\n    );\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._contacts.ready &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      !this._contacts.ready &&\n      this.ready\n    );\n  }\n\n  /**\n   * Find contact from all contacts by given conditions.\n   * Stores search conditions to reducers.\n   */\n  @background\n  find({ id, type }) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCondition,\n      condition: {\n        id,\n        type\n      }\n    });\n  }\n\n  @background\n  clear() {\n    this.store.dispatch({\n      type: this.actionTypes.resetCondition\n    });\n  }\n\n  @background\n  getProfileImage(contact) {\n    return this._contacts.getProfileImage(contact, false);\n  }\n\n  @background\n  getPresence(contact) {\n    return this._contacts.getPresence(contact, false);\n  }\n\n  // for track click to sms in contact detail\n  @proxify\n  onClickToSMS() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n\n  // for track click to call in contact detail\n  @proxify\n  onClickToCall() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToCall,\n    });\n  }\n\n  get currentContact() {\n    return this._selectors.currentContact();\n  }\n\n  get contact() {\n    return this._selectors.currentSortedContact();\n  }\n\n  get condition() {\n    return this.state.condition;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}