{"version":3,"sources":["lib/localeLoader/index.js"],"names":["module","exports","localeLoader","content","callback","async","querys","loaderUtils","getOptions","supportedLocales","fs","readdir","context","f","files","filter","chunk"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAAA;;AAC9C,MAAMC,QAAQ,GAAG,KAAKC,KAAL,EAAjB;AACA,MAAMC,MAAM,GAAGC,wBAAYC,UAAZ,CAAuB,IAAvB,KAAgC,EAA/C;AACA,MAAMC,gBAAgB,GAAGH,MAAM,CAACG,gBAAP,IAA2B,EAApD;;AACA,MAAI,8BAAaN,OAAb,CAAJ,EAA2B;AACzB;AAAA;AAAA,4BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACsBO,oBAAGC,OAAH,CAAW,KAAI,CAACC,OAAhB,CADtB;;AAAA;AAAA,4BACuD,UAAAC,CAAC;AAAA,uBAAI,8BAAaA,CAAb,CAAJ;AAAA,eADxD;;AAAA,4BAEG,gCAAaJ,gBAAb,CAFH;AACOK,cAAAA,KADP,iBACgDC,MADhD,cAC6EA,MAD7E;AAGCX,cAAAA,QAAQ,CAAC,IAAD,EAAO,uCAAsB;AACnCU,gBAAAA,KAAK,EAALA,KADmC;AAEnCE,gBAAAA,KAAK,EAAE,CAAC,4BAASb,OAAT;AAF2B,eAAtB,CAAP,CAAR;;AAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQD,GATD,MASO;AACLC,IAAAA,QAAQ,CAAC,IAAD,EAAOD,OAAP,CAAR;AACD;AACF,CAhBD","sourcesContent":["import fs from 'fs-extra';\nimport loaderUtils from 'loader-utils';\nimport generateLoaderContent from '../generateLoaderContent';\nimport isLocaleFile, { localeFilter } from '../isLocaleFile';\nimport isLoaderFile, { noChunks } from '../isLoaderFile';\n\nmodule.exports = function localeLoader(content) {\n  const callback = this.async();\n  const querys = loaderUtils.getOptions(this) || {};\n  const supportedLocales = querys.supportedLocales || [];\n  if (isLoaderFile(content)) {\n    (async () => {\n      const files = (await fs.readdir(this.context)).filter(f => isLocaleFile(f)).filter(\n        localeFilter(supportedLocales));\n      callback(null, generateLoaderContent({\n        files,\n        chunk: !noChunks(content),\n      }));\n    })();\n  } else {\n    callback(null, content);\n  }\n};\n"],"file":"index.js"}