{"version":3,"sources":["lib/exportLocale/index.js"],"names":["writeXlf","localizationFolder","xlfData","fs","ensureDirSync","locale","fileName","path","resolve","writeFileSync","Object","keys","exportLocale","sourceFolder","defaultConfig","sourceLocale","supportedLocales","exportType","fillEmptyWithSource","Error","localeData"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEO,SAASA,QAAT,OAGJ;AAAA,MAFDC,kBAEC,QAFDA,kBAEC;AAAA,MADDC,OACC,QADDA,OACC;;AACDC,sBAAGC,aAAH,CAAiBH,kBAAjB;;AACA,sBACE,UAACI,MAAD,EAAY;AACV,QAAMC,QAAQ,GAAGC,iBAAKC,OAAL,CAAaP,kBAAb,YAAoCI,MAApC,UAAjB;;AACAF,wBAAGM,aAAH,CAAiBH,QAAjB,EAA2BJ,OAAO,CAACG,MAAD,CAAlC;AACD,GAJH,EAKEK,MAAM,CAACC,IAAP,CAAYT,OAAZ,CALF;AAOD;;AAGc,SAASU,YAAT,GAOP;AAAA,kFAAJ,EAAI;AAAA,iCANNC,YAMM;AAAA,MANNA,YAMM,mCANSC,0BAAcD,YAMvB;AAAA,oCALNZ,kBAKM;AAAA,MALNA,kBAKM,sCALea,0BAAcb,kBAK7B;AAAA,iCAJNc,YAIM;AAAA,MAJNA,YAIM,mCAJSD,0BAAcC,YAIvB;AAAA,MAHNC,gBAGM,SAHNA,gBAGM;AAAA,+BAFNC,UAEM;AAAA,MAFNA,UAEM,iCAFO,MAEP;AAAA,oCADNC,mBACM;AAAA,MADNA,mBACM,sCADgB,IAChB;;AACN,MAAI,CAACF,gBAAL,EAAuB;AACrB,UAAM,IAAIG,KAAJ,CAAU,qCAAV,CAAN;AACD;;AACD,MAAMC,UAAU,GAAG,mCAAkB;AACnCP,IAAAA,YAAY,EAAZA,YADmC;AAEnCE,IAAAA,YAAY,EAAZA,YAFmC;AAGnCC,IAAAA,gBAAgB,EAAhBA;AAHmC,GAAlB,CAAnB;AAKA,MAAMd,OAAO,GAAG,iCAAgB;AAC9BkB,IAAAA,UAAU,EAAVA,UAD8B;AAE9BP,IAAAA,YAAY,EAAZA,YAF8B;AAG9BE,IAAAA,YAAY,EAAZA,YAH8B;AAI9BC,IAAAA,gBAAgB,EAAhBA,gBAJ8B;AAK9BC,IAAAA,UAAU,EAAVA,UAL8B;AAM9BC,IAAAA,mBAAmB,EAAnBA;AAN8B,GAAhB,CAAhB;AAQAlB,EAAAA,QAAQ,CAAC;AACPE,IAAAA,OAAO,EAAPA,OADO;AAEPD,IAAAA,kBAAkB,EAAlBA;AAFO,GAAD,CAAR;AAID","sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\nimport { forEach } from 'ramda';\nimport compileLocaleData from '../compileLocaleData';\nimport defaultConfig from '../defaultConfig';\nimport generateXlfData from '../generateXlfData';\n\nexport function writeXlf({\n  localizationFolder,\n  xlfData,\n}) {\n  fs.ensureDirSync(localizationFolder);\n  forEach(\n    (locale) => {\n      const fileName = path.resolve(localizationFolder, `${locale}.xlf`);\n      fs.writeFileSync(fileName, xlfData[locale]);\n    },\n    Object.keys(xlfData),\n  );\n}\n\n\nexport default function exportLocale({\n  sourceFolder = defaultConfig.sourceFolder,\n  localizationFolder = defaultConfig.localizationFolder,\n  sourceLocale = defaultConfig.sourceLocale,\n  supportedLocales,\n  exportType = 'diff',\n  fillEmptyWithSource = true,\n} = {}) {\n  if (!supportedLocales) {\n    throw new Error('options.supportedLocales is missing');\n  }\n  const localeData = compileLocaleData({\n    sourceFolder,\n    sourceLocale,\n    supportedLocales,\n  });\n  const xlfData = generateXlfData({\n    localeData,\n    sourceFolder,\n    sourceLocale,\n    supportedLocales,\n    exportType,\n    fillEmptyWithSource,\n  });\n  writeXlf({\n    xlfData,\n    localizationFolder,\n  });\n}\n"],"file":"index.js"}