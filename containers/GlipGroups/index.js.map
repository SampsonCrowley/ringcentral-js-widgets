{"version":3,"sources":["containers/GlipGroups/index.js"],"names":["mapToProps","_","phone","glipGroups","contacts","hiddenCurrentGroup","groups","groupsWithUnread","currentGroupId","searchFilter","currentPage","pageNumber","filteredContacts","contactSearchFilter","mapToFunctions","onSelectGroup","updateSearchFilter","updateFilter","onNextPage","updateContactSearchFilter","createTeam","teamName","selectedContacts","map","sc","email","groupId","GlipGroupsPage","GlipGroupsPanel"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAMG;AAAA,wBALDC,KAKC;AAAA,MAJCC,UAID,cAJCA,UAID;AAAA,MAHCC,QAGD,cAHCA,QAGD;AAAA,mCADDC,kBACC;AAAA,MADDA,kBACC,sCADoB,KACpB;AACD,SAAO;AACLC,IAAAA,MAAM,EAAEH,UAAU,CAACI,gBADd;AAELC,IAAAA,cAAc,EAAEH,kBAAkB,GAAG,IAAH,GAAUF,UAAU,CAACK,cAFlD;AAGLC,IAAAA,YAAY,EAAEN,UAAU,CAACM,YAHpB;AAILC,IAAAA,WAAW,EAAEP,UAAU,CAACQ,UAJnB;AAKLC,IAAAA,gBAAgB,EAAER,QAAQ,CAACQ,gBALtB;AAMLC,IAAAA,mBAAmB,EAAET,QAAQ,CAACK;AANzB,GAAP;AAQD;;AAED,SAASK,cAAT,CAAwBb,CAAxB,SAMG;AAAA,0BALDC,KAKC;AAAA,MAJCC,UAID,eAJCA,UAID;AAAA,MAHCC,QAGD,eAHCA,QAGD;AAAA,MADDW,aACC,SADDA,aACC;AACD,SAAO;AACLA,IAAAA,aAAa,EAAbA,aADK;AAELC,IAAAA,kBAFK,8BAEcP,YAFd,EAE4B;AAC/BN,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAER,QAAAA,YAAY,EAAZA;AAAF,OAAxB;AACD,KAJI;AAKLS,IAAAA,UALK,sBAKMP,UALN,EAKkB;AACrBR,MAAAA,UAAU,CAACc,YAAX,CAAwB;AAAEN,QAAAA,UAAU,EAAVA;AAAF,OAAxB;AACD,KAPI;AAQLQ,IAAAA,yBARK,qCAQqBV,YARrB,EAQmC;AACtCL,MAAAA,QAAQ,CAACa,YAAT,CAAsB;AAAER,QAAAA,YAAY,EAAZA;AAAF,OAAtB;AACD,KAVI;AAWCW,IAAAA,UAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWcC,gBAAAA,QAXd,SAWcA,QAXd,EAWwBC,gBAXxB,SAWwBA,gBAXxB;AAAA;AAAA,uBAYmBnB,UAAU,CAACiB,UAAX,CAAsBC,QAAtB,EAAgCC,gBAAgB,CAACC,GAAjB,CAAqB,UAAAC,EAAE;AAAA,yBAAIA,EAAE,CAACC,KAAP;AAAA,iBAAvB,CAAhC,CAZnB;;AAAA;AAYGC,gBAAAA,OAZH;AAaHX,gBAAAA,aAAa,CAACW,OAAD,CAAb;;AAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAAP;AAgBD;;AAED,IAAMC,cAAc,GAAG,2BAAU,yBAC/B3B,UAD+B,EAE/Bc,cAF+B,EAG/Bc,2BAH+B,CAAV,CAAvB;eAKeD,c","sourcesContent":["import { connect } from 'react-redux';\nimport withPhone from 'ringcentral-widgets/lib/withPhone';\n\nimport GlipGroupsPanel from '../../components/GlipGroupsPanel';\n\nfunction mapToProps(_, {\n  phone: {\n    glipGroups,\n    contacts,\n  },\n  hiddenCurrentGroup = false,\n}) {\n  return {\n    groups: glipGroups.groupsWithUnread,\n    currentGroupId: hiddenCurrentGroup ? null : glipGroups.currentGroupId,\n    searchFilter: glipGroups.searchFilter,\n    currentPage: glipGroups.pageNumber,\n    filteredContacts: contacts.filteredContacts,\n    contactSearchFilter: contacts.searchFilter,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    glipGroups,\n    contacts,\n  },\n  onSelectGroup,\n}) {\n  return {\n    onSelectGroup,\n    updateSearchFilter(searchFilter) {\n      glipGroups.updateFilter({ searchFilter });\n    },\n    onNextPage(pageNumber) {\n      glipGroups.updateFilter({ pageNumber });\n    },\n    updateContactSearchFilter(searchFilter) {\n      contacts.updateFilter({ searchFilter });\n    },\n    async createTeam({ teamName, selectedContacts }) {\n      const groupId = await glipGroups.createTeam(teamName, selectedContacts.map(sc => sc.email));\n      onSelectGroup(groupId);\n    }\n  };\n}\n\nconst GlipGroupsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(GlipGroupsPanel));\n\nexport default GlipGroupsPage;\n"],"file":"index.js"}