{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","currentLocale","localeReady","ready","composeText","serviceFeatures","extensionInfo","brand","data","hostCode","participantCode","allowJoinBeforeHost","phoneNumbers","countryCounter","acc","item","country","isoCode","dialInNumbers","countryName","countryNames","getString","region","location","phoneNumber","disableTxtBtn","SMS","enabled","Pager","dialInNumber","additionalNumbers","countryCode","areaCode","code","name","showSpinner","mapToFunctions","routerInteraction","call","alert","enableAutoEnterHostKey","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","push","joinAsHost","onJoinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","ConferencePanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { reduce, map } from 'ramda';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport countryNames from '../../lib/countryNames';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale: {\n      currentLocale,\n      ready: localeReady\n    },\n    composeText,\n    extensionInfo: { serviceFeatures },\n    brand\n  },\n}) {\n  const {\n    hostCode = '',\n    participantCode = '',\n    allowJoinBeforeHost = false,\n    phoneNumbers = [],\n  } = conference.data || {};\n  const countryCounter = reduce((acc, item) => {\n    if (!acc[item.country.isoCode]) {\n      acc[item.country.isoCode] = 1;\n    } else {\n      acc[item.country.isoCode] += 1;\n    }\n    return acc;\n  }, {}, phoneNumbers);\n  const dialInNumbers = map((item) => {\n    const countryName = countryNames.getString(item.country.isoCode, currentLocale);\n    // only show the provinces of canada\n    return {\n      region: countryCounter[item.country.isoCode] > 1 ?\n        `${countryName}, ${item.location}` :\n        countryName,\n      phoneNumber: item.phoneNumber\n    };\n  }, phoneNumbers);\n  const disableTxtBtn = (\n    (!serviceFeatures.SMS || !serviceFeatures.SMS.enabled) &&\n    (!serviceFeatures.Pager || !serviceFeatures.Pager.enabled)\n  );\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber || '',\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    disableTxtBtn,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale,\n    brand: {\n      code: brand.code,\n      name: brand.name\n    },\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      localeReady &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n    alert\n  },\n  enableAutoEnterHostKey = false,\n}) {\n  return {\n    alert(msg) {\n      alert.warning({ message: msg });\n    },\n    updateDialInNumber(dialInNumber) {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers(additionalDialInNumbers) {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText(text) {\n      composeText.updateMessageText(text);\n      // for track\n      conference.onInviteWithText();\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost() {\n      // for track\n      conference.onJoinAsHost();\n      routerInteraction.history.push('/dialer');\n      const phoneNumber = enableAutoEnterHostKey ?\n        `${conference.dialInNumber},,${conference.data.hostCode}#` :\n        conference.dialInNumber;\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange(allowJoinBeforeHost) {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands() {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"],"file":"index.js"}