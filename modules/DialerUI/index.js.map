{"version":3,"sources":["modules/DialerUI/index.js"],"names":["DialerUI","name","deps","dep","optional","alert","audioSettings","call","callingSettings","conferenceCall","connectivityMonitor","contactSearch","locale","rateLimiter","regionSettings","webphone","options","_alert","_audioSettings","_call","_callingSettings","_conferenceCall","_connectivityMonitor","_contactSearch","_locale","_rateLimiter","_regionSettings","_webphone","_reducer","actionTypes","_callHooks","store","dispatch","type","clearToNumberField","phoneNumber","toNumberField","setToNumberField","recipient","shouldClean","setRecipient","clearRecipient","fromNumber","hook","callSuccess","callError","error","lastRecipient","lastPhoneNumber","warning","message","callErrors","noToNumber","loadLastCallState","fromSessionId","trim","length","_loadLastPhoneNumber","_onBeforeCall","closeMergingPair","currentLocale","callingMode","isWebphoneMode","callButtonDisabled","isCallButtonDisabled","fromNumbers","toNumber","searchContactList","showSpinner","dialButtonVolume","dialButtonMuted","onToNumberChange","value","clearToNumber","onCallButtonClick","changeFromNumber","updateFromNumber","formatPhone","areaCode","countryCode","searchContact","searchString","debouncedSearch","Enum","state","callingModes","connected","connecting","userMedia","isIdle","connectivity","throttling","isWebphoneDisconnected","isAudioNotEnabled","ready","isWebphoneConnecting","RcUIModule","proxify","selector","sortedResult"],"mappings":"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","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\nimport Enum from 'ringcentral-integration/lib/Enum';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport { selector } from 'ringcentral-integration/lib/selector';\nimport RcUIModule from '../../lib/RcUIModule';\nimport getReducer from './getReducer';\n\n@Module({\n  name: 'DialerUI',\n  deps: [\n    'CallingSettings',\n    { dep: 'AudioSettings', optional: true },\n    'CallingSettings',\n    'ConnectivityMonitor',\n    { dep: 'ContactSearch', optional: true },\n    'Locale',\n    'RateLimiter',\n    'RegionSettings',\n    { dep: 'Webphone', optional: true },\n    'Alert',\n    'Call',\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'DialerUIOptions', optional: true },\n  ],\n})\nexport default class DialerUI extends RcUIModule {\n  constructor({\n    alert,\n    audioSettings,\n    call,\n    callingSettings,\n    conferenceCall,\n    connectivityMonitor,\n    contactSearch,\n    locale,\n    rateLimiter,\n    regionSettings,\n    webphone,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._alert = alert;\n    this._audioSettings = audioSettings;\n    this._call = call;\n    this._callingSettings = callingSettings;\n    this._conferenceCall = conferenceCall;\n    this._connectivityMonitor = connectivityMonitor;\n    this._contactSearch = contactSearch;\n    this._locale = locale;\n    this._rateLimiter = rateLimiter;\n    this._regionSettings = regionSettings;\n    this._webphone = webphone;\n    this._reducer = getReducer(this.actionTypes);\n    this._callHooks = [];\n  }\n\n  get _actionTypes() {\n    return new Enum(\n      [\n        'setToNumberField',\n        'clearToNumberField',\n        'setRecipient',\n        'clearRecipient',\n        'loadLastCallState',\n        'call',\n        'callError',\n        'callSuccess',\n      ],\n      'dialerUI',\n    );\n  }\n\n  @proxify\n  async clearToNumberField() {\n    this.store.dispatch({\n      type: this.actionTypes.clearToNumberField,\n    });\n  }\n\n  @proxify\n  async setToNumberField(phoneNumber) {\n    if (this.toNumberField !== phoneNumber) {\n      this.store.dispatch({\n        type: this.actionTypes.setToNumberField,\n        phoneNumber,\n      });\n    }\n  }\n\n  @proxify\n  async setRecipient(recipient, shouldClean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.setRecipient,\n      recipient,\n    });\n    if (shouldClean) {\n      await this.clearToNumberField();\n    }\n  }\n  @proxify\n  async clearRecipient() {\n    this.store.dispatch({\n      type: this.actionTypes.clearRecipient,\n    });\n  }\n\n  @proxify\n  async call({ phoneNumber = '', recipient = null, fromNumber = null }) {\n    if (phoneNumber || recipient) {\n      this.store.dispatch({\n        type: this.actionTypes.call,\n        phoneNumber,\n        recipient,\n      });\n      for (const hook of this._callHooks) {\n        await hook({\n          phoneNumber,\n          recipient,\n          fromNumber,\n        });\n      }\n      try {\n        await this._call.call({\n          phoneNumber: this.toNumberField,\n          recipient: this.recipient,\n          fromNumber,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.callSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actionTypes.callError,\n          error,\n        });\n      }\n    }\n  }\n\n  _loadLastPhoneNumber() {\n    if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\n      this._alert.warning({\n        message: callErrors.noToNumber,\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.loadLastCallState,\n        phoneNumber: this._call.lastPhoneNumber,\n        recipient: this._call.lastRecipient,\n      });\n    }\n  }\n\n  @proxify\n  async onCallButtonClick({ fromNumber, fromSessionId } = {}) {\n    if (`${this.toNumberField}`.trim().length === 0 && !this.recipient) {\n      this._loadLastPhoneNumber();\n    } else {\n      this._onBeforeCall(fromSessionId);\n      await this.call({\n        phoneNumber: this.toNumberField,\n        recipient: this.recipient,\n        fromNumber,\n      });\n    }\n  }\n\n  _onBeforeCall() {\n    if (this._conferenceCall) {\n      this._conferenceCall.closeMergingPair();\n    }\n  }\n\n  get toNumberField() {\n    return this.state.toNumberField;\n  }\n\n  get recipient() {\n    return this.state.recipient;\n  }\n\n  get isWebphoneMode() {\n    return this._callingSettings.callingMode === callingModes.webphone;\n  }\n\n  get isWebphoneDisconnected() {\n    return this.isWebphoneMode && !this._webphone.connected;\n  }\n\n  get isWebphoneConnecting() {\n    return this.isWebphoneMode && this._webphone.connecting;\n  }\n\n  get isAudioNotEnabled() {\n    return this.isWebphoneMode && !this._audioSettings.userMedia;\n  }\n\n  get isCallButtonDisabled() {\n    return (\n      !this._call.isIdle ||\n      !this._connectivityMonitor.connectivity ||\n      this._rateLimiter.throttling ||\n      this.isWebphoneDisconnected ||\n      this.isAudioNotEnabled\n    );\n  }\n\n  get showSpinner() {\n    return !(\n      this._call.ready &&\n      this._callingSettings.ready &&\n      this._locale.ready &&\n      this._connectivityMonitor.ready &&\n      (!this._audioSettings || this._audioSettings.ready) &&\n      !this.isWebphoneConnecting\n    );\n  }\n\n  @selector\n  searchContactList = [\n    () => this._contactSearch && this._contactSearch.sortedResult,\n    sortedResult => (sortedResult || []),\n  ]\n\n  getUIProps() {\n    return {\n      currentLocale: this._locale.currentLocale,\n      callingMode: this._callingSettings.callingMode,\n      isWebphoneMode: this.isWebphoneMode,\n      callButtonDisabled: this.isCallButtonDisabled,\n      fromNumber: this._callingSettings.fromNumber,\n      fromNumbers: this._callingSettings.fromNumbers,\n      toNumber: this.toNumberField,\n      recipient: this.recipient,\n      searchContactList: this.searchContactList,\n      showSpinner: this.showSpinner,\n      dialButtonVolume: this._audioSettings ? this._audioSettings.dialButtonVolume : 1,\n      dialButtonMuted: this._audioSettings ? this._audioSettings.dialButtonMuted : false,\n    };\n  }\n  getUIFunctions() {\n    return {\n      onToNumberChange: value => this.setToNumberField(value),\n      clearToNumber: () => this.clearToNumberField(),\n      onCallButtonClick: () => this.onCallButtonClick(),\n      changeFromNumber: (...args) => this._callingSettings.updateFromNumber(...args),\n      formatPhone: phoneNumber => formatNumber({\n        phoneNumber,\n        areaCode: this._regionSettings.areaCode,\n        countryCode: this._regionSettings.countryCode,\n      }),\n      setRecipient: recipient => this.setRecipient(recipient),\n      clearRecipient: () => this.clearRecipient(),\n      searchContact: searchString => (\n        this._contactSearch &&\n        this._contactSearch.debouncedSearch({ searchString })\n      ),\n    };\n  }\n}\n"],"file":"index.js"}