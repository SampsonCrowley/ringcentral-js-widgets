{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","onTransfer","sessionId","onMerge","onBeforeMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","afterOnMerge","hideMergeConfirm","hideMergeConfirmAlt","afterHideMergeConfirm","confirmMerge","afterConfirmMerge","nextProps","onKeyPadChange","onHangup","currentLocale","isOnFlip","flipNumbers","formatPhone","onFlip","showBackButton","backButtonLabel","onBackButtonClick","phoneNumber","callStatus","startTime","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onPark","onAdd","nameMatches","fallBackName","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","avatarUrl","brand","showContactDisplayPlaceholder","gotoParticipantsCtrl","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","direction","addDisabled","mergeDisabled","conferenceCallEquipped","conferenceCallParties","lastCallInfo","getAvatarUrl","actions","children","showSpinner","Component","propTypes","PropTypes","string","array","isRequired","number","bool","func","node","object","defaultProps","undefined","i"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n      isShowMergeConfirm: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true,\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false,\n      });\n    };\n\n    this.onTransfer = () => {\n      this.props.onTransfer(this.props.sessionId);\n    };\n\n    this.onMerge = () => {\n      const { onBeforeMerge } = this.props;\n      if (!onBeforeMerge || onBeforeMerge()) {\n        if (\n          this.props.hasConferenceCall &&\n          this.props.layout === callCtrlLayouts.normalCtrl\n        ) {\n          this.showMergeConfirm();\n        } else if (this.props.onMerge) {\n          this.props.onMerge();\n        }\n      }\n      // track user click merge\n      this.props.afterOnMerge();\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n\n    this.hideMergeConfirmAlt = () => {\n      this.hideMergeConfirm();\n      // user action track\n      this.props.afterHideMergeConfirm();\n    };\n\n    this.confirmMerge = () => {\n      this.setState({\n        isShowMergeConfirm: false\n      });\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n      // user action track\n      this.props.afterConfirmMerge();\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n    if (this.props.sessionId !== nextProps.sessionId) {\n      this.hiddenKeyPad();\n      this.hideFlipPanel();\n      this.hideMergeConfirm();\n    }\n  }\n\n  render() {\n    if (this.state.isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={this.props.onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={this.props.onHangup}\n          currentLocale={this.props.currentLocale}\n        />\n      );\n    }\n    if (this.state.isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={this.props.isOnFlip}\n          flipNumbers={this.props.flipNumbers}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          onFlip={this.props.onFlip}\n          complete={this.props.onHangup}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={this.props.backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={this.props.sessionId}\n        callStatus={this.props.callStatus}\n        startTime={this.props.startTime}\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        recordStatus={this.props.recordStatus}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={this.props.onHangup}\n        onPark={this.props.onPark}\n        onAdd={this.props.onAdd}\n        onMerge={this.onMerge}\n        nameMatches={this.props.nameMatches}\n        fallBackName={this.props.fallBackName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.props.selectedMatcherIndex}\n        onSelectMatcherName={this.props.onSelectMatcherName}\n        avatarUrl={this.props.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.onTransfer}\n        gotoParticipantsCtrl={this.props.gotoParticipantsCtrl}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.props.layout}\n        direction={this.props.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        actions={this.props.actions}\n      >\n        {this.props.children}\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        {this.props.layout === callCtrlLayouts.normalCtrl\n          ? <ConfirmMergeModal\n            currentLocale={this.props.currentLocale}\n            show={this.state.isShowMergeConfirm}\n            onMerge={this.confirmMerge}\n            onCancel={this.hideMergeConfirmAlt}\n            partyProfiles={this.props.conferenceCallParties}\n          />\n          : null\n        }\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func,\n  onStopRecord: PropTypes.func,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onPark: PropTypes.func,\n  onHangup: PropTypes.func.isRequired,\n  onFlip: PropTypes.func,\n  onTransfer: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onKeyPadChange: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  direction: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallParties: PropTypes.array,\n  getAvatarUrl: PropTypes.func,\n  gotoParticipantsCtrl: PropTypes.func,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  actions: PropTypes.array,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n  getAvatarUrl: () => null,\n  gotoParticipantsCtrl: i => i,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  onFlip: () => null,\n  onRecord: () => null,\n  onStopRecord: () => null,\n  onPark: () => null,\n  onKeyPadChange: () => null,\n  onSelectMatcherName: () => null,\n  actions: [],\n  recordStatus: '',\n};\n\nexport default CallCtrlPanel;\n"]}