{"version":3,"sources":["integration-test/mock/index.js"],"names":["mockServer","createSDK","options","opts","appKey","appSecret","server","Request","fetchMock","constructor","Response","Headers","fetch","bind","refreshDelayMs","redirectUri","cachePrefix","RingCentral","mockApi","method","path","url","body","status","statusText","headers","isOnce","responseHeaders","isJson","mockUrl","mock","once","JSON","stringify","sendAsJson","times","authentication","access_token","token_type","expires_in","refresh_token","refresh_token_expires_in","scope","expireTime","Date","getTime","owner_id","endpoint_id","logout","tokenRefresh","failure","message","error_description","description","presence","id","mockResponse","uri","extension","extensionNumber","activeCalls","presenceStatus","telephonyStatus","userStatus","dndStatus","extensionId","presenceUpdate","presenceBody","dialingPlan","dialingPlanBody","extensionInfo","extensionBody","conferenceCallBringIn","conferenceCallBringInBody","removeFromConference","partyId","extensionList","extensionListBody","extensionsList","extensionsListBody","accountInfo","accountBody","apiInfo","apiInfoBody","messageSync","messageSyncBody","messageList","messageListBody","updateMessageStatus","messageItemBody","authzProfile","authzProfileBody","blockedNumber","blockedNumberBody","forwardingNumber","forwardingNumberBody","phoneNumber","phoneNumberBody","accountPhoneNumber","accountPhoneNumberBody","subscription","subscriptionBody","numberParser","numberParserBody","sms","smsBody","addressBook","addressBookBody","syncInfo","syncType","syncToken","syncTime","now","toISOString","callLog","callLogBody","records","startTime","device","deviceBody","conferencing","conferencingBody","numberParse","homeCountry","numberParseBody","conferenceCall","conferenceCallBody","session","on","updateConferenceCall","terminateConferenceCall","activeCallsBody","restore","reset","mockForbidden","mockLimited","errorCode","errors","mockClient","client","service","ringOut","ringOutBody","ringOutUpdate","meeting","meetingBody","serviceInfo","serviceInfoBody","recentActivity","RegExp","mockForLogin","mockAuthzProfile","mockExtensionInfo","mockForwardingNumber","mockMessageSync","mockConferencing","mockActiveCalls","mockUpdateConference","mockNumberParser","mockRecentActivity","params","dialingPlanData","extensionInfoData","accountInfoData","apiInfoData","authzProfileData","deviceData","extensionListData","extensionsListData","accountPhoneNumberData","blockedNumberData","forwardingNumberData","messageListData","messageSyncData","phoneNumberData","subscriptionData","callLogData","addressBookData","conferencingData","activeCallsData","numberParseData","numberParseIsOnce","updateConferenceCallBody"],"mappings":"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","sourcesContent":["import fetchMock from 'fetch-mock';\nimport RingCentral from 'ringcentral';\n\nimport dialingPlanBody from './data/dialingPlan';\nimport extensionBody from './data/extensionInfo';\nimport extensionListBody from './data/extension';\nimport extensionsListBody from './data/extensions';\nimport accountBody from './data/accountInfo';\nimport subscriptionBody from './data/subscription';\nimport apiInfoBody from './data/apiInfo';\nimport messageSyncBody from './data/messageSync';\nimport authzProfileBody from './data/authzProfile';\nimport blockedNumberBody from './data/blockedNumber';\nimport forwardingNumberBody from './data/forwardingNumber';\nimport phoneNumberBody from './data/phoneNumber';\nimport accountPhoneNumberBody from './data/accountPhoneNumber';\nimport presenceBody from './data/presence.json';\nimport numberParserBody from './data/numberParser.json';\nimport smsBody from './data/sms.json';\nimport ringOutBody from './data/ringOut.json';\nimport messageItemBody from './data/messageItem.json';\nimport messageListBody from './data/messageList.json';\nimport addressBookBody from './data/addressBook.json';\nimport callLogBody from './data/callLog.json';\nimport deviceBody from './data/device.json';\nimport conferencingBody from './data/conferencing.json';\nimport activeCallsBody from './data/activeCalls.json';\nimport meetingBody from './data/meeting';\nimport serviceInfoBody from './data/serviceInfo';\nimport conferenceCallBody from './data/conferenceCall';\nimport numberParseBody from './data/numberParse';\nimport conferenceCallBringInBody from './data/conferenceCallBringIn';\nimport updateConferenceCallBody from './data/updateConference';\n\nconst mockServer = 'http://whatever';\nexport function createSDK(options = {}) {\n  const opts = {\n    ...options,\n    appKey: 'test key',\n    appSecret: 'test secret',\n    server: mockServer,\n    Request: fetchMock.constructor.Request,\n    Response: fetchMock.constructor.Response,\n    Headers: fetchMock.constructor.Headers,\n    fetch: fetchMock.fetchMock.bind(fetchMock),\n    refreshDelayMs: 1,\n    redirectUri: 'http://foo',\n    cachePrefix: 'sdkPrefix',\n  };\n  return new RingCentral(opts);\n}\n\nexport function mockApi({\n  method = 'GET',\n  path,\n  server = mockServer,\n  url,\n  body = {},\n  status = 200,\n  statusText = 'OK',\n  headers,\n  isOnce = true,\n}) {\n  let responseHeaders;\n  const isJson = typeof body !== 'string';\n  if (isJson && !headers) {\n    responseHeaders = {\n      'Content-Type': 'application/json'\n    };\n  } else {\n    responseHeaders = headers;\n  }\n  let mockUrl;\n  if (url) {\n    mockUrl = url;\n  } else {\n    mockUrl = `${server}${path}`;\n  }\n  const mock = isOnce ? fetchMock.once.bind(fetchMock) : fetchMock.mock.bind(fetchMock);\n  mock(mockUrl, {\n    body: isJson ? JSON.stringify(body) : body,\n    status,\n    statusText,\n    headers: responseHeaders,\n    sendAsJson: false\n  }, {\n    method,\n    times: isOnce ? 1 : 20,\n  });\n}\n\nexport function authentication() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/token',\n    body: {\n      access_token: 'ACCESS_TOKEN',\n      token_type: 'bearer',\n      expires_in: 3600,\n      refresh_token: 'REFRESH_TOKEN',\n      refresh_token_expires_in: 60480,\n      scope: 'SMS RCM Foo Boo',\n      expireTime: new Date().getTime() + 3600000,\n      owner_id: '23231231\"',\n      endpoint_id: '3213213131',\n    }\n  });\n}\n\nexport function logout() {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/oauth/revoke',\n    isOnce: false,\n  });\n}\n\nexport function tokenRefresh(failure) {\n  if (!failure) {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        access_token: 'ACCESS_TOKEN_FROM_REFRESH',\n        token_type: 'bearer',\n        expires_in: 3600,\n        refresh_token: 'REFRESH_TOKEN_FROM_REFRESH',\n        refresh_token_expires_in: 60480,\n        scope: 'SMS RCM Foo Boo'\n      }\n    });\n  } else {\n    mockApi({\n      method: 'POST',\n      path: '/restapi/oauth/token',\n      body: {\n        message: 'Wrong token',\n        error_description: 'Wrong token',\n        description: 'Wrong token'\n      },\n      status: 400,\n    });\n  }\n}\n\nexport function presence(id, mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/${id}/presence`,\n    body: {\n      uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}/presence`,\n      extension: {\n        uri: `https://platform.ringcentral.com/restapi/v1.0/account/123/extension/${id}`,\n        extensionNumber: '101',\n        id,\n      },\n      activeCalls: [],\n      presenceStatus: 'Available',\n      telephonyStatus: 'Ringing',\n      userStatus: 'Available',\n      dndStatus: 'TakeAllCalls',\n      extensionId: id,\n      ...mockResponse\n    }\n  });\n}\n\nexport function presenceUpdate(id, mockResponse = {}) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/extension/${id}/presence`,\n    method: 'PUT',\n    body: {\n      ...presenceBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function dialingPlan(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/dialing-plan?perPage=MAX&page=1',\n    body: {\n      ...dialingPlanBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function extensionInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~',\n    body: {\n      ...extensionBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function conferenceCallBringIn(id, mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/bring-in`,\n    body: {\n      ...conferenceCallBringInBody,\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\nexport function removeFromConference(id, partyId) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}/parties/${partyId}`\n  });\n}\nexport function extensionList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension?`,\n    body: {\n      ...extensionListBody,\n      ...mockResponse,\n    }\n  });\n}\nexport function extensionsList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/directory/contacts?`,\n    body: {\n      ...extensionsListBody,\n      ...mockResponse,\n    }\n  });\n}\nexport function accountInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~',\n    body: {\n      ...accountBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function apiInfo(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0',\n    body: {\n      ...apiInfoBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function messageSync(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-sync`,\n    body: {\n      ...messageSyncBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\n\nexport function messageList(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store?`,\n    body: {\n      ...messageListBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\n\nexport function updateMessageStatus(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/message-store/`,\n    method: 'PUT',\n    body: {\n      ...messageItemBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\n\nexport function authzProfile(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/authz-profile',\n    body: {\n      ...authzProfileBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function blockedNumber(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/blocked-number',\n    body: {\n      ...blockedNumberBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function forwardingNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/forwarding-number`,\n    body: {\n      ...forwardingNumberBody,\n      ...mockResponse\n    }\n  });\n}\n\nexport function phoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/phone-number`,\n    body: {\n      ...phoneNumberBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function accountPhoneNumber(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/phone-number`,\n    body: {\n      ...accountPhoneNumberBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\n\nexport function subscription(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n  mockApi({\n    method: 'PUT',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n  mockApi({\n    method: 'DELETE',\n    url: `begin:${mockServer}/restapi/v1.0/subscription`,\n    body: {\n      ...subscriptionBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\n\nexport function numberParser(mockResponse = {}, isOnce = true) {\n  mockApi({\n    method: 'POST',\n    url: `begin:${mockServer}/restapi/v1.0/number-parser/`,\n    body: {\n      ...numberParserBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\n\nexport function sms(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/extension/~/sms',\n    body: {\n      ...smsBody,\n      ...mockResponse,\n    }\n  });\n}\nexport function addressBook(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/address-book-sync`,\n    body: {\n      ...addressBookBody,\n      ...{\n        syncInfo: {\n          syncType: addressBookBody.syncInfo.syncType,\n          syncToken: addressBookBody.syncInfo.syncToken,\n          syncTime: ((new Date(Date.now()))).toISOString()\n        }\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\n\nexport function callLog(mockResponse = {}) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/call-log-sync`,\n    body: {\n      ...callLogBody,\n      records: [\n        {\n          ...callLogBody.records[0],\n          startTime: ((new Date(Date.now()))).toISOString(),\n        },\n        {\n          ...callLogBody.records[1],\n          startTime: ((new Date(Date.now()))).toISOString(),\n        }\n      ],\n      ...{\n        syncInfo: {\n          syncType: callLogBody.syncInfo.syncType,\n          syncToken: callLogBody.syncInfo.syncToken,\n          syncTime: ((new Date(Date.now()))).toISOString()\n        }\n      },\n      ...mockResponse,\n    },\n    isOnce: false,\n  });\n}\n\nexport function device(mockResponse = {}, isOnce = true) {\n  mockApi({\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/device`,\n    body: {\n      ...deviceBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\n\nexport function conferencing(mockResponse = {}) {\n  mockApi({\n    path: '/restapi/v1.0/account/~/extension/~/conferencing',\n    body: {\n      ...conferencingBody,\n      ...mockResponse,\n    }\n  });\n}\n\n// TODO: replace it with numberParser\nexport function numberParse(mockResponse = {}, homeCountry) {\n  mockApi({\n    method: 'POST',\n    path: `/restapi/v1.0/number-parser/parse?homeCountry=${homeCountry}`,\n    body: {\n      ...numberParseBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\n\nexport function conferenceCall(mockResponse = {}) {\n  conferenceCallBody.session.on = () => { };\n  mockApi({\n    method: 'POST',\n    path: '/restapi/v1.0/account/~/telephony/conference',\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\n\nexport function updateConferenceCall(id, mockResponse = {}, isOnce = false) {\n  mockApi({\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      // ...conferenceCallBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\n\nexport function terminateConferenceCall(id, mockResponse = {}) {\n  mockApi({\n    method: 'DELETE',\n    path: `/restapi/v1.0/account/~/telephony/sessions/${id}`,\n    body: {\n      ...conferenceCallBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function activeCalls(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/active-calls`,\n    body: {\n      ...activeCallsBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function restore() {\n  fetchMock.restore();\n}\n\nexport function reset() {\n  fetchMock.reset();\n}\n\nexport function mockForbidden({\n  method = 'GET',\n  path,\n  url,\n  body = ''\n}) {\n  mockApi({\n    method,\n    path,\n    body,\n    url,\n    status: 403,\n  });\n}\n\n\nexport function mockLimited({\n  method = 'GET',\n  path,\n  url,\n}) {\n  mockApi({\n    method,\n    path,\n    url,\n    status: 503,\n    body: {\n      errorCode: 'CMN-211',\n      errors: [{ errorCode: 'CMN-211' }]\n    },\n  });\n}\n\nexport function mockClient(client) {\n  client.service = createSDK({});\n}\n\nexport function ringOut(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/ring-out`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    }\n  });\n}\n\nexport function ringOutUpdate(mockResponse = {}) {\n  mockApi({\n    isOnce: false,\n    url: `begin:${mockServer}/restapi/v1.0/account/~/extension/~/ring-out/`,\n    body: {\n      ...ringOutBody,\n      ...mockResponse,\n    }\n  });\n}\nexport function meeting(mockResponse = {}) {\n  mockApi({\n    method: 'POST',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting`,\n    body: {\n      ...meetingBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\nexport function serviceInfo(mockResponse = {}) {\n  mockApi({\n    method: 'GET',\n    url: `${mockServer}/restapi/v1.0/account/~/extension/~/meeting/service-info`,\n    body: {\n      ...serviceInfoBody,\n      ...mockResponse,\n    },\n    isOnce: false\n  });\n}\nexport function recentActivity(mockResponse = {}, isOnce = false) {\n  mockApi({\n    method: 'GET',\n    url: new RegExp(`${mockServer}/restapi/v1.0/account/~/extension/~/call-log`),\n    body: {\n      ...callLogBody,\n      ...mockResponse,\n    },\n    isOnce\n  });\n}\nexport function mockForLogin({\n  mockAuthzProfile = true,\n  mockExtensionInfo = true,\n  mockForwardingNumber = true,\n  mockMessageSync = true,\n  mockConferencing = true,\n  mockActiveCalls = true,\n  mockUpdateConference = false,\n  mockNumberParser = true,\n  mockRecentActivity = true,\n  ...params\n} = {}) {\n  authentication();\n  logout();\n  tokenRefresh();\n  presence('~');\n  dialingPlan(params.dialingPlanData);\n  if (mockExtensionInfo) {\n    extensionInfo(params.extensionInfoData);\n  }\n  accountInfo(params.accountInfoData);\n  apiInfo(params.apiInfoData);\n  if (mockAuthzProfile) {\n    authzProfile(params.authzProfileData);\n  }\n  device(params.deviceData);\n  extensionList(params.extensionListData);\n  extensionsList(params.extensionsListData);\n  accountPhoneNumber(params.accountPhoneNumberData);\n  blockedNumber(params.blockedNumberData);\n  if (mockForwardingNumber) {\n    forwardingNumber(params.forwardingNumberData);\n  }\n  messageList(params.messageListData);\n  if (mockMessageSync) {\n    messageSync(params.messageSyncData);\n  }\n  phoneNumber(params.phoneNumberData);\n  subscription(params.subscriptionData);\n  callLog(params.callLogData);\n  addressBook(params.addressBookData);\n  if (mockConferencing) {\n    conferencing(params.conferencingData);\n  }\n  if (mockActiveCalls) {\n    activeCalls(params.activeCallsData);\n  }\n  if (mockNumberParser) {\n    numberParser(params.numberParseData, params.numberParseIsOnce);\n  }\n  if (mockUpdateConference) {\n    conferenceCall();\n    updateConferenceCall(updateConferenceCallBody.id, updateConferenceCallBody);\n  }\n  if (mockRecentActivity) {\n    recentActivity();\n  }\n}\n"],"file":"index.js"}