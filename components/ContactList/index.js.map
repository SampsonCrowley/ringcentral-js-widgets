{"version":3,"sources":["components/ContactList/index.js"],"names":["CAPTION_HEIGHT","ROW_HEIGHT","NoContacts","currentLocale","styles","noContacts","i18n","getString","propTypes","PropTypes","string","isRequired","ContactList","props","calculateRowHeight","index","state","captionRows","findGroup","item","startIndex","contacts","length","groups","rowGetter","caption","group","onScroll","scrollTop","setState","cellRenderer","rowData","groupCaption","getAvatarUrl","getPresence","onItemSelect","sourceNodeRenderer","type","id","onRowsRendered","groupIndex","captions","previousCaption","currentCaption","headerRenderer","getDerivedStateFromProps","list","React","createRef","prevProps","lastContactGroups","contactGroups","current","recomputeRowHeights","width","height","count","content","renderList","root","nextState","push","rowOffset","Component","arrayOf","shape","ContactItem","contact","func","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Column } from 'react-virtualized';\nimport { reduce, find, findIndex } from 'ramda';\nimport ContactItem from '../ContactItem';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst CAPTION_HEIGHT = 20;\nconst ROW_HEIGHT = 50;\n\nfunction NoContacts({ currentLocale }) {\n  return (\n    <p className={styles.noContacts}>\n      {i18n.getString('noContacts', currentLocale)}\n    </p>\n  );\n}\nNoContacts.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class ContactList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ContactList.getDerivedStateFromProps(props);\n    this.list = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state = { scrollTop: 0, currentCaption: '' }) {\n    if (props.contactGroups !== state.lastContactGroups) {\n      return {\n        ...reduce(\n          (nextState, group) => {\n            nextState.captions.push(group.caption);\n\n            // skip the caption row for the first group\n            const rowOffset = nextState.groups.length !== 0 ?\n              1 :\n              0;\n            if (rowOffset) {\n              nextState.captionRows[nextState.count] = group.caption;\n            }\n            nextState.groups.push({\n              ...group,\n              startIndex: nextState.count + rowOffset,\n            });\n            nextState.count += group.contacts.length + rowOffset; // with caption row\n            return nextState;\n          },\n          {\n            ...state,\n            groups: [],\n            captions: [],\n            captionRows: {},\n            count: 0,\n          },\n          props.contactGroups,\n        ),\n        lastContactGroups: props.contactGroups,\n      };\n    }\n    return state;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.lastContactGroups !== prevProps.contactGroups) {\n      if (this.list && this.list.current && this.list.current.recomputeRowHeights) {\n        this.list.current.recomputeRowHeights(0);\n      }\n    }\n  }\n\n  calculateRowHeight = ({ index }) => {\n    if (this.state.captionRows[index]) {\n      return CAPTION_HEIGHT;\n    }\n    return ROW_HEIGHT;\n  }\n\n  findGroup = ({ index }) => find(\n    item => (\n      index >= item.startIndex\n        && index < item.startIndex + item.contacts.length\n    ),\n    this.state.groups,\n  )\n\n  rowGetter = ({ index }) => {\n    if (this.state.captionRows[index]) {\n      return {\n        caption: this.state.captionRows[index],\n      };\n    }\n    const group = this.findGroup({ index });\n    return group.contacts[index - group.startIndex];\n  }\n\n  onScroll = ({ scrollTop }) => {\n    if (scrollTop !== this.state.scrollTop) {\n      this.setState({\n        scrollTop,\n      });\n    }\n  }\n\n  resetScrollTop() {\n    this.setState({\n      scrollTop: 0,\n    });\n  }\n\n  cellRenderer = ({\n    rowData,\n  }) => {\n    if (rowData.caption) {\n      return (\n        <div\n          className={styles.groupCaption}\n        >\n          {rowData.caption}\n        </div>\n      );\n    }\n    const {\n      currentLocale,\n      getAvatarUrl,\n      getPresence,\n      onItemSelect,\n      sourceNodeRenderer,\n    } = this.props;\n    return (\n      <div\n        key={`${rowData.type}-${rowData.id}`}\n      >\n        <ContactItem\n          currentLocale={currentLocale}\n          contact={rowData}\n          getAvatarUrl={getAvatarUrl}\n          getPresence={getPresence}\n          onSelect={onItemSelect}\n          sourceNodeRenderer={sourceNodeRenderer}\n        />\n      </div>\n    );\n  }\n\n  onRowsRendered = ({ startIndex }) => {\n    // update header with the correct caption\n    if (this.state.captionRows[startIndex]) {\n      const groupIndex = findIndex(\n        item => item === this.state.captionRows[startIndex],\n        this.state.captions,\n      );\n      const previousCaption = this.state.captions[groupIndex - 1];\n      if (previousCaption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: previousCaption,\n        });\n      }\n    } else {\n      const group = this.findGroup({ index: startIndex });\n      if (group.caption !== this.state.currentCaption) {\n        this.setState({\n          currentCaption: group.caption,\n        });\n      }\n    }\n  }\n\n  headerRenderer = () => (\n    <div\n      className={styles.groupCaption}\n    >\n      {this.state.currentCaption}\n    </div>\n  )\n\n  renderList() {\n    // use table instead of list to allow caption header\n    return (\n      <Table\n        ref={this.list}\n        headerHeight={CAPTION_HEIGHT}\n        width={this.props.width}\n        height={this.props.height}\n        rowCount={this.state.count}\n        rowHeight={this.calculateRowHeight}\n        rowGetter={this.rowGetter}\n        onRowsRendered={this.onRowsRendered}\n        onScroll={this.onScroll}\n        scrollTop={this.state.scrollTop}\n      >\n        <Column\n          dataKey=\"caption\"\n          disableSort\n          flexGrow={1}\n          width={this.props.width}\n          cellRenderer={this.cellRenderer}\n          headerRenderer={this.headerRenderer}\n        />\n      </Table>\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      contactGroups,\n      width,\n      height,\n    } = this.props;\n    let content = null;\n    if (width !== 0 && height !== 0) {\n      content = contactGroups.length ?\n        this.renderList() :\n        (\n          <NoContacts\n            currentLocale={currentLocale}\n          />\n        );\n    }\n    return (\n      <div\n        className={styles.root}\n      >\n        {content}\n      </div>\n    );\n  }\n}\n\nContactList.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactGroups: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    contacts: PropTypes.arrayOf(ContactItem.propTypes.contact).isRequired,\n  })).isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  getPresence: PropTypes.func.isRequired,\n  onItemSelect: PropTypes.func,\n  sourceNodeRenderer: PropTypes.func,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nContactList.defaultProps = {\n  onItemSelect: undefined,\n  sourceNodeRenderer: undefined\n};\n"],"file":"index.js"}