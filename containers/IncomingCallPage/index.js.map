{"version":3,"sources":["containers/IncomingCallPage/index.js"],"names":["IncomingCallPage","props","answer","session","id","reject","toVoiceMail","replyWithMessage","message","toggleMinimized","answerAndEnd","hangup","activeSessionId","answerAndHold","onHold","onForward","forwardNumber","state","selectedMatcherIndex","avatarUrl","hasOtherActiveCall","onSelectMatcherName","option","nameMatches","findIndex","match","setState","contact","updateSessionMatchedContact","getAvatarUrl","then","_mounted","_updateAvatarAndMatchIndex","nextProps","contactMatch","active","minimized","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","formatPhone","areaCode","countryCode","forwardingNumbers","brand","showContactDisplayPlaceholder","sourceIcons","searchContact","searchContactList","phoneTypeRenderer","phoneSourceNameRenderer","children","Component","propTypes","PropTypes","shape","string","startTime","number","isOnMute","bool","isOnHold","isOnRecord","object","isRequired","func","node","array","defaultProps","undefined","mapToProps","_","phone","webphone","locale","contactMatcher","contactSearch","regionSettings","forwardingNumber","currentSession","ringingCallOnView","contactMapping","dataMapping","fromMatches","toMatches","fullName","sortedResult","mapToFunctions","conferenceCall","sessionId","closeMergingPair","forward","hold","pattern","debouncedSearch","searchString","IncomingCallContainer"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport IncomingCallPanel from '../../components/IncomingCallPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nimport i18n from './i18n';\n\nclass IncomingCallPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      hasOtherActiveCall: false,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n  }\n\n  answer = () => this.props.answer(this.props.session.id);\n  reject = () => this.props.reject(this.props.session.id);\n  toVoiceMail = () => this.props.toVoiceMail(this.props.session.id);\n  replyWithMessage = message =>\n    this.props.replyWithMessage(this.props.session.id, message);\n  toggleMinimized = () =>\n    this.props.toggleMinimized(this.props.session.id);\n  answerAndEnd = async () => {\n    await this.props.hangup(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  answerAndHold = async () => {\n    await this.props.onHold(this.props.activeSessionId);\n    await this.props.answer(this.props.session.id);\n  };\n  onForward = forwardNumber =>\n    this.props.onForward(this.props.session.id, forwardNumber);\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n    this.setState({\n      hasOtherActiveCall: !!nextProps.activeSessionId,\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let selectedMatcherIndex = 0;\n    let contact = props.session.contactMatch;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    const active = !!session.id;\n    if (!active) {\n      return null;\n    }\n    if (session.minimized) {\n      return null;\n    }\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n    return (\n      <IncomingCallPanel\n        currentLocale={this.props.currentLocale}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        phoneNumber={phoneNumber}\n        answer={this.answer}\n        reject={this.reject}\n        replyWithMessage={this.replyWithMessage}\n        toVoiceMail={this.toVoiceMail}\n        formatPhone={this.props.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        onBackButtonClick={this.toggleMinimized}\n        forwardingNumbers={this.props.forwardingNumbers}\n        onForward={this.onForward}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        hasOtherActiveCall={this.state.hasOtherActiveCall}\n        answerAndEnd={this.answerAndEnd}\n        answerAndHold={this.answerAndHold}\n        sessionId={this.props.session.id}\n        sourceIcons={this.props.sourceIcons}\n        searchContact={this.props.searchContact}\n        searchContactList={this.props.searchContactList}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n      >\n        {this.props.children}\n      </IncomingCallPanel>\n    );\n  }\n}\n\nIncomingCallPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnRecord: PropTypes.bool,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  toggleMinimized: PropTypes.func.isRequired,\n  answer: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  onForward: PropTypes.func.isRequired,\n  toVoiceMail: PropTypes.func.isRequired,\n  replyWithMessage: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  forwardingNumbers: PropTypes.array.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  brand: PropTypes.string.isRequired,\n  activeSessionId: PropTypes.string,\n  sourceIcons: PropTypes.object,\n  hangup: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n};\n\nIncomingCallPage.defaultProps = {\n  children: undefined,\n  activeSessionId: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n};\n\nfunction mapToProps(_, {\n  phone: {\n    webphone,\n    locale,\n    contactMatcher,\n    contactSearch,\n    regionSettings,\n    forwardingNumber,\n    brand,\n  },\n  showContactDisplayPlaceholder = false,\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n}) {\n  const currentSession = webphone.ringingCallOnView || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    activeSessionId: webphone.activeSessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    forwardingNumbers: forwardingNumber.forwardingNumbers,\n    showContactDisplayPlaceholder,\n    searchContactList: contactSearch.sortedResult,\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    webphone,\n    regionSettings,\n    contactSearch,\n    conferenceCall,\n  },\n  getAvatarUrl = () => null,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    answer(sessionId) {\n      if (conferenceCall) {\n        conferenceCall.closeMergingPair();\n      }\n      webphone.answer(sessionId);\n    },\n    reject: sessionId => webphone.reject(sessionId),\n    toVoiceMail: sessionId => webphone.toVoiceMail(sessionId),\n    onForward: (sessionId, forwardNumber) => webphone.forward(sessionId, forwardNumber),\n    replyWithMessage: (sessionId, message) => webphone.replyWithMessage(sessionId, message),\n    toggleMinimized: sessionId => webphone.toggleMinimized(sessionId),\n    updateSessionMatchedContact: (sessionId, contact) =>\n      webphone.updateSessionMatchedContact(sessionId, contact),\n    getAvatarUrl,\n    hangup: sessionId => webphone.hangup(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    searchContact: pattern => contactSearch.debouncedSearch({ searchString: pattern })\n  };\n}\n\nconst IncomingCallContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(IncomingCallPage));\n\nexport default IncomingCallContainer;\n\n"],"file":"index.js"}