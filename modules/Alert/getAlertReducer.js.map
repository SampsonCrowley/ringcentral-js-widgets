{"version":3,"sources":["modules/Alert/getAlertReducer.js"],"names":["getMessagesReducer","types","state","type","message","payload","ttl","level","ids","timestamp","id","allowDuplicates","alert","find","item","dismiss","filter","indexOf","dismissAll","getAlertReducer","messages"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAEO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO,YAGF;AAAA,QAFHC,KAEG,uEAFK,EAEL;;AAAA;AAAA,QADDC,IACC,QADDA,IACC;AAAA,QADKC,OACL,QADKA,OACL;AAAA,QADcC,OACd,QADcA,OACd;AAAA,QADuBC,GACvB,QADuBA,GACvB;AAAA,QAD4BC,KAC5B,QAD4BA,KAC5B;AAAA,QADmCC,GACnC,QADmCA,GACnC;AAAA,QADwCC,SACxC,QADwCA,SACxC;AAAA,QADmDC,EACnD,QADmDA,EACnD;AAAA,QADuDC,eACvD,QADuDA,eACvD;;AACH,YAAQR,IAAR;AACE,WAAKF,KAAK,CAACW,KAAX;AACE,YACE,CAACD,eAAD,IACAT,KAAK,CAACW,IAAN,CAAW,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACV,OAAL,KAAiBA,OAAjB,IAA4BU,IAAI,CAACP,KAAL,KAAeA,KAArD;AAAA,SAAX,CAFF,EAGE;AACA,iBAAOL,KAAP;AACD;;AACD,4CACKA,KADL,IAEE;AACEQ,UAAAA,EAAE,EAAFA,EADF;AAEEN,UAAAA,OAAO,EAAPA,OAFF;AAGEC,UAAAA,OAAO,EAAPA,OAHF;AAIEC,UAAAA,GAAG,EAAHA,GAJF;AAKEC,UAAAA,KAAK,EAALA,KALF;AAMEE,UAAAA,SAAS,EAATA;AANF,SAFF;;AAWF,WAAKR,KAAK,CAACc,OAAX;AACE,eAAOb,KAAK,CAACc,MAAN,CAAa,UAACF,IAAD;AAAA,iBAAUN,GAAG,CAACS,OAAJ,CAAYH,IAAI,CAACJ,EAAjB,MAAyB,CAAC,CAApC;AAAA,SAAb,CAAP;;AACF,WAAKT,KAAK,CAACiB,UAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOhB,KAAP;AAxBJ;AA0BD,GA9BD;AA+BD;;AAEc,SAASiB,eAAT,CAAyBlB,KAAzB,EAAgC;AAC7C,SAAO,4BAAgB;AACrBmB,IAAAA,QAAQ,EAAEpB,kBAAkB,CAACC,KAAD;AADP,GAAhB,CAAP;AAGD","sourcesContent":["import { combineReducers } from 'redux';\n\nexport function getMessagesReducer(types) {\n  return (\n    state = [],\n    { type, message, payload, ttl, level, ids, timestamp, id, allowDuplicates },\n  ) => {\n    switch (type) {\n      case types.alert:\n        if (\n          !allowDuplicates &&\n          state.find((item) => item.message === message && item.level === level)\n        ) {\n          return state;\n        }\n        return [\n          ...state,\n          {\n            id,\n            message,\n            payload,\n            ttl,\n            level,\n            timestamp,\n          },\n        ];\n      case types.dismiss:\n        return state.filter((item) => ids.indexOf(item.id) === -1);\n      case types.dismissAll:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAlertReducer(types) {\n  return combineReducers({\n    messages: getMessagesReducer(types),\n  });\n}\n"],"file":"getAlertReducer.js"}