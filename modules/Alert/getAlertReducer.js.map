{"version":3,"sources":["modules/Alert/getAlertReducer.js"],"names":["getMessagesReducer","types","state","type","message","payload","ttl","level","ids","timestamp","id","allowDuplicates","alert","find","item","dismiss","filter","indexOf","dismissAll","getAlertReducer","messages"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAEO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO,YAUD;AAAA,QAVEC,KAUF,uEAVU,EAUV;;AAAA;AAAA,QATJC,IASI,QATJA,IASI;AAAA,QARJC,OAQI,QARJA,OAQI;AAAA,QAPJC,OAOI,QAPJA,OAOI;AAAA,QANJC,GAMI,QANJA,GAMI;AAAA,QALJC,KAKI,QALJA,KAKI;AAAA,QAJJC,GAII,QAJJA,GAII;AAAA,QAHJC,SAGI,QAHJA,SAGI;AAAA,QAFJC,EAEI,QAFJA,EAEI;AAAA,QADJC,eACI,QADJA,eACI;;AACJ,YAAQR,IAAR;AACE,WAAKF,KAAK,CAACW,KAAX;AACE,YAAI,CAACD,eAAD,IAAoBT,KAAK,CAACW,IAAN,CAAW,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACV,OAAL,KAAiBA,OAArB;AAAA,SAAf,CAAxB,EAAsE;AACpE,iBAAOF,KAAP;AACD;;AACD,4CACKA,KADL,IAEE;AACEQ,UAAAA,EAAE,EAAFA,EADF;AAEEN,UAAAA,OAAO,EAAPA,OAFF;AAGEC,UAAAA,OAAO,EAAPA,OAHF;AAIEC,UAAAA,GAAG,EAAHA,GAJF;AAKEC,UAAAA,KAAK,EAALA,KALF;AAMEE,UAAAA,SAAS,EAATA;AANF,SAFF;;AAWF,WAAKR,KAAK,CAACc,OAAX;AACE,eAAOb,KAAK,CAACc,MAAN,CAAa,UAAAF,IAAI;AAAA,iBAAIN,GAAG,CAACS,OAAJ,CAAYH,IAAI,CAACJ,EAAjB,MAAyB,CAAC,CAA9B;AAAA,SAAjB,CAAP;;AACF,WAAKT,KAAK,CAACiB,UAAX;AACE,eAAO,EAAP;;AACF;AACE,eAAOhB,KAAP;AArBJ;AAuBD,GAlCD;AAmCD;;AAEc,SAASiB,eAAT,CAAyBlB,KAAzB,EAAgC;AAC7C,SAAO,4BAAgB;AACrBmB,IAAAA,QAAQ,EAAEpB,kBAAkB,CAACC,KAAD;AADP,GAAhB,CAAP;AAGD","sourcesContent":["import { combineReducers } from 'redux';\nimport 'core-js/fn/array/find';\n\nexport function getMessagesReducer(types) {\n  return (state = [], {\n    type,\n    message,\n    payload,\n    ttl,\n    level,\n    ids,\n    timestamp,\n    id,\n    allowDuplicates,\n  }) => {\n    switch (type) {\n      case types.alert:\n        if (!allowDuplicates && state.find(item => item.message === message)) {\n          return state;\n        }\n        return [\n          ...state,\n          {\n            id,\n            message,\n            payload,\n            ttl,\n            level,\n            timestamp,\n          },\n        ];\n      case types.dismiss:\n        return state.filter(item => ids.indexOf(item.id) === -1);\n      case types.dismissAll:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getAlertReducer(types) {\n  return combineReducers({\n    messages: getMessagesReducer(types),\n  });\n}\n\n"],"file":"getAlertReducer.js"}