{"version":3,"sources":["modules/BlockedNumber/index.js"],"names":["BlockedNumber","deps","dep","optional","client","rolesAndPermissions","options","fetchFunction","params","_client","account","extension","blockedNumber","list","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","ensureExist","permissions","ReadBlockedNumbers","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAYqBA,a;AAXrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,sBAAP;AAA+BC,IAAAA,QAAQ,EAAE;AAAzC,GAHI;AADA,CAAP,C;;;;;AAQC;;;;;AAKA,+BAIG;AAAA;;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,mBAEC,QAFDA,mBAEC;AAAA,QADEC,OACF;;AAAA;;AACD,yGACKA,OADL;AAEEF,MAAAA,MAAM,EAANA,MAFF;AAGEG,MAAAA,aAAa;AAAA;AAAA;AAAA,gCAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAY,wBAAU,UAAAC,MAAM;AAAA,2BACzC,MAAKC,OAAL,CAAaC,OAAb,GAAuBC,SAAvB,GAAmCC,aAAnC,GAAmDC,IAAnD,CAAwDL,MAAxD,CADyC;AAAA,mBAAhB,CAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAMEM,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA,OANhB;AAOEC,MAAAA,YAAY,EAAE;AAPhB;;AADC;;AAWD,UAAKF,oBAAL,GAA4B,oEAAMG,oBAAN,kBAAkBb,mBAAlB,EAAuC,qBAAvC,CAA5B;AAXC;AAYF;;;;wBAEW;AACV,aAAO,eAAP;AACD;;;wBAQoB;AACnB,aAAO,CAAC,CAAC,KAAKU,oBAAL,CAA0BI,WAA1B,CAAsCC,kBAA/C;AACD;;;;EApCwCC,qB,mFA4BxCC,kB;;;;;;;WACS,CACR;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KADQ,EAER,UAAAA,IAAI;AAAA,aAAIA,IAAI,IAAI,EAAZ;AAAA,KAFI,C","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n/**\n * @class\n * @description Blocked number list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'BlockedNumberOptions', optional: true }\n  ]\n})\nexport default class BlockedNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      ...options,\n      client,\n      fetchFunction: async () => fetchList(params => (\n        this._client.account().extension().blockedNumber().list(params)\n      )),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n    });\n\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n  }\n\n  get _name() {\n    return 'blockedNumber';\n  }\n\n  @selector\n  numbers = [\n    () => this.data,\n    data => data || [],\n  ]\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadBlockedNumbers;\n  }\n}\n"],"file":"index.js"}