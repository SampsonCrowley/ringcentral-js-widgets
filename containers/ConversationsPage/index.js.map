{"version":3,"sources":["containers/ConversationsPage/index.js"],"names":["mapToProps","_","phone","brand","locale","conversations","contactMatcher","dateTimeFormat","regionSettings","rolesAndPermissions","call","conversationLogger","connectivityMonitor","rateLimiter","messageStore","connectivityManager","showTitle","enableContactFallback","showGroupNumberName","serviceFeatures","permissions","readTextPermissions","voicemailPermissions","readFaxPermissions","fullName","currentLocale","pagingConversations","areaCode","countryCode","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","disableClickToDial","isIdle","outboundSmsPermission","OutboundSMS","internalSmsPermission","InternalSMS","composeTextPermission","Pager","enabled","SMS","loggingMap","showSpinner","ready","searchInput","autoLog","typeFilter","textUnreadCounts","voiceUnreadCounts","faxUnreadCounts","readTextPermission","readVoicemailPermission","readFaxPermission","loadingNextPage","loadingOldConversations","mapToFunctions","dialerUI","routerInteraction","composeText","contactSearch","showViewContact","dateTimeFormatter","formatDateTime","dialerRoute","onCreateContact","onLogConversation","isLoggedContact","onViewContact","conversationDetailRoute","composeTextRoute","previewFaxMessages","contact","id","type","push","phoneNumber","name","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","undefined","onClickToDial","callingEnabled","recipient","onClickToCall","fromType","onClickToSms","hasComposeTextPermission","isDummyContact","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","onClickToSMS","redirect","options","logConversation","onSearchInputChange","e","updateSearchInput","currentTarget","value","showConversationDetail","conversationId","replace","readMessage","readMessages","markMessage","unreadMessage","unmarkMessage","onUnmarkMessages","goToComposeText","updateTypeFilter","deleteMessage","deleteCoversation","uri","window","open","loadNextPage","onUnmount","currentPage","resetCurrentPage","MessagesPanel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAGO,SAASA,UAAT,CAAoBC,CAApB,QAmBJ;AAAA,wBAlBDC,KAkBC;AAAA,MAjBCC,KAiBD,cAjBCA,KAiBD;AAAA,MAhBCC,MAgBD,cAhBCA,MAgBD;AAAA,MAfCC,aAeD,cAfCA,aAeD;AAAA,MAdCC,cAcD,cAdCA,cAcD;AAAA,MAbCC,cAaD,cAbCA,cAaD;AAAA,MAZCC,cAYD,cAZCA,cAYD;AAAA,MAXCC,mBAWD,cAXCA,mBAWD;AAAA,MAVCC,IAUD,cAVCA,IAUD;AAAA,MATCC,kBASD,cATCA,kBASD;AAAA,MARCC,mBAQD,cARCA,mBAQD;AAAA,MAPCC,WAOD,cAPCA,WAOD;AAAA,MANCC,YAMD,cANCA,YAMD;AAAA,MALCC,mBAKD,cALCA,mBAKD;AAAA,4BAHDC,SAGC;AAAA,MAHDA,SAGC,+BAHW,KAGX;AAAA,mCAFDC,qBAEC;AAAA,MAFDA,qBAEC,sCAFuB,KAEvB;AAAA,mCADDC,mBACC;AAAA,MADDA,mBACC,sCADqB,KACrB;AAAA,MAECC,eAFD,GAOGV,mBAPH,CAECU,eAFD;AAAA,MAGCC,WAHD,GAOGX,mBAPH,CAGCW,WAHD;AAAA,MAICC,mBAJD,GAOGZ,mBAPH,CAICY,mBAJD;AAAA,MAKCC,oBALD,GAOGb,mBAPH,CAKCa,oBALD;AAAA,MAMCC,kBAND,GAOGd,mBAPH,CAMCc,kBAND;AAQD,SAAQ;AACNP,IAAAA,SAAS,EAATA,SADM;AAENC,IAAAA,qBAAqB,EAArBA,qBAFM;AAGNC,IAAAA,mBAAmB,EAAnBA,mBAHM;AAINf,IAAAA,KAAK,EAAEA,KAAK,CAACqB,QAJP;AAKNC,IAAAA,aAAa,EAAErB,MAAM,CAACqB,aALhB;AAMNpB,IAAAA,aAAa,EAAEA,aAAa,CAACqB,mBANvB;AAONC,IAAAA,QAAQ,EAAEnB,cAAc,CAACmB,QAPnB;AAQNC,IAAAA,WAAW,EAAEpB,cAAc,CAACoB,WARtB;AASNC,IAAAA,YAAY,EACVd,mBAAmB,CAACe,aAApB,IACAf,mBAAmB,CAACgB,cADpB,IAEAlB,WAAW,CAACmB,UAZR;AAaNC,IAAAA,iBAAiB,EACflB,mBAAmB,CAACe,aAApB,IACAf,mBAAmB,CAACmB,yBADpB,IAEAnB,mBAAmB,CAACoB,sBAFpB,IAGAtB,WAAW,CAACmB,UAjBR;AAkBNI,IAAAA,kBAAkB,EAAE,EAAE1B,IAAI,IAAIA,IAAI,CAAC2B,MAAf,CAlBd;AAmBNC,IAAAA,qBAAqB,EAAE,CAAC,EACtBlB,WAAW,IACXA,WAAW,CAACmB,WAFU,CAnBlB;AAuBNC,IAAAA,qBAAqB,EAAE,CAAC,EACtBpB,WAAW,IACXA,WAAW,CAACqB,WAFU,CAvBlB;AA2BNC,IAAAA,qBAAqB,EAAE,CAAC,EACtBvB,eAAe,KAEZA,eAAe,CAACwB,KAAhB,IAAyBxB,eAAe,CAACwB,KAAhB,CAAsBC,OAAhD,IACCzB,eAAe,CAAC0B,GAAhB,IAAuB1B,eAAe,CAAC0B,GAAhB,CAAoBD,OAH/B,CADO,CA3BlB;AAkCNE,IAAAA,UAAU,EAAGnC,kBAAkB,IAAIA,kBAAkB,CAACmC,UAlChD;AAmCNC,IAAAA,WAAW,EAAE,EACX3C,MAAM,CAAC4C,KAAP,IACA3C,aAAa,CAAC2C,KADd,KAEC,CAAC1C,cAAD,IAAmBA,cAAc,CAAC0C,KAFnC,KAGAzC,cAAc,CAACyC,KAHf,IAIAxC,cAAc,CAACwC,KAJf,IAKAvC,mBAAmB,CAACuC,KALpB,IAMApC,mBAAmB,CAACoC,KANpB,IAOAnC,WAAW,CAACmC,KAPZ,KAQC,CAACvC,mBAAD,IAAwBA,mBAAmB,CAACuC,KAR7C,MASC,CAACtC,IAAD,IAASA,IAAI,CAACsC,KATf,MAUC,CAACrC,kBAAD,IAAuBA,kBAAkB,CAACqC,KAV3C,CADW,CAnCP;AAgDNC,IAAAA,WAAW,EAAE5C,aAAa,CAAC4C,WAhDrB;AAiDNC,IAAAA,OAAO,EAAE,CAAC,EAAEvC,kBAAkB,IAAIA,kBAAkB,CAACuC,OAA3C,CAjDJ;AAkDNC,IAAAA,UAAU,EAAE9C,aAAa,CAAC8C,UAlDpB;AAmDNC,IAAAA,gBAAgB,EAAEtC,YAAY,CAACsC,gBAnDzB;AAoDNC,IAAAA,iBAAiB,EAAEvC,YAAY,CAACuC,iBApD1B;AAqDNC,IAAAA,eAAe,EAAExC,YAAY,CAACwC,eArDxB;AAsDNC,IAAAA,kBAAkB,EAAElC,mBAtDd;AAuDNmC,IAAAA,uBAAuB,EAAElC,oBAvDnB;AAwDNmC,IAAAA,iBAAiB,EAAElC,kBAxDb;AAyDNmC,IAAAA,eAAe,EAAErD,aAAa,CAACsD;AAzDzB,GAAR;AA2DD;;AAEM,SAASC,cAAT,CAAwB3D,CAAxB,SAwBJ;AAAA,0BAvBDC,KAuBC;AAAA,MAtBCK,cAsBD,eAtBCA,cAsBD;AAAA,MArBCF,aAqBD,eArBCA,aAqBD;AAAA,MApBCS,YAoBD,eApBCA,YAoBD;AAAA,MAnBCH,kBAmBD,eAnBCA,kBAmBD;AAAA,MAlBCL,cAkBD,eAlBCA,cAkBD;AAAA,MAjBCI,IAiBD,eAjBCA,IAiBD;AAAA,MAhBCmD,QAgBD,eAhBCA,QAgBD;AAAA,MAfCC,iBAeD,eAfCA,iBAeD;AAAA,MAdCC,WAcD,eAdCA,WAcD;AAAA,MAbCC,aAaD,eAbCA,aAaD;AAAA,MAZCvD,mBAYD,eAZCA,mBAYD;AAAA,oCAVDwD,eAUC;AAAA,MAVDA,eAUC,sCAViB,IAUjB;AAAA,oCATDC,iBASC;AAAA,MATDA,iBASC,sCATmB;AAAA,WAAa3D,cAAc,CAAC4D,cAAf,OAAA5D,cAAc,YAA3B;AAAA,GASnB;AAAA,gCARD6D,WAQC;AAAA,MARDA,WAQC,kCARa,SAQb;AAAA,MAPDC,eAOC,SAPDA,eAOC;AAAA,MANDC,iBAMC,SANDA,iBAMC;AAAA,MALDC,eAKC,SALDA,eAKC;AAAA,MAJDC,aAIC,SAJDA,aAIC;AAAA,oCAHDC,uBAGC;AAAA,MAHDA,uBAGC,sCAHyB,iCAGzB;AAAA,oCAFDC,gBAEC;AAAA,MAFDA,gBAEC,sCAFkB,cAElB;AAAA,MADDC,mBACC,SADDA,kBACC;AACD,SAAO;AACLT,IAAAA,iBAAiB,EAAjBA,iBADK;AAELM,IAAAA,aAAa,EAAEP,eAAe,GAAIO,aAAa,IAAK,iBAA+B;AAAA,gCAA5BI,OAA4B;AAAA,UAAjBC,EAAiB,iBAAjBA,EAAiB;AAAA,UAAbC,IAAa,iBAAbA,IAAa;AACjFhB,MAAAA,iBAAiB,CAACiB,IAAlB,qBAAoCD,IAApC,cAA4CD,EAA5C;AACD,KAF6B,GAExB,IAJD;AAKLR,IAAAA,eAAe,EAAEA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,8BAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASW,gBAAAA,WAAT,SAASA,WAAT,EAAsBC,IAAtB,SAAsBA,IAAtB,EAA4BC,UAA5B,SAA4BA,UAA5B;AAAA;AAAA,uBAC+B5E,cAAc,CAAC6E,cAAf,CAA8B;AACzDH,kBAAAA,WAAW,EAAXA,WADyD;AAEzDI,kBAAAA,WAAW,EAAE;AAF4C,iBAA9B,CAD/B;;AAAA;AACQD,gBAAAA,cADR;;AAAA,oBAMOA,cANP;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOUd,eAAe,CAAC;AAAEW,kBAAAA,WAAW,EAAXA,WAAF;AAAeC,kBAAAA,IAAI,EAAJA,IAAf;AAAqBC,kBAAAA,UAAU,EAAVA;AAArB,iBAAD,CAPzB;;AAAA;AAAA;AAAA,uBAQU5E,cAAc,CAAC+E,gBAAf,CAAgC;AAAEL,kBAAAA,WAAW,EAAXA;AAAF,iBAAhC,CARV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD8B;;AAAA;AAAA;AAAA;AAAA,UAY9BM,SAjBG;AAkBLC,IAAAA,aAAa,EAAE1B,QAAQ,IAAIpD,mBAAmB,CAAC+E,cAAhC,GACb,UAACC,SAAD,EAAe;AACb,UAAI/E,IAAI,CAAC2B,MAAT,EAAiB;AACfyB,QAAAA,iBAAiB,CAACiB,IAAlB,CAAuBX,WAAvB,EADe,CAEf;;AACAtD,QAAAA,YAAY,CAAC4E,aAAb,CAA2B;AAAEC,UAAAA,QAAQ,EAAEF,SAAS,CAACE;AAAtB,SAA3B;AACA9B,QAAAA,QAAQ,CAACnD,IAAT,CAAc;AAAE+E,UAAAA,SAAS,EAATA;AAAF,SAAd;AACD;AACF,KARY,GASbH,SA3BG;AA4BLM,IAAAA,YAAY,EAAEnF,mBAAmB,CAACoF,wBAApB,GACZ,UAACjB,OAAD,EAAqC;AAAA,UAA3BkB,cAA2B,uEAAV,KAAU;;AACnC,UAAIhC,iBAAJ,EAAuB;AACrBA,QAAAA,iBAAiB,CAACiB,IAAlB,CAAuBL,gBAAvB;AACD,OAHkC,CAInC;;;AACA,UAAIE,OAAO,CAACK,IAAR,IAAgBL,OAAO,CAACI,WAAxB,IAAuCc,cAA3C,EAA2D;AACzD/B,QAAAA,WAAW,CAACgC,oBAAZ,CAAiCnB,OAAO,CAACK,IAAzC;AACAjB,QAAAA,aAAa,CAACgC,MAAd,CAAqB;AAAEC,UAAAA,YAAY,EAAErB,OAAO,CAACK;AAAxB,SAArB;AACD,OAHD,MAGO;AACLlB,QAAAA,WAAW,CAACmC,WAAZ,CAAwBtB,OAAxB;;AACA,YAAIb,WAAW,CAACoC,cAAZ,KAA+BvB,OAAO,CAACI,WAA3C,EAAwD;AACtDjB,UAAAA,WAAW,CAACqC,mBAAZ;AACD;AACF,OAbkC,CAcnC;;;AACAtF,MAAAA,YAAY,CAACuF,YAAb;AACD,KAjBW,GAkBZf,SA9CG;AA+CLf,IAAAA,eAAe,EAAfA,eA/CK;AAgDLD,IAAAA,iBAAiB,EAAEA,iBAAiB,IACnC3D,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAS2F,QAAT,EAASA,QAAT,+BAAoB,IAApB,mBAA6BC,OAA7B;AAAA;AAAA,uBAChB5F,kBAAkB,CAAC6F,eAAnB,mBACDD,OADC;AAEJD,kBAAAA,QAAQ,EAARA;AAFI,mBADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;AAAA,OAjDd;AAuDLG,IAAAA,mBAvDK,+BAuDeC,CAvDf,EAuDkB;AACrBrG,MAAAA,aAAa,CAACsG,iBAAd,CAAgCD,CAAC,CAACE,aAAF,CAAgBC,KAAhD;AACD,KAzDI;AA0DLC,IAAAA,sBA1DK,kCA0DkBC,cA1DlB,EA0DkC;AACrCjD,MAAAA,iBAAiB,CAACiB,IAAlB,CACEN,uBAAuB,CAACuC,OAAxB,CAAgC,kBAAhC,EAAoDD,cAApD,CADF;AAGD,KA9DI;AA+DLE,IAAAA,WA/DK,uBA+DOF,cA/DP,EA+DuB;AAC1BjG,MAAAA,YAAY,CAACoG,YAAb,CAA0BH,cAA1B;AACD,KAjEI;AAkELI,IAAAA,WAlEK,uBAkEOJ,cAlEP,EAkEuB;AAC1BjG,MAAAA,YAAY,CAACsG,aAAb,CAA2BL,cAA3B;AACD,KApEI;AAqELM,IAAAA,aArEK,yBAqESN,cArET,EAqEyB;AAC5BjG,MAAAA,YAAY,CAACoG,YAAb,CAA0BH,cAA1B;AACAjG,MAAAA,YAAY,CAACwG,gBAAb;AACD,KAxEI;AAyELC,IAAAA,eAAe,EAAE;AAAA,aAAMzD,iBAAiB,CAACiB,IAAlB,CAAuBL,gBAAvB,CAAN;AAAA,KAzEZ;AA0EL8C,IAAAA,gBAAgB,EAAE,0BAAA1C,IAAI;AAAA,aAAIzE,aAAa,CAACmH,gBAAd,CAA+B1C,IAA/B,CAAJ;AAAA,KA1EjB;AA2EL2C,IAAAA,aA3EK,yBA2ESV,cA3ET,EA2EyB;AAC5B1G,MAAAA,aAAa,CAACqH,iBAAd,CAAgCX,cAAhC;AACD,KA7EI;AA8ELpC,IAAAA,kBA9EK,8BA8EcgD,GA9Ed,EA8EmBZ,cA9EnB,EA8EmC;AACtC,UAAI,CAACpC,mBAAL,EAAyB;AACvBiD,QAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ;AACD,OAFD,MAEO;AACLhD,QAAAA,mBAAkB,CAACgD,GAAD,CAAlB;AACD;;AACD7G,MAAAA,YAAY,CAACoG,YAAb,CAA0BH,cAA1B;AACD,KArFI;AAsFCe,IAAAA,YAtFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAuFGzH,aAAa,CAACyH,YAAd,EAvFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyFLC,IAAAA,SAzFK,uBAyFO;AACV,UAAI1H,aAAa,CAAC2H,WAAd,GAA4B,CAAhC,EAAmC;AACjC3H,QAAAA,aAAa,CAAC4H,gBAAd;AACD;AACF;AA7FI,GAAP;AA+FD;;eACc,6BAAU,yBACvBjI,UADuB,EAEvB4D,cAFuB,EAGvBsE,8BAHuB,CAAV,C","sourcesContent":["import { connect } from 'react-redux';\nimport MessagesPanel from '../../components/ConversationsPanel';\nimport { withPhone } from '../../lib/phoneContext';\nimport callingSettings from '../../../ringcentral-integration/integration-test/spec-modules/callingSettings';\n\nexport function mapToProps(_, {\n  phone: {\n    brand,\n    locale,\n    conversations,\n    contactMatcher,\n    dateTimeFormat,\n    regionSettings,\n    rolesAndPermissions,\n    call,\n    conversationLogger,\n    connectivityMonitor,\n    rateLimiter,\n    messageStore,\n    connectivityManager,\n  },\n  showTitle = false,\n  enableContactFallback = false,\n  showGroupNumberName = false,\n}) {\n  const {\n    serviceFeatures,\n    permissions,\n    readTextPermissions,\n    voicemailPermissions,\n    readFaxPermissions,\n  } = rolesAndPermissions;\n  return ({\n    showTitle,\n    enableContactFallback,\n    showGroupNumberName,\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    conversations: conversations.pagingConversations,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    disableLinks:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isVoipOnlyMode ||\n      rateLimiter.throttling,\n    disableCallButton:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isWebphoneUnavailableMode ||\n      connectivityManager.isWebphoneInitializing ||\n      rateLimiter.throttling,\n    disableClickToDial: !(call && call.isIdle),\n    outboundSmsPermission: !!(\n      permissions &&\n      permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      permissions &&\n      permissions.InternalSMS\n    ),\n    composeTextPermission: !!(\n      serviceFeatures &&\n      (\n        (serviceFeatures.Pager && serviceFeatures.Pager.enabled) ||\n        (serviceFeatures.SMS && serviceFeatures.SMS.enabled)\n      )\n    ),\n    loggingMap: (conversationLogger && conversationLogger.loggingMap),\n    showSpinner: !(\n      locale.ready &&\n      conversations.ready &&\n      (!contactMatcher || contactMatcher.ready) &&\n      dateTimeFormat.ready &&\n      regionSettings.ready &&\n      rolesAndPermissions.ready &&\n      connectivityMonitor.ready &&\n      rateLimiter.ready &&\n      (!rolesAndPermissions || rolesAndPermissions.ready) &&\n      (!call || call.ready) &&\n      (!conversationLogger || conversationLogger.ready)\n    ),\n    searchInput: conversations.searchInput,\n    autoLog: !!(conversationLogger && conversationLogger.autoLog),\n    typeFilter: conversations.typeFilter,\n    textUnreadCounts: messageStore.textUnreadCounts,\n    voiceUnreadCounts: messageStore.voiceUnreadCounts,\n    faxUnreadCounts: messageStore.faxUnreadCounts,\n    readTextPermission: readTextPermissions,\n    readVoicemailPermission: voicemailPermissions,\n    readFaxPermission: readFaxPermissions,\n    loadingNextPage: conversations.loadingOldConversations,\n  });\n}\n\nexport function mapToFunctions(_, {\n  phone: {\n    dateTimeFormat,\n    conversations,\n    messageStore,\n    conversationLogger,\n    contactMatcher,\n    call,\n    dialerUI,\n    routerInteraction,\n    composeText,\n    contactSearch,\n    rolesAndPermissions,\n  },\n  showViewContact = true,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  dialerRoute = '/dialer',\n  onCreateContact,\n  onLogConversation,\n  isLoggedContact,\n  onViewContact,\n  conversationDetailRoute = '/conversations/{conversationId}',\n  composeTextRoute = '/composeText',\n  previewFaxMessages,\n}) {\n  return {\n    dateTimeFormatter,\n    onViewContact: showViewContact ? (onViewContact || (({ contact: { id, type } }) => {\n      routerInteraction.push(`/contacts/${type}/${id}?direct=true`);\n    })) : null,\n    onCreateContact: onCreateContact ?\n      async ({ phoneNumber, name, entityType }) => {\n        const hasMatchNumber = await contactMatcher.hasMatchNumber({\n          phoneNumber,\n          ignoreCache: true\n        });\n        // console.debug('confirm hasMatchNumber:', hasMatchNumber);\n        if (!hasMatchNumber) {\n          await onCreateContact({ phoneNumber, name, entityType });\n          await contactMatcher.forceMatchNumber({ phoneNumber });\n        }\n      } :\n      undefined,\n    onClickToDial: dialerUI && rolesAndPermissions.callingEnabled ?\n      (recipient) => {\n        if (call.isIdle) {\n          routerInteraction.push(dialerRoute);\n          // for track router\n          messageStore.onClickToCall({ fromType: recipient.fromType });\n          dialerUI.call({ recipient });\n        }\n      } :\n      undefined,\n    onClickToSms: rolesAndPermissions.hasComposeTextPermission ?\n      (contact, isDummyContact = false) => {\n        if (routerInteraction) {\n          routerInteraction.push(composeTextRoute);\n        }\n        // if contact autocomplete, if no match fill the number only\n        if (contact.name && contact.phoneNumber && isDummyContact) {\n          composeText.updateTypingToNumber(contact.name);\n          contactSearch.search({ searchString: contact.name });\n        } else {\n          composeText.addToNumber(contact);\n          if (composeText.typingToNumber === contact.phoneNumber) {\n            composeText.cleanTypingToNumber();\n          }\n        }\n        // for track\n        messageStore.onClickToSMS();\n      } :\n      undefined,\n    isLoggedContact,\n    onLogConversation: onLogConversation ||\n    (conversationLogger && (async ({ redirect = true, ...options }) => {\n      await conversationLogger.logConversation({\n        ...options,\n        redirect,\n      });\n    })),\n    onSearchInputChange(e) {\n      conversations.updateSearchInput(e.currentTarget.value);\n    },\n    showConversationDetail(conversationId) {\n      routerInteraction.push(\n        conversationDetailRoute.replace('{conversationId}', conversationId)\n      );\n    },\n    readMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n    },\n    markMessage(conversationId) {\n      messageStore.unreadMessage(conversationId);\n    },\n    unmarkMessage(conversationId) {\n      messageStore.readMessages(conversationId);\n      messageStore.onUnmarkMessages();\n    },\n    goToComposeText: () => routerInteraction.push(composeTextRoute),\n    updateTypeFilter: type => conversations.updateTypeFilter(type),\n    deleteMessage(conversationId) {\n      conversations.deleteCoversation(conversationId);\n    },\n    previewFaxMessages(uri, conversationId) {\n      if (!previewFaxMessages) {\n        window.open(uri);\n      } else {\n        previewFaxMessages(uri);\n      }\n      messageStore.readMessages(conversationId);\n    },\n    async loadNextPage() {\n      await conversations.loadNextPage();\n    },\n    onUnmount() {\n      if (conversations.currentPage > 2) {\n        conversations.resetCurrentPage();\n      }\n    }\n  };\n}\nexport default withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(MessagesPanel));\n"],"file":"index.js"}