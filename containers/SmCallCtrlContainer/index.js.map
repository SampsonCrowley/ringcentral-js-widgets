{"version":3,"sources":["containers/SmCallCtrlContainer/index.js"],"names":["mapToProps","_","phone","activeCallControl","activeSessions","mapToFunctions","mute","bind","unmute","hangUp","reject","getActiveSession","SmCallCtrlContainer","props","currentLocale","sessionId","currentSession","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","callDirection","direction","Component","propTypes","PropTypes","string","object","status","func","isRequired","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file small call contrl\n * detail: https://jira.ringcentral.com/browse/RCINT-8248\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport SmCallContrl from '../../components/SmCallControl';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, { phone }) {\n  const {\n    activeCallControl,\n  } = phone;\n  const { activeSessions } = activeCallControl;\n  return {\n    activeCallControl,\n    activeSessions\n  };\n}\n\nfunction mapToFunctions(_, { phone }) {\n  const { activeCallControl } = phone;\n  return {\n    mute: activeCallControl.mute.bind(activeCallControl),\n    unmute: activeCallControl.unmute.bind(activeCallControl),\n    hangUp: activeCallControl.hangUp.bind(activeCallControl),\n    reject: activeCallControl.reject.bind(activeCallControl),\n    getActiveSession: activeCallControl.getActiveSession.bind(activeCallControl)\n  };\n}\n\n/* eslint-disable react/prefer-stateless-function */\nclass SmCallCtrlContainer extends Component {\n  render() {\n    const {\n      currentLocale,\n      sessionId,\n    } = this.props;\n    const currentSession = this.props.getActiveSession(sessionId);\n    if (!currentSession) {\n      return null;\n    }\n    const props = {\n      onMute: async () => this.props.mute(sessionId),\n      onUnmute: async () => this.props.unmute(sessionId),\n      onHangup: async () => this.props.hangUp(sessionId),\n      onReject: async () => this.props.reject(sessionId),\n      isOnMute: currentSession.isOnMute,\n      callStatus: currentSession.callStatus,\n      callDirection: currentSession.direction,\n      currentLocale\n    };\n    return <SmCallContrl {...props} />;\n  }\n}\nSmCallCtrlContainer.propTypes = {\n  currentLocale: PropTypes.string,\n  activeCallControl: PropTypes.object,\n  activeSessions: PropTypes.object,\n  sessionId: PropTypes.string,\n  status: PropTypes.string,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  hangUp: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  getActiveSession: PropTypes.func,\n};\n\nSmCallCtrlContainer.defaultProps = {\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSessions: {},\n  sessionId: '',\n  status: '',\n  getActiveSession: () => null\n};\nexport default withPhone(connect(mapToProps, mapToFunctions)(SmCallCtrlContainer));\n"]}