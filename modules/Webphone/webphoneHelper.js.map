{"version":3,"sources":["modules/Webphone/webphoneHelper.js"],"names":["isBrowserSupport","extractHeadersData","normalizeSession","isRing","isOnHold","sortByCreationTimeDesc","sortByLastActiveTimeDesc","isConferenceSession","isRecording","isChrome","navigator","userAgent","match","chromeVersion","parseInt","session","headers","raw","data","split","map","sub","reduce","accum","key","value","length","__rc_partyData","__rc_callId","id","callId","direction","__rc_direction","callStatus","__rc_callStatus","to","request","uri","user","toUserName","displayName","from","fromNumber","__rc_fromNumber","fromUserName","startTime","Date","getTime","creationTime","__rc_creationTime","local","isOnMute","__rc_isOnMute","isOnFlip","__rc_isOnFlip","isOnTransfer","__rc_isOnTransfer","isToVoicemail","__rc_isToVoicemail","isForwarded","__rc_isForwarded","isReplied","__rc_isReplied","recordStatus","__rc_recordStatus","idle","contactMatch","__rc_contactMatch","minimized","__rc_minimized","partyData","lastActiveTime","__rc_lastActiveTime","cached","removed","callDirections","inbound","sessionStatus","connecting","onHold","l","r","indexOf","pending","recording"],"mappings":"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","file":"webphoneHelper.js","sourcesContent":["import recordStatus from './recordStatus';\nimport sessionStatus from './sessionStatus';\nimport { camelize } from '../../lib/di/utils/utils';\nimport callDirections from '../../enums/callDirections';\n\nexport function isBrowserSupport() {\n  const isChrome = !!(navigator.userAgent.match(/Chrom(e|ium)/));\n  if (!isChrome) {\n    return false;\n  }\n  const chromeVersion =\n    parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n  if (chromeVersion >= 51) {\n    return true;\n  }\n  return false;\n}\n\nexport function extractHeadersData(session, headers) {\n  if (\n    headers\n    && headers['P-Rc-Api-Ids']\n    && headers['P-Rc-Api-Ids'][0]\n    && headers['P-Rc-Api-Ids'][0].raw\n  ) {\n    /**\n     * interface PartyData {\n     *  \"partyId\": String,\n     *  \"sessionId\": String\n     * }\n     *\n     * INFO: partyId is ID of the participant in current Session. Mostly it represents User on the call,\n     * it could be active participant (talking right now) or already disconnected User,\n     * e.g. who made a transfer to another person.\n     * To identify the User who owns the party you need to find owner.extensionId within party.\n     */\n    const data = headers['P-Rc-Api-Ids'][0].raw\n      .split(';')\n      .map(sub => sub.split('='))\n      .reduce((accum, [key, value]) => {\n        accum[camelize(key)] = value;\n        return accum;\n      }, {});\n\n    if (Object.keys(data).length) {\n      session.__rc_partyData = data;\n    }\n  }\n\n  if (\n    headers\n    && headers['Call-ID']\n    && headers['Call-ID'][0]\n    && headers['Call-ID'][0].raw\n  ) {\n    session.__rc_callId = headers['Call-ID'][0].raw;\n  }\n}\n\nexport function normalizeSession(session) {\n  return {\n    id: session.id,\n    callId: session.__rc_callId,\n    direction: session.__rc_direction,\n    callStatus: session.__rc_callStatus,\n    to: session.request.to.uri.user,\n    toUserName: session.request.to.displayName,\n    from: session.request.from.uri.user,\n    fromNumber: session.__rc_fromNumber,\n    fromUserName: session.request.from.displayName,\n    startTime: session.startTime && (new Date(session.startTime)).getTime(),\n    creationTime: session.__rc_creationTime,\n    isOnHold: !!session.isOnHold().local,\n    isOnMute: !!session.__rc_isOnMute,\n    isOnFlip: !!session.__rc_isOnFlip,\n    isOnTransfer: !!session.__rc_isOnTransfer,\n    isToVoicemail: !!session.__rc_isToVoicemail,\n    isForwarded: !!session.__rc_isForwarded,\n    isReplied: !!session.__rc_isReplied,\n    recordStatus: session.__rc_recordStatus || recordStatus.idle,\n    contactMatch: session.__rc_contactMatch,\n    minimized: !!session.__rc_minimized,\n    partyData: session.__rc_partyData || null,\n    lastActiveTime: session.__rc_lastActiveTime,\n    cached: false,\n    removed: false,\n  };\n}\n\nexport function isRing(session) {\n  return !!(\n    session &&\n    session.direction === callDirections.inbound &&\n    session.callStatus === sessionStatus.connecting\n  );\n}\n\nexport function isOnHold(session) {\n  return !!(session && session.callStatus === sessionStatus.onHold);\n}\n\nexport function sortByCreationTimeDesc(l, r) {\n  return r.startTime - l.startTime;\n}\n\nexport function sortByLastActiveTimeDesc(l, r) {\n  if (!l || !r) {\n    return 0;\n  }\n  if (r.lastActiveTime !== l.lastActiveTime) {\n    return r.lastActiveTime - l.lastActiveTime;\n  }\n  return sortByCreationTimeDesc(l, r);\n}\n\n/**\n * HACK: this function is not very reliable, only use it before the merging complete.\n */\nexport function isConferenceSession(session) {\n  return session && session.to &&\n    session.to.indexOf('conf_') === 0;\n}\n\nexport function isRecording(session) {\n  return !!(\n    session &&\n    (\n      session.recordStatus === recordStatus.pending ||\n      session.recordStatus === recordStatus.recording\n    )\n  );\n}\n"]}