{"version":3,"sources":["lib/extractControls/index.js"],"names":["extractExtendedControls","pauseRegex","controlRegex","input","split","phoneNumber","tokens","extendedControls","output","token","push","cleanControl","replace","length"],"mappings":";;;;;;;;;;kBAkBwBA,uB;;AAlBxB;;;;AAEA,IAAMC,aAAa,IAAnB;AACA,IAAMC,eAAe,WAArB;;AAEA;;;;;;;AAOA;;;;;;AAMe,SAASF,uBAAT,CAAiCG,KAAjC,EAAwC;AAAA,eAIjD,CAACA,SAAS,EAAV,EAAcC,KAAd,CAAoBH,UAApB,CAJiD;AAAA;AAAA,MAEnDI,WAFmD;AAAA,MAGhDC,MAHgD;;AAKrD,SAAO;AACLH,gBADK;AAELE,4BAFK;AAGLE,sBAAkB,mBAChB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACjBD,aAAOE,IAAP,CAAY,GAAZ;AACA,UAAMC,eAAeF,MAAMG,OAAN,CAAcV,YAAd,EAA4B,EAA5B,CAArB;AACA,UAAIS,aAAaE,MAAjB,EAAyB;AACvBL,eAAOE,IAAP,CAAYC,YAAZ;AACD;AACD,aAAOH,MAAP;AACD,KARe,EAShB,EATgB,EAUhBF,MAVgB;AAHb,GAAP;AAgBD","file":"index.js","sourcesContent":["import { reduce } from 'ramda';\n\nconst pauseRegex = /,/g;\nconst controlRegex = /[^0-9*#]/g;\n\n/**\n * @typedef {Object} ExtractedResult\n * @property {String} input - Original input\n * @property {String} phoneNumber - Original input with extended controls removed\n * @property {String[]} extendedControls - Array containing the extended controls\n */\n\n/**\n * @param {String} input\n * @returns {ExtractedResult}\n * @description Extract extended controls from quick dial phone number string.\n *              Currently only support pause (',') characater.\n */\nexport default function extractExtendedControls(input) {\n  const [\n    phoneNumber,\n    ...tokens\n  ] = (input || '').split(pauseRegex);\n  return {\n    input,\n    phoneNumber,\n    extendedControls: reduce(\n      (output, token) => {\n        output.push(',');\n        const cleanControl = token.replace(controlRegex, '');\n        if (cleanControl.length) {\n          output.push(cleanControl);\n        }\n        return output;\n      },\n      [],\n      tokens,\n    ),\n  };\n}\n"]}