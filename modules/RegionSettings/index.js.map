{"version":3,"sources":["modules/RegionSettings/index.js"],"names":["RegionSettings","deps","dep","optional","brand","storage","extensionInfo","dialingPlan","alert","tabManager","options","actionTypes","_brand","_storage","_alert","_dialingPlan","_extensionInfo","_tabManager","_countryCodeKey","_areaCodeKey","_reducer","registerReducer","key","reducer","_processedPlans","store","subscribe","ready","status","moduleStatuses","pending","dispatch","type","init","active","checkRegionSettings","availableCountries","initSuccess","resetSuccess","warning","allowDuplicates","message","regionSettingsMessages","dialingPlansChanged","ttl","countryCode","getItem","plan","isoCode","id","_alertSettingsChanged","country","setData","areaCode","danger","areaCodeInvalid","trim","info","saveSuccess","state","length","RcModule","selector","plans","proxify"],"mappings":"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","sourcesContent":["import { find } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport getRegionSettingsReducer, {\n  getCountryCodeReducer,\n  getAreaCodeReducer,\n} from './getRegionSettingsReducer';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport regionSettingsMessages from '../RegionSettings/regionSettingsMessages';\nimport actionTypes from './actionTypes';\nimport validateAreaCode from '../../lib/validateAreaCode';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\n\n/**\n * @class\n * @description Region settings managing module\n */\n@Module({\n  deps: [\n    'Brand',\n    'Alert',\n    'DialingPlan',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'TabManager', optional: true },\n  ],\n})\nexport default class RegionSettings extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Storage} params.storage - storage module instance\n   * @param {ExtensionInfo} params.extensionInfo - extensionInfo module instance\n   * @param {DialingPlan} params.dialingPlan - dialingPlan module instance\n   * @param {Alert} params.alert - alert module instance\n   * @param {TabManager} params.tabManager - tabManager module instance\n   */\n  constructor({\n    brand,\n    storage,\n    extensionInfo,\n    dialingPlan,\n    alert,\n    tabManager,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._brand = brand;\n    this._storage = storage;\n    this._alert = alert;\n    this._dialingPlan = dialingPlan;\n    this._extensionInfo = extensionInfo;\n    this._tabManager = tabManager;\n\n    this._countryCodeKey = 'regionSettingsCountryCode';\n    this._areaCodeKey = 'regionSettingsAreaCode';\n    this._reducer = getRegionSettingsReducer(this.actionTypes);\n\n    this._storage.registerReducer({\n      key: this._countryCodeKey,\n      reducer: getCountryCodeReducer(this.actionTypes),\n    });\n    this._storage.registerReducer({\n      key: this._areaCodeKey,\n      reducer: getAreaCodeReducer(this.actionTypes),\n    });\n\n    this._processedPlans = null;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        this._storage.ready &&\n        this._dialingPlan.ready &&\n        this._extensionInfo.ready &&\n        this.status === moduleStatuses.pending\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        if (!this._tabManager || this._tabManager.active) {\n          await this.checkRegionSettings();\n        }\n        this._processedPlans = this.availableCountries;\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        !this._storage.ready &&\n        this.ready\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.resetSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._processedPlans !== this.availableCountries\n      ) {\n        this._processedPlans = this.availableCountries;\n        if (!this._tabManager || this._tabManager.active) {\n          await this.checkRegionSettings();\n        }\n      }\n    });\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  @selector\n  availableCountries = [\n    () => this._dialingPlan.plans,\n    () => this._extensionInfo.country,\n    (plans, country) => {\n      if (plans && plans.length > 0) {\n        return plans;\n      }\n      return (country && [country]) || [];\n    },\n  ]\n\n  _alertSettingsChanged() {\n    this._alert.warning({\n      allowDuplicates: false,\n      message: regionSettingsMessages.dialingPlansChanged,\n      ttl: 0\n    });\n  }\n\n  @proxify\n  async checkRegionSettings() {\n    let countryCode = this._storage.getItem(this._countryCodeKey);\n    if (\n      countryCode &&\n      !find(\n        plan => (plan.isoCode === countryCode),\n        this.availableCountries\n      )\n    ) {\n      countryCode = null;\n      if (this._brand.id === '1210') {\n        this._alertSettingsChanged();\n      }\n    }\n    if (!countryCode) {\n      const country = find(\n        plan => (plan.isoCode === this._extensionInfo.country.isoCode),\n        this.availableCountries,\n      ) || this.availableCountries[0];\n      countryCode = country && country.isoCode;\n      this.store.dispatch({\n        type: this.actionTypes.setData,\n        countryCode,\n        areaCode: '',\n      });\n    }\n  }\n\n  @proxify\n  async setData({\n    areaCode,\n    countryCode,\n  }) {\n    if (!validateAreaCode(areaCode)) {\n      this._alert.danger({\n        message: regionSettingsMessages.areaCodeInvalid,\n      });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.setData,\n      countryCode,\n      areaCode: areaCode && areaCode.trim(),\n    });\n    this._alert.info({\n      message: regionSettingsMessages.saveSuccess,\n    });\n  }\n\n  setCountryCode(countryCode) {\n    this.setData({\n      countryCode,\n    });\n  }\n\n  setAreaCode(areaCode) {\n    this.setData({\n      areaCode,\n    });\n  }\n\n  get showReginSetting() {\n    if (this.availableCountries.length > 1) {\n      return true;\n    }\n    if (this.availableCountries.length === 1 && (\n      this.availableCountries[0].isoCode === 'US' ||\n      this.availableCountries[0].isoCode === 'CA'\n    )) {\n      return true;\n    }\n    return false;\n  }\n\n  get countryCode() {\n    return this._storage.getItem(this._countryCodeKey) || 'US';\n  }\n\n  get areaCode() {\n    return this._storage.getItem(this._areaCodeKey) || '';\n  }\n}\n"],"file":"index.js"}