{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","types","state","type","videoElementPrepared","getConnectionStatusReducer","connectionStatus","disconnected","connect","connecting","reconnect","reconnecting","registered","connected","connectFailed","connectError","unregistered","disconnectOnInactive","inactiveDisconnecting","unregisteredOnInactive","inactive","disconnect","disconnecting","getErrorCodeReducer","errorCode","getStatusCodeReducer","statusCode","getConnectRetryCountsReducer","retryCounts","setRetryCounts","getActiveSessionIdReducer","session","sessions","callInit","callStart","callResume","id","callEnd","activeSessions","filter","x","sort","sortByLastActiveTimeDesc","clearSessionCaching","cached","getRingSessionIdReducer","callRing","ringSessions","getLastEndedSessionsReducer","startTime","isToVoicemail","isForwarded","isReplied","lastSessions","concat","slice","getSessionsReducer","cachingSessionIds","updateSessions","cachedSessions","forEach","cachedSession","find","removed","push","setSessionCaching","needUpdate","sessionId","onholdCachedSession","callStatus","sessionStatus","onHold","isOnHold","destroySessions","getWebphoneReducer","status","connectRetryCounts","activeSessionId","ringSessionId","lastEndedSessions"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport { isRing, sortByLastActiveTimeDesc } from './webphoneHelper';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect: // trigger by first 3 connect from disconnected or connectFailed status\n        return connectionStatus.connecting;\n      case types.reconnect: // trigger by connect from connectError status\n        return connectionStatus.reconnecting;\n      case types.registered: // trigger when register success\n        return connectionStatus.connected;\n      case types.connectFailed: // trigger when connect failed (retry time <=2)\n        return connectionStatus.connectFailed;\n      case types.connectError: // trigger when connect failed (retry time > 2)\n        return connectionStatus.connectError;\n      case types.unregistered: // trigger by user disconnect success\n        return connectionStatus.disconnected;\n      case types.disconnectOnInactive:\n        return connectionStatus.inactiveDisconnecting;\n      case types.unregisteredOnInactive:\n        return connectionStatus.inactive;\n      case types.disconnect: // trigger by user disconnect\n        return connectionStatus.disconnecting;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorCodeReducer(types) {\n  return (state = null, { type, errorCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.connectFailed:\n        return errorCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getStatusCodeReducer(types) {\n  return (state = null, { type, statusCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.connectFailed:\n        return statusCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type, retryCounts }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return state + 1;\n      case types.unregistered:\n      case types.registered:\n      case types.unregisteredOnInactive:\n        return 0;\n      case types.setRetryCounts:\n        return retryCounts;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getActiveSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callInit:\n      case types.callStart:\n      case types.callResume:\n        return session.id;\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const activeSessions = sessions.filter((x) => !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.clearSessionCaching: {\n        const activeSessions = sessions.filter((x) => !x.cached && !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRingSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callRing:\n        return session.id;\n      case types.callStart:\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const ringSessions = sessions.filter((x) => isRing(x));\n        return (ringSessions[0] && ringSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastEndedSessionsReducer(types) {\n  return (state = [], { type, session = {} }) => {\n    switch (type) {\n      case types.callEnd: {\n        if (\n          /**\n           * don't add incoming call that isn't relied by current app\n           *   to end sessions. this call can be answered by other apps\n           */\n          !session.startTime &&\n          !session.isToVoicemail &&\n          !session.isForwarded &&\n          !session.isReplied\n        ) {\n          return state;\n        }\n        const lastSessions = [session].concat(\n          state.filter((x) => x.id !== session.id),\n        );\n        return lastSessions.slice(0, 5);\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions, cachingSessionIds }) => {\n    switch (type) {\n      case types.updateSessions: {\n        const cachedSessions = state.filter((x) => x.cached);\n        cachedSessions.forEach((cachedSession) => {\n          const session = sessions.find((x) => x.id === cachedSession.id);\n          if (session) {\n            session.cached = true;\n          } else {\n            cachedSession.removed = true;\n            sessions.push(cachedSession);\n          }\n        });\n        return sessions.sort(sortByLastActiveTimeDesc);\n      }\n      case types.setSessionCaching: {\n        let needUpdate = false;\n        cachingSessionIds.forEach((sessionId) => {\n          const session = state.find((x) => x.id === sessionId);\n          if (session) {\n            session.cached = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.clearSessionCaching: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.cached = false;\n            needUpdate = true;\n          }\n        });\n        if (needUpdate) {\n          return state.filter((x) => !x.removed);\n        }\n        return state;\n      }\n      case types.onholdCachedSession: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.callStatus = sessionStatus.onHold;\n            session.isOnHold = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    errorCode: getErrorCodeReducer(types),\n    statusCode: getStatusCodeReducer(types),\n    activeSessionId: getActiveSessionIdReducer(types),\n    ringSessionId: getRingSessionIdReducer(types),\n    sessions: getSessionsReducer(types),\n    lastEndedSessions: getLastEndedSessionsReducer(types),\n  });\n}\n"],"file":"getWebphoneReducer.js"}