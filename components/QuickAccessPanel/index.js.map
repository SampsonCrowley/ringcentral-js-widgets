{"version":3,"sources":["components/QuickAccessPanel/index.js"],"names":["OPTION_FOR_GOOGLE","OPTION_FOR_ALL","OPTION_FOR_USER","QuickAccessPanel","props","openOptionspage","onFinish","onSelectOption","item","setState","selected","value","setOptionData","whitelistOption","state","entered","nextProps","getOptionData","storageData","data","text","i18n","getString","currentLocale","appName","description","extensionOptions","optionsLink","styles","root","className","group","header","title","brandName","bageBox","brandCode","bage","presence","iconContainer","icon","logoIconUrl","checkbox","finishBtn","Component","propTypes","PropTypes","bool","string","func","isRequired","any","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport FormattedMessage from '../FormattedMessage';\nimport CheckBox from '../CheckBox';\nimport Button from '../Button';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst OPTION_FOR_GOOGLE = 'GOOGLE';\nconst OPTION_FOR_ALL = 'ALL';\nconst OPTION_FOR_USER = 'USER';\n\nexport default class QuickAccessPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 1,\n      entered: this.props.entered || false,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { entered } = nextProps;\n    if (this.state.entered !== entered) {\n      this.setState({ entered });\n      if (entered) {\n        this.props.getOptionData((storageData) => {\n          if (storageData.whitelistOption === OPTION_FOR_ALL) {\n            this.setState({\n              selected: 2,\n            });\n          } else if (storageData.whitelistOption === OPTION_FOR_USER) {\n            this.setState({\n              selected: 3,\n            });\n          } else {\n            this.setState({\n              selected: 1,\n            });\n          }\n        });\n      }\n    }\n  }\n  openOptionspage = () => {\n    this.props.openOptionspage();\n    this.props.onFinish();\n  };\n  onSelectOption = (item) => {\n    this.setState({\n      selected: item.value,\n    });\n    if (item.value === 2) {\n      this.props.setOptionData({ whitelistOption: OPTION_FOR_ALL });\n    } else if (item.value === 3) {\n      this.props.setOptionData({ whitelistOption: OPTION_FOR_USER });\n    } else {\n      this.props.setOptionData({ whitelistOption: OPTION_FOR_GOOGLE });\n    }\n  };\n\n  render() {\n    if (!this.state.entered) return null;\n    const data = [{\n      text: formatMessage(i18n.getString('textGoogle', this.props.currentLocale), { appName: this.props.appName }),\n      value: 1\n    }, {\n      text: i18n.getString('textAll', this.props.currentLocale),\n      value: 2\n    }, {\n      text: i18n.getString('textUser', this.props.currentLocale),\n      value: 3\n    }];\n    let description = null;\n    const extensionOptions = i18n.getString('extensionOptions', this.props.currentLocale);\n    const optionsLink = (\n      <a href=\"#\" onClick={this.openOptionspage} >\n        {extensionOptions}\n      </a>\n    );\n    if (this.state.selected === 2) {\n      description = (<FormattedMessage\n        message={i18n.getString('descriptionAll', this.props.currentLocale)}\n        values={{ optionsLink }} />);\n    } else if (this.state.selected === 3) {\n      description = (<FormattedMessage\n        message={i18n.getString('descriptionUser', this.props.currentLocale)}\n        values={{ optionsLink }} />);\n    }\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        <div className={styles.group}>\n          <div className={styles.header} >\n            <div className={styles.title} >{formatMessage(i18n.getString('title', this.props.currentLocale), { brandName: this.props.brandName })}\n            </div>\n            <div className={classnames(styles.bageBox, styles[this.props.brandCode])} >\n              <div className={styles.bage} ><div className={styles.presence} />\n                <div className={styles.iconContainer}>\n                  <img className={styles.icon} src={this.props.logoIconUrl} alt={this.props.brandName} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <CheckBox\n            className={styles.checkbox}\n            valueField=\"value\"\n            textField=\"text\"\n            data={data}\n            selected={this.state.selected}\n            onSelect={this.onSelectOption}\n        />\n          {/* <div>{props.data[this.state.selected - 1].description}</div> */}\n          <div className={styles.description}> {description} </div>\n        </div>\n        <Button\n          className={styles.finishBtn}\n          onClick={this.props.onFinish}\n        >\n          {i18n.getString('Finish', this.props.currentLocale)}\n        </Button>\n      </div>\n    );\n  }\n}\n\nQuickAccessPanel.propTypes = {\n  entered: PropTypes.bool,\n  className: PropTypes.string,\n  onFinish: PropTypes.func.isRequired,\n  brandName: PropTypes.string,\n  brandCode: PropTypes.string,\n  appName: PropTypes.string,\n  logoIconUrl: PropTypes.any,\n  setOptionData: PropTypes.func,\n  getOptionData: PropTypes.func,\n  openOptionspage: PropTypes.func,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nQuickAccessPanel.defaultProps = {\n  entered: false,\n  className: '',\n  brandName: 'RingCentral',\n  brandCode: '',\n  appName: '',\n  logoIconUrl: undefined,\n  setOptionData() {},\n  getOptionData() {},\n  openOptionspage: undefined,\n};\n"]}