{"version":3,"sources":["lib/di/provider.js"],"names":["Provider","token","isPrivate","instance","private","ClassProvider","klass","deps","ExistingProvider","useExisting","FactoryProvider","func","spread","ValueProvider","value","setInstance"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,Q;;;AACX,oBAAYC,KAAZ,EAAmBC,SAAnB,EAA8B;AAAA;;AAC5B,SAAKD,KAAL,GAAaA,KAAb,CAD4B,CAE5B;;AACA,SAAKE,QAAL,GAAgB,IAAhB;AACA,SAAKC,OAAL,GAAeF,SAAS,IAAI,KAA5B;AACD;;;;gCAEWC,Q,EAAU;AACpB,WAAKA,QAAL,GAAgBA,QAAhB;AACD;;;kCAEa;AACZ,aAAO,KAAKA,QAAZ;AACD;;;+BAEU;AACT,aAAO,KAAKA,QAAL,KAAkB,IAAzB;AACD;;;;;;;;IAGUE,a;;;;;AACX,yBAAYJ,KAAZ,EAAmBK,KAAnB,EAA0BC,IAA1B,EAAgCL,SAAhC,EAA2C;AAAA;;AAAA;;AACzC,uFAAMD,KAAN,EAAaC,SAAb;AACA,UAAKI,KAAL,GAAaA,KAAb;AACA,UAAKC,IAAL,GAAYA,IAAZ;AAHyC;AAI1C;;;EALgCP,Q;;;;IAQtBQ,gB;;;;;AACX,4BAAYP,KAAZ,EAAmBQ,WAAnB,EAAgCP,SAAhC,EAA2C;AAAA;;AAAA;;AACzC,2FAAMD,KAAN,EAAaC,SAAb;AACA,WAAKO,WAAL,GAAmBA,WAAW,IAAI,EAAlC;AAFyC;AAG1C;;;EAJmCT,Q;;;;IAOzBU,e;;;;;AACX,2BAAYT,KAAZ,EAAmBU,IAAnB,EAAyBJ,IAAzB,EAA+BK,MAA/B,EAAuCV,SAAvC,EAAkD;AAAA;;AAAA;;AAChD,0FAAMD,KAAN,EAAaC,SAAb;AACA,WAAKS,IAAL,GAAYA,IAAZ;AACA,WAAKJ,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,WAAKK,MAAL,GAAcA,MAAM,IAAI,KAAxB;AAJgD;AAKjD;;;EANkCZ,Q;;;;IASxBa,a;;;;;AACX,yBAAYZ,KAAZ,EAAmBa,KAAnB,EAA0BF,MAA1B,EAAkCV,SAAlC,EAA6C;AAAA;;AAAA;;AAC3C,wFAAMD,KAAN,EAAaC,SAAb;AACA,WAAKY,KAAL,GAAaA,KAAb;AACA,WAAKF,MAAL,GAAcA,MAAM,IAAI,KAAxB;;AACA,WAAKG,WAAL,CAAiB;AACfD,MAAAA,KAAK,EAAE,OAAKA,KADG;AAEfF,MAAAA,MAAM,EAAE,OAAKA;AAFE,KAAjB;;AAJ2C;AAQ5C;;;EATgCZ,Q","sourcesContent":["export class Provider {\n  constructor(token, isPrivate) {\n    this.token = token;\n    // Provider instance reference\n    this.instance = null;\n    this.private = isPrivate || false;\n  }\n\n  setInstance(instance) {\n    this.instance = instance;\n  }\n\n  getInstance() {\n    return this.instance;\n  }\n\n  resolved() {\n    return this.instance !== null;\n  }\n}\n\nexport class ClassProvider extends Provider {\n  constructor(token, klass, deps, isPrivate) {\n    super(token, isPrivate);\n    this.klass = klass;\n    this.deps = deps;\n  }\n}\n\nexport class ExistingProvider extends Provider {\n  constructor(token, useExisting, isPrivate) {\n    super(token, isPrivate);\n    this.useExisting = useExisting || '';\n  }\n}\n\nexport class FactoryProvider extends Provider {\n  constructor(token, func, deps, spread, isPrivate) {\n    super(token, isPrivate);\n    this.func = func;\n    this.deps = deps || [];\n    this.spread = spread || false;\n  }\n}\n\nexport class ValueProvider extends Provider {\n  constructor(token, value, spread, isPrivate) {\n    super(token, isPrivate);\n    this.value = value;\n    this.spread = spread || false;\n    this.setInstance({\n      value: this.value,\n      spread: this.spread\n    });\n  }\n}\n"],"file":"provider.js"}