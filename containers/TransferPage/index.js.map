{"version":3,"sources":["containers/TransferPage/index.js"],"names":["mapToProps","_","phone","locale","activeCallControl","webphone","contactSearch","params","sessionId","type","session","activeSession","sessions","find","id","currentLocale","searchContactList","sortedResult","controlBusy","busy","mapToFunctions","regionSettings","routerInteraction","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","phoneTypeRenderer","setActiveSessionId","onTransfer","transferNumber","transfer","onBack","goBack","onCallEnd","replace","formatPhone","phoneNumber","areaCode","countryCode","searchContact","searchString","debouncedSearch","TransferPage","TransferPanel"],"mappings":"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","sourcesContent":["\nimport { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport TransferPanel from '../../components/TransferPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    activeCallControl,\n    webphone,\n    contactSearch,\n  },\n  params: { sessionId, type = 'active' }\n}) {\n  let session = null;\n  if (type === 'active' && activeCallControl) {\n    session = activeCallControl.activeSession;\n  } else if (type === 'webphone' && webphone) {\n    session = webphone.sessions.find(session => session.id === sessionId);\n  }\n\n  return {\n    sessionId,\n    currentLocale: locale.currentLocale,\n    searchContactList: contactSearch && contactSearch.sortedResult,\n    session,\n    controlBusy: activeCallControl && activeCallControl.busy || false,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    regionSettings,\n    routerInteraction,\n    activeCallControl,\n    webphone,\n    contactSearch,\n  },\n  params: { type = 'active' },\n  phoneSourceNameRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  phoneTypeRenderer,\n}) {\n  return {\n    setActiveSessionId(sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.setActiveSessionId(sessionId);\n      }\n    },\n    onTransfer(transferNumber, sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.transfer(transferNumber, sessionId);\n      } else if (type === 'webphone' && webphone) {\n        webphone.transfer(transferNumber, sessionId);\n      }\n    },\n    onBack() {\n      routerInteraction.goBack();\n    },\n    onCallEnd() {\n      if (type === 'active') {\n        routerInteraction.replace('/calls');\n      } else {\n        routerInteraction.replace('/dialer');\n      }\n    },\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    searchContact(searchString) {\n      if (contactSearch) {\n        contactSearch.debouncedSearch({ searchString });\n      }\n    },\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst TransferPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TransferPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  TransferPage as default,\n};\n"],"file":"index.js"}