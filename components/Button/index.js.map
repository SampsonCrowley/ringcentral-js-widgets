{"version":3,"sources":["components/Button/index.js"],"names":["Button","props","_mounted","state","disabled","setState","onClick","className","children","tooltip","dataSign","realDisabled","styles","root","Component","propTypes","PropTypes","string","bool","func","node","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,M;;;AAqBnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAFnBC,QAEmB,GAFR,KAEQ;;AAEjB,UAAKC,KAAL,GAAa;AACXC,gBAAU;AADC,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAClB,WAAKF,QAAL,GAAgB,IAAhB;AACD;;;2CAEsB;AACrB,WAAKA,QAAL,GAAgB,KAAhB;AACD;;;;;;;;;oBAGM,KAAKA,Q;;;;;;;;AAGV,qBAAKG,QAAL,CAAc;AACZD,4BAAU;AADE,iBAAd;;;uBAIM,KAAKH,KAAL,CAAWK,OAAX,E;;;;AAEN,oBAAI,KAAKJ,QAAT,EAAmB;AACjB,uBAAKG,QAAL,CAAc;AACZD,8BAAU;AADE,mBAAd;AAGD;;;;;;;;;;;;;;;;;;6BAIM;AAAA;;AAAA,mBAOH,KAAKH,KAPF;AAAA,UAELM,SAFK,UAELA,SAFK;AAAA,UAGLH,QAHK,UAGLA,QAHK;AAAA,UAILI,QAJK,UAILA,QAJK;AAAA,UAKLC,OALK,UAKLA,OALK;AAAA,UAMLC,QANK,UAMLA,QANK;;;AASP,UAAMC,eAAeP,YAAY,KAAKD,KAAL,CAAWC,QAA5C;;AAEA,aACE;AAAA;AAAA;AACE,uBAAWM,QADb;AAEE,qBAAW,0BACTH,SADS,EAETK,iBAAOC,IAFE,EAGTF,gBAAgBC,iBAAOR,QAHd,CAFb;AAOE,mBAASO,eAAe,IAAf,GAAsB;AAAA,mBAAM,OAAKL,OAAL,EAAN;AAAA,WAPjC;AAQE,iBAAOG,OART;AASGD;AATH,OADF;AAaD;;;EA9EiCM,gB,UAC3BC,S,GAAY;AACjBR,aAAWS,oBAAUC,MADJ;AAEjBR,WAASO,oBAAUC,MAFF;AAGjBb,YAAUY,oBAAUE,IAHH;AAIjBZ,WAASU,oBAAUG,IAJF;AAKjBX,YAAUQ,oBAAUI,IALH;AAMjBV,YAAUM,oBAAUC;AANH,C,SASZI,Y,GAAe;AACpBd,aAAWe,SADS;AAEpBb,WAAS,EAFW;AAGpBL,YAAU,KAHU;AAIpBE,WAASgB,SAJW;AAKpBd,YAAUc,SALU;AAMpBZ,YAAUY;AANU,C;kBAVHtB,M","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nexport default class Button extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    tooltip: PropTypes.string,\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n    dataSign: PropTypes.string,\n  };\n\n  static defaultProps = {\n    className: undefined,\n    tooltip: '',\n    disabled: false,\n    onClick: undefined,\n    children: undefined,\n    dataSign: undefined,\n  };\n\n  _mounted = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  async onClick() {\n    if (!this._mounted) {\n      return;\n    }\n    this.setState({\n      disabled: true\n    });\n\n    await this.props.onClick();\n\n    if (this._mounted) {\n      this.setState({\n        disabled: false\n      });\n    }\n  }\n\n\n  render() {\n    const {\n      className,\n      disabled,\n      children,\n      tooltip,\n      dataSign,\n    } = this.props;\n\n    const realDisabled = disabled || this.state.disabled;\n\n    return (\n      <div\n        data-sign={dataSign}\n        className={classnames(\n          className,\n          styles.root,\n          realDisabled && styles.disabled,\n        )}\n        onClick={realDisabled ? null : () => this.onClick()}\n        title={tooltip}>\n        {children}\n      </div>\n    );\n  }\n}\n\n"]}