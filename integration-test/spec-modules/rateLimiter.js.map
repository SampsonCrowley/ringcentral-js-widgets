{"version":3,"sources":["integration-test/spec-modules/rateLimiter.js"],"names":["auth","alert","account","client","rateLimiter","describe","timeout","conditionalDescribe","isLoginSuccess","skip","console","error","beforeEach","dismissAll","state","messages","length","isAlertClear","it","_requestErrorHandler","Error","expect","errorMessages","rateLimitReached","to","not","equal","undefined"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;eAEe,kBAACA,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,WAA/B,EAA+C;AAC5DC,EAAAA,QAAQ,CAAC,aAAD;AAAA;AAAA;AAAA;AAAA,0BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtB,iBAAKC,OAAL,CAAa,KAAb;AACIC,YAAAA,mBAFkB,GAEIF,QAFJ;AAAA;AAAA,mBAGO,2BAAYL,IAAZ,EAAkBE,OAAlB,CAHP;;AAAA;AAGhBM,YAAAA,cAHgB;;AAItB,gBAAI,CAACA,cAAL,EAAqB;AACnBD,cAAAA,mBAAmB,GAAGF,QAAQ,CAACI,IAA/B;AACAC,cAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd,EAAoET,OAApE;AACD;;AACDK,YAAAA,mBAAmB,CAAC,oBAAD,EAAuB,YAAW;AACnD,mBAAKD,OAAL,CAAa,KAAb;AACAM,cAAAA,UAAU;AAAA;AAAA;AAAA;AAAA,sCAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACkB,8BAAe,YAAM;AAC9CX,0BAAAA,KAAK,CAACY,UAAN;AACA,iCAAOZ,KAAK,CAACa,KAAN,CAAYC,QAAZ,CAAqBC,MAA5B;AACD,yBAH0B,EAGxB,OAHwB,EAGf,CAHe,EAGZ,CAHY,CADlB;;AAAA;AACHC,wBAAAA,YADG;;AAKT,4BAAI,CAACA,YAAL,EAAmB;AACjBP,0BAAAA,OAAO,CAACC,KAAR,CAAc,uCAAd;AACA,+BAAKF,IAAL;AACD;;AARQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAD,GAAV;AAUAJ,cAAAA,QAAQ,CAAC,8CAAD,EAAiD,YAAW;AAClEa,gBAAAA,EAAE,CAAC,oCAAD;AAAA;AAAA;AAAA;AAAA,wCAAuC;AAAA;AAAA;AAAA;AAAA;AACvCd,0BAAAA,WAAW,CAACe,oBAAZ,CAAiC,IAAIC,KAAJ,CAAU,uBAAV,CAAjC;;AACAC,0BAAAA,MAAM,CAAC,oCAAqBpB,KAAK,CAACa,KAAN,CAAYC,QAAjC,EAA2CO,uBAAcC,gBAAzD,CAAD,CAAN,CAAmFC,EAAnF,CAAsFC,GAAtF,CAA0FC,KAA1F,CAAgGC,SAAhG;;AAFuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvC,GAAF;AAID,eALO,CAAR;AAMD,aAlBkB,CAAnB;;AARsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB,GAAR;AA4BD,C","sourcesContent":["import errorMessages from '../..//modules/RateLimiter/errorMessages';\nimport { containsErrorMessage, ensureLogin } from '../utils/HelpUtil';\nimport { waitUntilEqual } from '../utils/WaitUtil';\n\nexport default (auth, alert, account, client, rateLimiter) => {\n  describe('RateLimiter', async function () {\n    this.timeout(20000);\n    let conditionalDescribe = describe;\n    const isLoginSuccess = await ensureLogin(auth, account);\n    if (!isLoginSuccess) {\n      conditionalDescribe = describe.skip;\n      console.error('Skip test case as failed to login with credential ', account);\n    }\n    conditionalDescribe('Should Allow Alert', function() {\n      this.timeout(20000);\n      beforeEach(async function () {\n        const isAlertClear = await waitUntilEqual(() => {\n          alert.dismissAll();\n          return alert.state.messages.length;\n        }, 'Alert', 0, 5);\n        if (!isAlertClear) {\n          console.error('Alert is not cleared after dismissAll');\n          this.skip();\n        }\n      });\n      describe('Should Prompt Alerts when rateLimiter occurs', function() {\n        it('Should Prompt Alert of rateLimiter', async function () {\n          rateLimiter._requestErrorHandler(new Error('Request rate exceeded'));\n          expect(containsErrorMessage(alert.state.messages, errorMessages.rateLimitReached)).to.not.equal(undefined);\n        });\n      });\n    });\n  });\n};\n\n"],"file":"rateLimiter.js"}