{"version":3,"sources":["lib/extractAnnotations/index.js"],"names":["extractAnnotations","content","annotationRegExp","annotations","Map","match","exec","set","JSON","parse","replace"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAe,SAASA,kBAAT,CAA4BC,OAA5B,EAAqC;AAClD,MAAMC,gBAAgB,GAAG,8CAAzB;AACA,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;AACA,MAAIC,KAAJ;AACA;;AACA,SAAO,CAACA,KAAK,GAAGH,gBAAgB,CAACI,IAAjB,CAAsBL,OAAtB,CAAT,MAA6C,IAApD,EAA0D;AACxDE,IAAAA,WAAW,CAACI,GAAZ,CAAgBC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAC,CAAD,CAAhB,CAAhB,EAAsCG,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAAC,CAAD,CAAhB,CAAtC;AACD;;AACD,SAAO;AACLJ,IAAAA,OAAO,EAAEA,OAAO,CAACS,OAAR,CAAgBR,gBAAhB,EAAkC,EAAlC,CADJ;AAELC,IAAAA,WAAW,EAAXA;AAFK,GAAP;AAID","sourcesContent":["export default function extractAnnotations(content) {\n  const annotationRegExp = /\\/\\/ @key: @#@(.*)@#@.*?@source: @#@(.*)@#@/g;\n  const annotations = new Map();\n  let match;\n  /* eslint { 'no-cond-assign': 0 } */\n  while ((match = annotationRegExp.exec(content)) !== null) {\n    annotations.set(JSON.parse(match[1]), JSON.parse(match[2]));\n  }\n  return {\n    content: content.replace(annotationRegExp, ''),\n    annotations,\n  };\n}\n"],"file":"index.js"}