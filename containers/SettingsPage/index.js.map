{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","showRegion","showCalling","showAudio","showFeedback","showUserGuide","showPresenceSettings","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","showReginSetting","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","openPresenceSettings","hasEditPresencePermission","supportedLocales","savedLocale","hasUserGuidePermission","mapToFunctions","routerInteraction","userGuide","quickAccess","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onUserGuideClick","start","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","SettingsPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  showUserGuide = true,\n  showPresenceSettings = true,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      regionSettings.showReginSetting &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    openPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    showPresenceSettings:\n      showPresenceSettings && rolesAndPermissions.hasEditPresencePermission,\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n    showUserGuide: showUserGuide && rolesAndPermissions.hasUserGuidePermission,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n    userGuide,\n    quickAccess\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n}) {\n  return {\n    async onLogoutButtonClick() {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick() {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick() {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick() {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick() {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    onUserGuideClick() {\n      userGuide.start();\n    },\n\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"]}