{"version":3,"sources":["components/ActiveCallPanel/ConferenceInfo.js"],"names":["ConferenceInfo","currentLocale","partyProfiles","onClick","MAXIMUM_AVATARS","profiles","displayedProfiles","length","slice","remains","styles","conferenceCallInfoContainer","avatarContainer","clickable","e","preventDefault","map","idx","avatarUrl","toUserName","avatar","backgroundColor","dynamicsFont","portrait","icon","info","i18n","getString","propTypes","PropTypes","string","isRequired","arrayOf","shape","func","defaultProps","i"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,cAAT,OAIG;AAAA,MAHDC,aAGC,QAHDA,aAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,QACC,QADDA,OACC;;AACD,MAAMC,kBAAkB,CAAxB;AACA,MAAMC,WAAWH,iBAAiB,EAAlC;;AAEA,MAAMI,oBACJD,SAASE,MAAT,IAAmBH,eAAnB,GACIC,SAASG,KAAT,CAAe,CAAf,EAAkBJ,eAAlB,CADJ,GAEIC,QAHN;;AAKA,MAAMI,UAAUJ,SAASE,MAAT,GAAkBH,eAAlB,GACZC,SAASE,MAAT,GAAkBH,eADN,GAEZ,CAFJ;;AAIA,SACE;AAAA;AAAA;AACE,iBAAWM,iBAAOC;AADpB;AAIIL,sBAAkBC,MAAlB,GAEI;AAAA;AAAA;AACE,mBAAW,0BAAWG,iBAAOE,eAAlB,EAAmCF,iBAAOG,SAA1C,CADb;AAEE,iBAAS,iBAACC,CAAD,EAAO;AAAEA,YAAEC,cAAF,GAAoBZ;AAAY;AAFpD;AAKIG,wBAAkBU,GAAlB,CAAsB,iBAA4BC,GAA5B;AAAA,YAAGC,SAAH,SAAGA,SAAH;AAAA,YAAcC,UAAd,SAAcA,UAAd;AAAA,eACpB;AAAA;AAAA;AACE,iBAAQA,UAAR,SAAsBF,GADxB;AAEE,uBAAWP,iBAAOU,MAFpB;AAGE,wCAAC,oBAAD;AACE,uBAAWF,SADb;AAEE;AAFF;AAHF,SADoB;AAAA,OAAtB,CALJ;AAiBIT,gBAAU,CAAV,GAEI;AAAA;AAAA;AACE,qBAAW,0BAAWC,iBAAOU,MAAlB,EAA0BV,iBAAOD,OAAjC;AADb;AAAA,cAGOA;AAHP,OAFJ,GAQI;AAzBR,KAFJ,GAgCI;AAAA;AAAA,QAAK,WAAWC,iBAAOE,eAAvB;AACE;AAAA;AAAA,UAAK,WAAWF,iBAAOU,MAAvB,EAA+B,OAAO,EAAEC,iBAAiB,MAAnB,EAAtC;AACE,6CAAG,WAAW,0BAAWC,uBAAaC,QAAxB,EAAkCb,iBAAOc,IAAzC,CAAd;AADF;AADF,KApCR;AA2CE;AAAA;AAAA,QAAG,WAAWd,iBAAOe,IAArB;AACGC,qBAAKC,SAAL,CAAe,gBAAf,EAAiC1B,aAAjC;AADH;AA3CF,GADF;AAiDD;;AAEDD,eAAe4B,SAAf,GAA2B;AACzB3B,iBAAe4B,oBAAUC,MAAV,CAAiBC,UADP;AAEzB7B,iBAAe2B,oBAAUG,OAAV,CAAkBH,oBAAUI,KAAV,CAAgB;AAC/Cf,eAAWW,oBAAUC,MAD0B;AAE/CX,gBAAYU,oBAAUC;AAFyB,GAAhB,CAAlB,CAFU;AAMzB3B,WAAS0B,oBAAUK;AANM,CAA3B;;AASAlC,eAAemC,YAAf,GAA8B;AAC5BjC,iBAAe,IADa;AAE5BC,WAAS;AAAA,WAAKiC,CAAL;AAAA;AAFmB,CAA9B;;kBAKepC,c","file":"ConferenceInfo.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CallAvatar from '../CallAvatar';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction ConferenceInfo({\n  currentLocale,\n  partyProfiles,\n  onClick,\n}) {\n  const MAXIMUM_AVATARS = 4;\n  const profiles = partyProfiles || [];\n\n  const displayedProfiles =\n    profiles.length >= MAXIMUM_AVATARS\n      ? profiles.slice(0, MAXIMUM_AVATARS)\n      : profiles;\n\n  const remains = profiles.length > MAXIMUM_AVATARS\n    ? profiles.length - MAXIMUM_AVATARS\n    : 0;\n\n  return (\n    <div\n      className={styles.conferenceCallInfoContainer}\n    >\n      {\n        displayedProfiles.length\n          ? (\n            <div\n              className={classnames(styles.avatarContainer, styles.clickable)}\n              onClick={(e) => { e.preventDefault(); onClick(); }}\n            >\n              {\n                displayedProfiles.map(({ avatarUrl, toUserName }, idx) => (\n                  <div\n                    key={`${toUserName}_${idx}`}\n                    className={styles.avatar}>\n                    <CallAvatar\n                      avatarUrl={avatarUrl}\n                      shouldBubbleClick\n                    />\n                  </div>\n                )\n                )\n              }{\n                remains > 0\n                  ? (\n                    <div\n                      className={classnames(styles.avatar, styles.remains)}\n                    >\n                      {`+${remains}`}\n                    </div>\n                  )\n                  : null\n              }\n            </div>\n          )\n          : (\n            <div className={styles.avatarContainer}>\n              <div className={styles.avatar} style={{ backgroundColor: '#fff' }}>\n                <i className={classnames(dynamicsFont.portrait, styles.icon)} />\n              </div>\n            </div>\n          )\n      }\n      <p className={styles.info}>\n        {i18n.getString('conferenceCall', currentLocale)}\n      </p>\n    </div>\n  );\n}\n\nConferenceInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  partyProfiles: PropTypes.arrayOf(PropTypes.shape({\n    avatarUrl: PropTypes.string,\n    toUserName: PropTypes.string,\n  })),\n  onClick: PropTypes.func,\n};\n\nConferenceInfo.defaultProps = {\n  partyProfiles: null,\n  onClick: i => i,\n};\n\nexport default ConferenceInfo;\n"]}