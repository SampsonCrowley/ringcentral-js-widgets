{"version":3,"sources":["components/ActiveCallsPanel/index.js"],"names":["ActiveCallsPanel","hasCalls","props","onCallsEmpty","nextProps","activeRingCalls","length","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","calls","title","showCallDetail","currentLocale","areaCode","countryCode","brand","showContactDisplayPlaceholder","formatPhone","onClickToSms","onCreateContact","onViewContact","outboundSmsPermission","internalSmsPermission","isLoggedContact","onLogCall","autoLog","loggingMap","webphoneAnswer","webphoneReject","webphoneHangup","webphoneResume","enableContactFallback","webphoneToVoicemail","sourceIcons","isWebRTC","isSessionAConferenceCall","onCallItemClick","getAvatarUrl","conferenceCallParties","webphoneHold","useV2","updateSessionMatchedContact","className","showSpinner","styles","root","noCalls","i18n","getString","spinner","target","container","getCallList","Component","propTypes","PropTypes","string","isRequired","array","bool","func","object","arrayOf","defaultProps","undefined","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;IAEqBA,gB;;;;;;;;;;wCACC;AAClB,UACE,CAAC,KAAKC,QAAL,CAAc,KAAKC,KAAnB,CAAD,IACA,OAAO,KAAKA,KAAL,CAAWC,YAAlB,KAAmC,UAFrC,EAGE;AACA,aAAKD,KAAL,CAAWC,YAAX;AACD;AACF;;;8CAEyBC,S,EAAW;AACnC,UACE,KAAKH,QAAL,CAAc,KAAKC,KAAnB,KACA,CAAC,KAAKD,QAAL,CAAcG,SAAd,CADD,IAEA,OAAO,KAAKF,KAAL,CAAWC,YAAlB,KAAmC,UAHrC,EAIE;AACA,aAAKD,KAAL,CAAWC,YAAX;AACD;AACF;;;+BAE4B;AAAA,UAApBD,KAAoB,uEAAZ,KAAKA,KAAO;;AAC3B,aACEA,MAAMG,eAAN,CAAsBC,MAAtB,GAA+B,CAA/B,IACAJ,MAAMK,iBAAN,CAAwBD,MAAxB,GAAiC,CADjC,IAEAJ,MAAMM,kBAAN,CAAyBF,MAAzB,GAAkC,CAFlC,IAGAJ,MAAMO,gBAAN,CAAuBH,MAAvB,GAAgC,CAJlC;AAMD;;;gCAEWI,K,EAAOC,K,EAA+B;AAAA,UAAxBC,cAAwB,uEAAP,KAAO;AAAA,mBAiC5C,KAAKV,KAjCuC;AAAA,UAE9CW,aAF8C,UAE9CA,aAF8C;AAAA,UAG9CC,QAH8C,UAG9CA,QAH8C;AAAA,UAI9CC,WAJ8C,UAI9CA,WAJ8C;AAAA,UAK9CC,KAL8C,UAK9CA,KAL8C;AAAA,UAM9CC,6BAN8C,UAM9CA,6BAN8C;AAAA,UAO9CC,WAP8C,UAO9CA,WAP8C;AAAA,UAQ9CC,YAR8C,UAQ9CA,YAR8C;AAAA,UAS9CC,eAT8C,UAS9CA,eAT8C;AAAA,UAU9CC,aAV8C,UAU9CA,aAV8C;AAAA,UAW9CC,qBAX8C,UAW9CA,qBAX8C;AAAA,UAY9CC,qBAZ8C,UAY9CA,qBAZ8C;AAAA,UAa9CC,eAb8C,UAa9CA,eAb8C;AAAA,UAc9CC,SAd8C,UAc9CA,SAd8C;AAAA,UAe9CC,OAf8C,UAe9CA,OAf8C;AAAA,UAgB9CC,UAhB8C,UAgB9CA,UAhB8C;AAAA,UAiB9CC,cAjB8C,UAiB9CA,cAjB8C;AAAA,UAkB9CC,cAlB8C,UAkB9CA,cAlB8C;AAAA,UAmB9CC,cAnB8C,UAmB9CA,cAnB8C;AAAA,UAoB9CC,cApB8C,UAoB9CA,cApB8C;AAAA,UAqB9CC,qBArB8C,UAqB9CA,qBArB8C;AAAA,UAsB9CC,mBAtB8C,UAsB9CA,mBAtB8C;AAAA,UAuB9CC,WAvB8C,UAuB9CA,WAvB8C;AAAA,UAwB9C1B,kBAxB8C,UAwB9CA,kBAxB8C;AAAA,UAyB9C2B,QAzB8C,UAyB9CA,QAzB8C;AAAA,UA0B9CC,wBA1B8C,UA0B9CA,wBA1B8C;AAAA,UA2B9CC,eA3B8C,UA2B9CA,eA3B8C;AAAA,UA4B9CC,YA5B8C,UA4B9CA,YA5B8C;AAAA,UA6B9CC,qBA7B8C,UA6B9CA,qBA7B8C;AAAA,UA8B9CC,YA9B8C,UA8B9CA,YA9B8C;AAAA,UA+B9CC,KA/B8C,UA+B9CA,KA/B8C;AAAA,UAgC9CC,2BAhC8C,UAgC9CA,2BAhC8C;;;AAmChD,aACE,8BAAC,wBAAD;AACE,eAAO/B,KADT;AAEE,eAAOD,KAFT;AAGE,uBAAeG,aAHjB;AAIE,kBAAUC,QAJZ;AAKE,qBAAaC,WALf;AAME,eAAOC,KANT;AAOE,uCAA+BC,6BAPjC;AAQE,qBAAaC,WARf;AASE,sBAAcC,YAThB;AAUE,yBAAiBC,eAVnB;AAWE,uBAAeC,aAXjB;AAYE,+BAAuBC,qBAZzB;AAaE,+BAAuBC,qBAbzB;AAcE,yBAAiBC,eAdnB;AAeE,mBAAWC,SAfb;AAgBE,iBAASC,OAhBX;AAiBE,oBAAYC,UAjBd;AAkBE,wBAAgBC,cAlBlB;AAmBE,wBAAgBC,cAnBlB;AAoBE,wBAAgBC,cApBlB;AAqBE,wBAAgBC,cArBlB;AAsBE,6BAAqBE,mBAtBvB;AAuBE,+BAAuBD,qBAvBzB;AAwBE,qBAAaE,WAxBf;AAyBE,kBAAUC,QAzBZ;AA0BE,qBAAa3B,mBAAmB,CAAnB,CA1Bf;AA2BE,kCAA0B4B,wBA3B5B;AA4BE,eAAOK,KA5BT,CA4Be;AA5Bf,UA6BE,iBAAiBJ,eA7BnB;AA8BE,sBAAcC,YA9BhB;AA+BE,+BAAuBC,qBA/BzB;AAgCE,sBAAcC,YAhChB;AAiCE,wBAAgB5B,cAjClB;AAkCE,qCAA6B8B;AAlC/B,QADF;AAsCD;;;6BAEQ;AAAA;;AAAA,oBASH,KAAKxC,KATF;AAAA,UAELG,eAFK,WAELA,eAFK;AAAA,UAGLE,iBAHK,WAGLA,iBAHK;AAAA,UAILC,kBAJK,WAILA,kBAJK;AAAA,UAKLC,gBALK,WAKLA,gBALK;AAAA,UAMLkC,SANK,WAMLA,SANK;AAAA,UAOL9B,aAPK,WAOLA,aAPK;AAAA,UAQL+B,WARK,WAQLA,WARK;;;AAWP,UAAI,CAAC,KAAK3C,QAAL,EAAL,EAAsB;AACpB,eACE;AAAA;AAAA,YAAK,WAAW,0BAAW4C,iBAAOC,IAAlB,EAAwBH,SAAxB,CAAhB;AACE;AAAA;AAAA,cAAG,WAAWE,iBAAOE,OAArB;AAA+BC,2BAAKC,SAAL,CAAe,eAAf,EAAgCpC,aAAhC;AAA/B,WADF;AAEG+B,wBAAc,8BAAC,wBAAD,IAAgB,WAAWC,iBAAOK,OAAlC,GAAd,GAA8D;AAFjE,SADF;AAMD;;AAED,aACE;AAAA;AAAA,UAAK,WAAWL,iBAAOC,IAAvB;AACE;AAAA;AAAA;AACE,uBAAW,0BAAWD,iBAAOC,IAAlB,EAAwBH,SAAxB,CADb;AAEE,iBAAK,aAACQ,MAAD,EAAY;AAAE,qBAAKC,SAAL,GAAiBD,MAAjB;AAA0B;AAF/C;AAIG,eAAKE,WAAL,CAAiBhD,eAAjB,EAAkC2C,eAAKC,SAAL,CAAe,UAAf,EAA2BpC,aAA3B,CAAlC,CAJH;AAKG,eAAKwC,WAAL,CAAiB7C,kBAAjB,EAAqCwC,eAAKC,SAAL,CAAe,aAAf,EAA8BpC,aAA9B,CAArC,CALH;AAMG,eAAKwC,WAAL,CAAiB9C,iBAAjB,EAAoCyC,eAAKC,SAAL,CAAe,YAAf,EAA6BpC,aAA7B,CAApC,CANH;AAOG,eAAKwC,WAAL,CAAiB5C,gBAAjB,EAAmCuC,eAAKC,SAAL,CAAe,iBAAf,EAAkCpC,aAAlC,CAAnC,EAAqF,IAArF;AAPH,SADF;AAUG+B,sBAAc,8BAAC,wBAAD,IAAgB,WAAWC,iBAAOK,OAAlC,GAAd,GAA8D;AAVjE,OADF;AAcD;;;EA1I2CI,gB;;kBAAzBtD,gB;;;AA6IrBA,iBAAiBuD,SAAjB,GAA6B;AAC3B1C,iBAAe2C,oBAAUC,MAAV,CAAiBC,UADL;AAE3Bf,aAAWa,oBAAUC,MAFM;AAG3BpD,mBAAiBmD,oBAAUG,KAAV,CAAgBD,UAHN;AAI3BnD,qBAAmBiD,oBAAUG,KAAV,CAAgBD,UAJR;AAK3BlD,sBAAoBgD,oBAAUG,KAAV,CAAgBD,UALT;AAM3BjD,oBAAkB+C,oBAAUG,KAAV,CAAgBD,UANP;AAO3B5C,YAAU0C,oBAAUC,MAAV,CAAiBC,UAPA;AAQ3B3C,eAAayC,oBAAUC,MAAV,CAAiBC,UARH;AAS3B1C,SAAOwC,oBAAUC,MATU;AAU3BxC,iCAA+BuC,oBAAUI,IAVd;AAW3B1C,eAAasC,oBAAUK,IAAV,CAAeH,UAXD;AAY3BvC,gBAAcqC,oBAAUK,IAZG;AAa3BzC,mBAAiBoC,oBAAUK,IAbA;AAc3BvC,yBAAuBkC,oBAAUI,IAdN;AAe3BrC,yBAAuBiC,oBAAUI,IAfN;AAgB3BpC,mBAAiBgC,oBAAUK,IAhBA;AAiB3BpC,aAAW+B,oBAAUK,IAjBM;AAkB3BjC,kBAAgB4B,oBAAUK,IAlBC;AAmB3BhC,kBAAgB2B,oBAAUK,IAnBC;AAoB3B/B,kBAAgB0B,oBAAUK,IApBC;AAqB3B9B,kBAAgByB,oBAAUK,IArBC;AAsB3B5B,uBAAqBuB,oBAAUK,IAtBJ;AAuB3BnC,WAAS8B,oBAAUI,IAvBQ;AAwB3BvC,iBAAemC,oBAAUK,IAxBE;AAyB3B7B,yBAAuBwB,oBAAUI,IAzBN;AA0B3BjC,cAAY6B,oBAAUM,MA1BK;AA2B3B3D,gBAAcqD,oBAAUK,IA3BG;AA4B3B3B,eAAasB,oBAAUM,MA5BI;AA6B3B3B,YAAUqB,oBAAUI,IAAV,CAAeF,UA7BE;AA8B3Bd,eAAaY,oBAAUI,IA9BI;AA+B3BxB,4BAA0BoB,oBAAUK,IA/BT;AAgC3BxB,mBAAiBmB,oBAAUK,IAhCA;AAiC3BvB,gBAAckB,oBAAUK,IAjCG;AAkC3BtB,yBAAuBiB,oBAAUO,OAAV,CAAkBP,oBAAUM,MAA5B,CAlCI;AAmC3BtB,gBAAcgB,oBAAUK,IAnCG;AAoC3BpB,SAAOe,oBAAUI,IApCU;AAqC3BlB,+BAA6Bc,oBAAUK;AArCZ,CAA7B;;AAwCA7D,iBAAiBgE,YAAjB,GAAgC;AAC9BrB,aAAWsB,SADmB;AAE9BjD,SAAO,aAFuB;AAG9BC,iCAA+B,IAHD;AAI9BG,mBAAiB6C,SAJa;AAK9B9C,gBAAc8C,SALgB;AAM9B3C,yBAAuB,IANO;AAO9BC,yBAAuB,IAPO;AAQ9BC,mBAAiByC,SARa;AAS9BxC,aAAWwC,SATmB;AAU9B5C,iBAAe4C,SAVe;AAW9BrC,kBAAgBqC,SAXc;AAY9BpC,kBAAgBoC,SAZc;AAa9BnC,kBAAgBmC,SAbc;AAc9BlC,kBAAgBkC,SAdc;AAe9BhC,uBAAqBgC,SAfS;AAgB9BjC,yBAAuBiC,SAhBO;AAiB9BtC,cAAY,EAjBkB;AAkB9BD,WAAS,KAlBqB;AAmB9BvB,gBAAc8D,SAnBgB;AAoB9B/B,eAAa+B,SApBiB;AAqB9BrB,eAAa,KArBiB;AAsB9BR,4BAA0B;AAAA,WAAM,KAAN;AAAA,GAtBI;AAuB9BC,mBAAiB,KAvBa;AAwB9BC,gBAAc;AAAA,WAAK4B,CAAL;AAAA,GAxBgB;AAyB9B3B,yBAAuB,EAzBO;AA0B9BC,gBAAc;AAAA,WAAK0B,CAAL;AAAA,GA1BgB;AA2B9BzB,SAAO,KA3BuB;AA4B9BC,+BAA6B;AAAA,WAAKwB,CAAL;AAAA;AA5BC,CAAhC","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport ActiveCallList from '../ActiveCallList';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class ActiveCallsPanel extends Component {\n  componentDidMount() {\n    if (\n      !this.hasCalls(this.props) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.hasCalls(this.props) &&\n      !this.hasCalls(nextProps) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  hasCalls(props = this.props) {\n    return (\n      props.activeRingCalls.length > 0 ||\n      props.activeOnHoldCalls.length > 0 ||\n      props.activeCurrentCalls.length > 0 ||\n      props.otherDeviceCalls.length > 0\n    );\n  }\n\n  getCallList(calls, title, showCallDetail = false) {\n    const {\n      currentLocale,\n      areaCode,\n      countryCode,\n      brand,\n      showContactDisplayPlaceholder,\n      formatPhone,\n      onClickToSms,\n      onCreateContact,\n      onViewContact,\n      outboundSmsPermission,\n      internalSmsPermission,\n      isLoggedContact,\n      onLogCall,\n      autoLog,\n      loggingMap,\n      webphoneAnswer,\n      webphoneReject,\n      webphoneHangup,\n      webphoneResume,\n      enableContactFallback,\n      webphoneToVoicemail,\n      sourceIcons,\n      activeCurrentCalls,\n      isWebRTC,\n      isSessionAConferenceCall,\n      onCallItemClick,\n      getAvatarUrl,\n      conferenceCallParties,\n      webphoneHold,\n      useV2,\n      updateSessionMatchedContact,\n    } = this.props;\n\n    return (\n      <ActiveCallList\n        title={title}\n        calls={calls}\n        currentLocale={currentLocale}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        formatPhone={formatPhone}\n        onClickToSms={onClickToSms}\n        onCreateContact={onCreateContact}\n        onViewContact={onViewContact}\n        outboundSmsPermission={outboundSmsPermission}\n        internalSmsPermission={internalSmsPermission}\n        isLoggedContact={isLoggedContact}\n        onLogCall={onLogCall}\n        autoLog={autoLog}\n        loggingMap={loggingMap}\n        webphoneAnswer={webphoneAnswer}\n        webphoneReject={webphoneReject}\n        webphoneHangup={webphoneHangup}\n        webphoneResume={webphoneResume}\n        webphoneToVoicemail={webphoneToVoicemail}\n        enableContactFallback={enableContactFallback}\n        sourceIcons={sourceIcons}\n        isWebRTC={isWebRTC}\n        currentCall={activeCurrentCalls[0]}\n        isSessionAConferenceCall={isSessionAConferenceCall}\n        useV2={useV2}// TODO: Maybe we should make all the call item consistent\n        onCallItemClick={onCallItemClick}\n        getAvatarUrl={getAvatarUrl}\n        conferenceCallParties={conferenceCallParties}\n        webphoneHold={webphoneHold}\n        showCallDetail={showCallDetail}\n        updateSessionMatchedContact={updateSessionMatchedContact}\n      />\n    );\n  }\n\n  render() {\n    const {\n      activeRingCalls,\n      activeOnHoldCalls,\n      activeCurrentCalls,\n      otherDeviceCalls,\n      className,\n      currentLocale,\n      showSpinner,\n    } = this.props;\n\n    if (!this.hasCalls()) {\n      return (\n        <div className={classnames(styles.root, className)}>\n          <p className={styles.noCalls}>{i18n.getString('noActiveCalls', currentLocale)}</p>\n          {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.root}>\n        <div\n          className={classnames(styles.root, className)}\n          ref={(target) => { this.container = target; }}\n        >\n          {this.getCallList(activeRingCalls, i18n.getString('ringCall', currentLocale))}\n          {this.getCallList(activeCurrentCalls, i18n.getString('currentCall', currentLocale))}\n          {this.getCallList(activeOnHoldCalls, i18n.getString('onHoldCall', currentLocale))}\n          {this.getCallList(otherDeviceCalls, i18n.getString('otherDeviceCall', currentLocale), true)}\n        </div>\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n      </div>\n    );\n  }\n}\n\nActiveCallsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  activeRingCalls: PropTypes.array.isRequired,\n  activeOnHoldCalls: PropTypes.array.isRequired,\n  activeCurrentCalls: PropTypes.array.isRequired,\n  otherDeviceCalls: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  formatPhone: PropTypes.func.isRequired,\n  onClickToSms: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  isLoggedContact: PropTypes.func,\n  onLogCall: PropTypes.func,\n  webphoneAnswer: PropTypes.func,\n  webphoneReject: PropTypes.func,\n  webphoneHangup: PropTypes.func,\n  webphoneResume: PropTypes.func,\n  webphoneToVoicemail: PropTypes.func,\n  autoLog: PropTypes.bool,\n  onViewContact: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n  loggingMap: PropTypes.object,\n  onCallsEmpty: PropTypes.func,\n  sourceIcons: PropTypes.object,\n  isWebRTC: PropTypes.bool.isRequired,\n  showSpinner: PropTypes.bool,\n  isSessionAConferenceCall: PropTypes.func,\n  onCallItemClick: PropTypes.func,\n  getAvatarUrl: PropTypes.func,\n  conferenceCallParties: PropTypes.arrayOf(PropTypes.object),\n  webphoneHold: PropTypes.func,\n  useV2: PropTypes.bool,\n  updateSessionMatchedContact: PropTypes.func,\n};\n\nActiveCallsPanel.defaultProps = {\n  className: undefined,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  onCreateContact: undefined,\n  onClickToSms: undefined,\n  outboundSmsPermission: true,\n  internalSmsPermission: true,\n  isLoggedContact: undefined,\n  onLogCall: undefined,\n  onViewContact: undefined,\n  webphoneAnswer: undefined,\n  webphoneReject: undefined,\n  webphoneHangup: undefined,\n  webphoneResume: undefined,\n  webphoneToVoicemail: undefined,\n  enableContactFallback: undefined,\n  loggingMap: {},\n  autoLog: false,\n  onCallsEmpty: undefined,\n  sourceIcons: undefined,\n  showSpinner: false,\n  isSessionAConferenceCall: () => false,\n  onCallItemClick: false,\n  getAvatarUrl: i => i,\n  conferenceCallParties: [],\n  webphoneHold: i => i,\n  useV2: false,\n  updateSessionMatchedContact: i => i,\n};\n"]}