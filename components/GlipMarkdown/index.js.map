{"version":3,"sources":["components/GlipMarkdown/index.js"],"names":["ImageRender","props","alt","atRender","AtRender","src","replace","propTypes","PropTypes","string","isRequired","func","defaultProps","undefined","LinkRender","href","title","children","node","TextRender","map","child","split","reduce","lines","line","length","push","backgroundImage","emojiones","Markdown","className","text","renderers","image","link","paragraph","styles","root"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport ReactMarkdown from 'react-markdown';\nimport Emojify from 'react-emojione';\nimport emojiones from '../../assets/images/emojione.png';\n\nimport styles from './styles.scss';\n\nfunction ImageRender(props) {\n  if (props.alt === ':Person' || props.alt === ':Team') {\n    if (typeof props.atRender === 'function') {\n      const AtRender = props.atRender;\n      return <AtRender id={props.src} type={props.alt.replace(':', '')} />;\n    }\n    return <a href={`#${props.src}`}>@{props.src}</a>;\n  }\n  return <img src={props.src} alt={props.alt} />;\n}\n\nImageRender.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  atRender: PropTypes.func,\n};\n\nImageRender.defaultProps = {\n  alt: undefined,\n  atRender: undefined,\n};\n\nfunction LinkRender(props) {\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.title}>\n      {props.children}\n    </a>\n  );\n}\n\nLinkRender.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nLinkRender.defaultProps = {\n  title: undefined,\n};\n\nfunction TextRender(props) {\n  const children = props.children.map((child) => {\n    if (child && child.split) {\n      return child.split('\\n').reduce((lines, line) => {\n        if (lines.length > 0) {\n          lines.push(<br />);\n        }\n        lines.push(line);\n        return lines;\n      }, []);\n    }\n    return child;\n  });\n  return (\n    <p>\n      <Emojify\n        style={{\n          backgroundImage: `url(\"${emojiones}\")`,\n        }}\n      >\n        {children}\n      </Emojify>\n    </p>\n  );\n}\n\nTextRender.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nfunction Markdown({\n  className,\n  text,\n  atRender,\n}) {\n  const renderers = {\n    image: props => <ImageRender {...props} atRender={atRender} />,\n    link: LinkRender,\n    paragraph: TextRender,\n  };\n  return (\n    <div className={classnames(styles.root, className)}>\n      <ReactMarkdown\n        className={styles['markdown-body']}\n        source={text}\n        renderers={renderers}\n      />\n    </div>\n  );\n  /* eslint-enable */\n}\n\nMarkdown.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  atRender: PropTypes.func,\n};\n\nMarkdown.defaultProps = {\n  className: undefined,\n  atRender: undefined,\n};\n\nexport default Markdown;\n"]}