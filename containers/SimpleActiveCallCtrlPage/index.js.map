{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/index.js"],"names":["mapToProps","_","phone","activeCallControl","regionSettings","callMonitor","alert","routerInteraction","mapToFunctions","ActiveCallControl","props","currentLocale","renderContactName","activeSession","sessionId","activeSessionId","activeCall","String","otherDeviceCalls","goBack","fallBackName","fallBackNumber","muteCtrl","ACTIONS_CTRL_MAP","transferCtrl","holdCtrl","callCtrlProps","phoneNumber","nameMatches","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unHold","onHangup","hangUp","onTransfer","number","transfer","showBackButton","backButtonLabel","i18n","getString","onBackButtonClick","formatPhone","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","searchContactList","searchContact","value","layout","callCtrlLayouts","normalCtrl","startTime","actions","isOnMute","isOnHold","uselessProps","recordStatus","onRecord","onStopRecord","onAdd","onMerge","onFlip","onPark","onKeyPadChange","Component","propTypes","PropTypes","string","object","func","array","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file simplify active call control page\n * detail: https://jira.ringcentral.com/browse/RCINT-8256\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport withPhone from '../../lib/withPhone';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../../components/ActiveCallPad';\nimport i18n from './i18n';\nimport { pickEleByProps, pickFallBackInfo } from './utils';\n\nfunction mapToProps(_, { phone }) {\n  const {\n    activeCallControl, regionSettings, callMonitor,\n    alert, routerInteraction,\n  } = phone;\n  return {\n    activeCallControl,\n    regionSettings,\n    callMonitor,\n    alert,\n    routerInteraction,\n  };\n}\n\nfunction mapToFunctions(_, { phone }) {\n  return {};\n}\n/* eslint-disable react/prefer-stateless-function */\nclass ActiveCallControl extends Component {\n  render() {\n    const {\n      currentLocale,\n      activeCallControl,\n      regionSettings,\n      callMonitor,\n      routerInteraction,\n      renderContactName,\n    } = this.props;\n\n    const { activeSession, activeSessionId: sessionId } = activeCallControl;\n\n    const activeCall = pickEleByProps(\n      { sessionId: String(sessionId) },\n      callMonitor.otherDeviceCalls\n    )[0] || {};\n\n    if (!activeSession) {\n      routerInteraction.goBack();\n      return null;\n    }\n    const { fallBackName, fallBackNumber } = pickFallBackInfo(\n      activeCall,\n      renderContactName(sessionId),\n      currentLocale\n    );\n    const { muteCtrl, transferCtrl, holdCtrl } = ACTIONS_CTRL_MAP;\n    const callCtrlProps = {\n      fallBackName,\n      currentLocale,\n      phoneNumber: fallBackNumber,\n      nameMatches: [],\n      onMute: async () => activeCallControl.mute(sessionId),\n      onUnmute: async () => activeCallControl.unmute(sessionId),\n      onHold: async () => activeCallControl.hold(sessionId),\n      onUnhold: async () => activeCallControl.unHold(sessionId),\n      onHangup: async () => activeCallControl.hangUp(sessionId),\n      onTransfer: async number => activeCallControl.transfer(number, sessionId),\n      showBackButton: true,\n      backButtonLabel: i18n.getString('allCalls', currentLocale),\n      onBackButtonClick: async () => routerInteraction.goBack(),\n      formatPhone: phoneNumber => formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      }),\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n      selectedMatcherIndex: 0,\n      onSelectMatcherName: () => null,\n      searchContactList: this.props.searchContactList,\n      searchContact: value => this.props.searchContact(value),\n      layout: callCtrlLayouts.normalCtrl,\n      startTime: activeCall.startTime,\n      actions: [muteCtrl, transferCtrl, holdCtrl],\n      isOnMute: activeSession.isOnMute,\n      isOnHold: activeSession.isOnHold,\n    };\n\n    const uselessProps = {\n      recordStatus: '',\n      onRecord: () => null,\n      onStopRecord: () => null,\n      onAdd: () => null,\n      onMerge: () => null,\n      onFlip: () => null,\n      onPark: () => null,\n      onKeyPadChange: () => null,\n    };\n\n    const props = {\n      ...callCtrlProps,\n      ...uselessProps\n    };\n\n    return <CallCtrlPanel {...props} />;\n  }\n}\n\nActiveCallControl.propTypes = {\n  currentLocale: PropTypes.string,\n  activeCallControl: PropTypes.object,\n  regionSettings: PropTypes.object,\n  callMonitor: PropTypes.object,\n  alert: PropTypes.object,\n  routerInteraction: PropTypes.object,\n  searchContact: PropTypes.func,\n  searchContactList: PropTypes.array,\n  renderContactName: PropTypes.func,\n};\n\nActiveCallControl.defaultProps = {\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  regionSettings: {},\n  callMonitor: {},\n  alert: {},\n  routerInteraction: {},\n  searchContact() {},\n  searchContactList: [],\n  renderContactName() { },\n};\n\nexport default withPhone(connect(mapToProps, mapToFunctions)(ActiveCallControl));\n"]}