{"version":3,"sources":["components/GlipPostContent/index.js"],"names":["Attachments","attachments","attachmentFiles","map","attachment","contentUri","name","styles","attachmentImg","type","attachmentFile","downloadIcon","propTypes","PropTypes","array","isRequired","PostContent","post","className","atRender","text","length","root","replace","textContent","content","object","string","func","defaultProps","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AAEA;;;;AAEA;;;;;;AAEA,SAASA,WAAT,OAAsC;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AACpC,MAAMC,kBAAkBD,YAAYE,GAAZ,CAAgB,UAACC,UAAD,EAAgB;AACtD,QAAI,yBAAUA,WAAWC,UAArB,CAAJ,EAAsC;AACpC,aACE;AACE,aAAKD,WAAWE,IADlB;AAEE,aAAKF,WAAWC,UAFlB;AAGE,aAAKD,WAAWE,IAHlB;AAIE,mBAAWC,iBAAOC;AAJpB,QADF;AAQD;AACD,QAAIJ,WAAWK,IAAX,KAAoB,MAAxB,EAAgC;AAC9B,aAAO,qBAAP;AACD;AACD,WACE;AAAA;AAAA;AACE,aAAKL,WAAWE,IADlB;AAEE,sBAFF;AAGE,cAAMF,WAAWC,UAHnB;AAIE,mBAAWE,iBAAOG;AAJpB;AAMGN,iBAAWE,IANd;AAOE;AAAA;AAAA,UAAM,OAAM,UAAZ,EAAuB,WAAWC,iBAAOI,YAAzC;AACE,sCAAC,kBAAD,IAAc,OAAM,IAApB,EAAyB,QAAO,IAAhC;AADF;AAPF,KADF;AAaD,GA3BuB,CAAxB;AA4BA,SACE;AAAA;AAAA,MAAK,WAAWJ,iBAAON,WAAvB;AACGC;AADH,GADF;AAKD;;AAEDF,YAAYY,SAAZ,GAAwB;AACtBX,eAAaY,oBAAUC,KAAV,CAAgBC;AADP,CAAxB;;AAIA,SAASC,WAAT,QAAoD;AAAA,MAA7BC,IAA6B,SAA7BA,IAA6B;AAAA,MAAvBC,SAAuB,SAAvBA,SAAuB;AAAA,MAAZC,QAAY,SAAZA,QAAY;;AAClD,MAAI,CAACF,KAAKG,IAAN,KAAe,CAACH,KAAKhB,WAAN,IAAqBgB,KAAKhB,WAAL,CAAiBoB,MAAjB,KAA4B,CAAhE,CAAJ,EAAwE;AACtE,WACE;AAAA;AAAA,QAAK,WAAW,0BAAWd,iBAAOe,IAAlB,EAAwBJ,SAAxB,CAAhB;AAAA;AAAA,KADF;AAKD;AACD,MAAIE,OAAOH,KAAKG,IAAhB;AACA,MAAIA,IAAJ,EAAU;AACRA,WAAOA,KAAKG,OAAL,CAAa,QAAb,EAAuB,OAAvB,EAAgCA,OAAhC,CAAwC,SAAxC,EAAmD,SAAnD,CAAP;AACD;AACD,MAAMC,cAAcJ,OACjB,8BAAC,sBAAD,IAAU,MAAMA,IAAhB,EAAsB,UAAUD,QAAhC,GADiB,GAC+B,IADnD;AAEA,MAAMlB,cAAcgB,KAAKhB,WAAL,GAAoB,8BAAC,WAAD,IAAa,aAAagB,KAAKhB,WAA/B,GAApB,GAAsE,IAA1F;AACA,SACE;AAAA;AAAA,MAAK,WAAW,0BAAWM,iBAAOe,IAAlB,EAAwBJ,SAAxB,CAAhB;AACE;AAAA;AAAA,QAAK,WAAWX,iBAAOkB,OAAvB;AACGD,iBADH;AAEGvB;AAFH;AADF,GADF;AAQD;;AAEDe,YAAYJ,SAAZ,GAAwB;AACtBK,QAAMJ,oBAAUa,MAAV,CAAiBX,UADD;AAEtBG,aAAWL,oBAAUc,MAFC;AAGtBR,YAAUN,oBAAUe;AAHE,CAAxB;;AAMAZ,YAAYa,YAAZ,GAA2B;AACzBX,aAAWY,SADc;AAEzBX,YAAUW;AAFe,CAA3B;;kBAKed,W","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport DownloadIcon from 'ringcentral-widgets/assets/images/Download.svg';\n\nimport isPicture from '../../lib/isPicture';\n\nimport Markdown from '../GlipMarkdown';\n\nimport styles from './styles.scss';\n\nfunction Attachments({ attachments }) {\n  const attachmentFiles = attachments.map((attachment) => {\n    if (isPicture(attachment.contentUri)) {\n      return (\n        <img\n          key={attachment.name}\n          src={attachment.contentUri}\n          alt={attachment.name}\n          className={styles.attachmentImg}\n        />\n      );\n    }\n    if (attachment.type === 'Card') {\n      return 'Unsupported message';\n    }\n    return (\n      <a\n        key={attachment.name}\n        download\n        href={attachment.contentUri}\n        className={styles.attachmentFile}\n      >\n        {attachment.name}\n        <span title=\"Download\" className={styles.downloadIcon}>\n          <DownloadIcon width=\"18\" height=\"18\" />\n        </span>\n      </a>\n    );\n  });\n  return (\n    <div className={styles.attachments}>\n      {attachmentFiles}\n    </div>\n  );\n}\n\nAttachments.propTypes = {\n  attachments: PropTypes.array.isRequired,\n};\n\nfunction PostContent({ post, className, atRender }) {\n  if (!post.text && (!post.attachments || post.attachments.length === 0)) {\n    return (\n      <div className={classnames(styles.root, className)}>\n        Unsupported message\n      </div>\n    );\n  }\n  let text = post.text;\n  if (text) {\n    text = text.replace('[code]', '```\\n').replace('[/code]', '\\n```\\n');\n  }\n  const textContent = text ?\n    (<Markdown text={text} atRender={atRender} />) : null;\n  const attachments = post.attachments ? (<Attachments attachments={post.attachments} />) : null;\n  return (\n    <div className={classnames(styles.root, className)}>\n      <div className={styles.content}>\n        {textContent}\n        {attachments}\n      </div>\n    </div>\n  );\n}\n\nPostContent.propTypes = {\n  post: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  atRender: PropTypes.func,\n};\n\nPostContent.defaultProps = {\n  className: undefined,\n  atRender: undefined,\n};\n\nexport default PostContent;\n"]}