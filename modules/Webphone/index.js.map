{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_contactMatcher","_tabManager","_onCallEndFunctions","push","_onCallRingFunctions","_onCallStartFunctions","_webphone","_remoteVideo","_localVideo","_sessions","_reducer","addSelector","sessions","outputs","forEach","session","to","from","ringSessionId","ringSession","find","id","filter","x","cached","activeSessionId","cachedSessions","realActiveSession","length","cachedSession","sort","sortByCreationTimeDesc","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","concat","stop","unregister","removeAllListeners","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","incoming","incomingAudio","outgoing","outgoingAudio","onRegistered","registered","info","message","webphoneErrors","connected","onUnregistered","unregistered","onRegistrationFailed","cause","connectionStatus","connectFailed","errorCode","needToReconnect","console","error","statusCode","status_code","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","danger","allowDuplicates","payload","registrationFailed","indexOf","_connect","on","log","_onInvite","reconnect","_retrySleep","connecting","resetRetryCounts","active","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","refreshServiceFeatures","notWebphonePermission","sipProvisionError","connectError","disconnected","browserNotSupported","warning","_fetchDL","notOutboundCallWithoutDL","checkDLError","hangup","_updateSessions","incomingResponse","callStatus","sessionStatus","finished","headers","_onCallStart","_onCallEnd","newSession","replaced","direction","callDirections","inbound","_addSession","_onAccepted","isOnMute","onMute","onHold","lastActiveTime","Date","now","mediaHandler","onGetUserMediaError","creationTime","request","_onCallRing","sessionId","get","_holdOtherSession","_beforeCallStart","accept","acceptOptions","callAnswer","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","callErrors","phoneNumber","validPhoneNumber","numbers","e164","isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","isOnHold","local","hold","holdError","currentSessionId","onholdCachedSession","recordStatus","startRecord","recording","idle","code","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","isOnTransfer","transfer","transferError","ua","invite","media","once","warmTransfer","flipValue","flip","isOnFlip","flipError","dtmfValue","dtmf","terminate","isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","outbound","contact","contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","map","normalizeSession","updateSessions","set","delete","minimized","normalizedSession","beforeCallStart","triggerMatch","_onCallStartFunc","activeSession","handler","callStart","callRing","playIncoming","_onCallRingFunc","_removeSession","callEnd","_onCallEndFunc","connectRetryCounts","state","status","moduleStatuses","ringSessions","onHoldSessions","lastEndedSessions","webphoneEnabled","audio","deviceId","inputDeviceId","video","render","remote","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport {\n  isBrowserSupport,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  isRecording,\n  isConferenceSession,\n  sortByCreationTimeDesc,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    { dep: 'ContactMatcher', optional: true },\n    'NumberValidate',\n    'RolesAndPermissions',\n    'AudioSettings',\n    { dep: 'TabManager', optional: true },\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call start\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._numberValidate = this::ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this::ensureExist(audioSettings, 'audioSettings');\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n\n    this._onCallEndFunctions = [];\n    if (typeof onCallEnd === 'function') {\n      this._onCallEndFunctions.push(onCallEnd);\n    }\n    this._onCallRingFunctions = [];\n    if (typeof onCallRing === 'function') {\n      this._onCallRingFunctions.push(onCallRing);\n    }\n    this._onCallStartFunctions = [];\n    if (typeof onCallStart === 'function') {\n      this._onCallStartFunctions.push(onCallStart);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = sessions.find(\n          session => session.id === ringSessionId\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('cachedSessions',\n      () => this.sessions,\n      sessions => sessions.filter(x => x.cached),\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      () => this.cachedSessions,\n      (activeSessionId, sessions, cachedSessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n\n        const realActiveSession = sessions.find(\n          session => session.id === activeSessionId\n        );\n\n        // NOT in conference merging process\n        if (!cachedSessions.length) {\n          return realActiveSession;\n        }\n\n        // realActiveSession is a conference\n        if (isConferenceSession(realActiveSession)) {\n          return realActiveSession;\n        }\n\n        // realActiveSession is cached\n        if (\n          !realActiveSession ||\n          (cachedSessions.find(cachedSession => cachedSession.id === realActiveSession.id))\n        ) {\n          return cachedSessions.sort(sortByCreationTimeDesc)[0];\n        }\n\n        // default rule\n        return [...cachedSessions, realActiveSession].sort(sortByCreationTimeDesc)[0];\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isRing(session))\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => sessions.filter(session => isOnHold(session))\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n    this._isFirstRegister = true;\n    const onRegistered = () => {\n      if (this._isFirstRegister) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n      }\n      this._isFirstRegister = false;\n    };\n    const onUnregistered = () => {\n      this._isFirstRegister = true;\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (response, cause) => {\n      if (this.connectionStatus === connectionStatus.connectFailed) {\n        return;\n      }\n      this._isFirstRegister = true;\n      let errorCode;\n      let needToReconnect = false;\n      console.error(response);\n      console.error('webphone register failed:', cause);\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response ? response.status_code : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 503:\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          needToReconnect = true;\n          break;\n        }\n        case 403: {\n          errorCode = webphoneErrors.webphoneForbidden;\n          needToReconnect = true;\n          break;\n        }\n        // Request Timeout\n        case 408: {\n          errorCode = webphoneErrors.requestTimeout;\n          needToReconnect = true;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          needToReconnect = true;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._alert.danger({\n        message: errorCode,\n        allowDuplicates: false,\n        payload: {\n          statusCode\n        }\n      });\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n        statusCode,\n      });\n      if (['Request Timeout', 'Connection Error'].indexOf(cause) !== -1) {\n        needToReconnect = true;\n      }\n      if (needToReconnect) {\n        this._removeWebphone();\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.on('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      if (!this._auth.loggedIn) {\n        return;\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      if (this._tabManager && !this._tabManager.active) {\n        await sleep(FIRST_THREE_RETRIES_DELAY);\n        await this._connect(reconnect);\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.danger({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n      } else {\n        errorCode = webphoneErrors.sipProvisionError;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      (\n        this.connectionStatus === connectionStatus.disconnected ||\n        this.connectionStatus === connectionStatus.connectFailed\n      )\n    ) {\n      if (!isBrowserSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        this._removeWebphone();\n        this._sessions = new Map();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n    });\n    session.on('progress', () => {\n      console.log('progress...');\n      session.callStatus = sessionStatus.connecting;\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.callStatus = sessionStatus.replaced;\n      newSession.callStatus = sessionStatus.connected;\n      newSession.direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.isOnMute = true;\n      session.callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.isOnMute = false;\n      session.callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.callStatus = sessionStatus.onHold;\n      this._updateSessions();\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.callStatus = sessionStatus.connected;\n      session.lastActiveTime = Date.now();\n      this._updateSessions();\n    });\n    session.mediaHandler.on('userMediaFailed', () => {\n      this._audioSettings.onGetUserMediaError();\n    });\n  }\n\n  _onInvite(session) {\n    session.creationTime = Date.now();\n    session.lastActiveTime = Date.now();\n    session.direction = callDirections.inbound;\n    session.callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._holdOtherSession(session.id);\n      this._onAccepted(session, 'inbound');\n      this._beforeCallStart(session);\n      await session.accept(this.acceptOptions);\n      this._onCallStart(session);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      session.isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.isOnHold().local) {\n      return true;\n    }\n    try {\n      await session.hold();\n      this._updateSessions();\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  _holdOtherSession(currentSessionId) {\n    this._sessions.forEach((session, sessionId) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.isOnHold().local) {\n        return;\n      }\n      session.hold();\n    });\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.isOnHold().local) {\n        this._holdOtherSession(session.id);\n        await session.unhold();\n        this._onCallStart(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isOnTransfer = true;\n      this._updateSessions();\n      const validatedResult\n        = await this._numberValidate.validateNumbers([transferNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        session.isOnTransfer = false;\n        this._updateSessions();\n        return;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.transfer(validPhoneNumber);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.dtmf(dtmfValue);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start a outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n  }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.direction = callDirections.outbound;\n    session.callStatus = sessionStatus.connecting;\n    session.creationTime = Date.now();\n    session.lastActiveTime = Date.now();\n    session.fromNumber = fromNumber;\n    this._onAccepted(session);\n    this._holdOtherSession(session.id);\n    this._beforeCallStart(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.minimized = !session.minimized;\n      this._updateSessions();\n    });\n  }\n\n  // for outbound call\n  _beforeCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.beforeCallStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (typeof this._onCallStartFunc === 'function') {\n      this._onCallStartFunc(normalizedSession, this.activeSession);\n    }\n    this._onCallStartFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (this._contactMatcher) {\n      this._contactMatcher.triggerMatch();\n    }\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    if (typeof this._onCallRingFunc === 'function') {\n      this._onCallRingFunc(normalizedSession, this.ringSession);\n    }\n    this._onCallRingFunctions.forEach(\n      handler => handler(normalizedSession, this.ringSession)\n    );\n  }\n\n  _onCallEnd(session) {\n    this._removeSession(session);\n    const normalizedSession = normalizeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (typeof this._onCallEndFunc === 'function') {\n      this._onCallEndFunc(normalizedSession, this.activeSession);\n    }\n    this._onCallEndFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) return;\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._onCallStartFunctions.push(handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._onCallRingFunctions.push(handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._onCallEndFunctions.push(handler);\n    }\n  }\n\n  isCallRecording(session) {\n    if (isRecording(session)) {\n      this._alert.warning({ message: recordStatus.recording });\n      return true;\n    }\n    return false;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get cachedSessions() {\n    return this._selectors.cachedSessions();\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        audio: {\n          deviceId: this._audioSettings.inputDeviceId,\n        },\n        video: false,\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n}\n"]}