{"version":3,"sources":["lib/DataMatcher/index.js"],"names":["checkName","name","Error","DEFAULT_TTL","DEFAULT_NO_MATCH_TTL","DataMatcher","deps","dep","optional","storage","ttl","noMatchTtl","disableCache","actionTypes","base","baseActionTypes","prefix","storageKey","getReducer","getDefaultReducer","getDataReducer","getDefaultDataReducer","options","_querySources","Map","_searchProviders","_matchPromises","_matchQueues","_storage","_ttl","_noMatchTtl","_storageKey","_reducer","registerReducer","key","reducer","data","_lastCleanUp","store","subscribe","_onStateChange","output","Set","forEach","readyCheckFn","getQueriesFn","query","add","now","Date","dispatch","type","cleanUp","queries","_getQueries","timestamp","_shouldInit","init","initSuccess","_shouldReset","reset","resetSuccess","pending","ready","searchProvidersReady","searchFn","constructor","has","set","_cleanUp","match","ignoreCache","ignoreQueue","Promise","all","keys","map","_matchSource","provider","get","promise","matchSuccess","matchError","error","queuedItems","promises","matching","push","item","queue","filteredQueries","_t","length","_fetchMatchResult","concat","values","state","status","moduleStatuses","_data","_dataMapping","RcModule","proxify","selector","getItem","dataMap","queryResult","matchesList","_providerValue","providerName","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAI,CAACA,IAAL,EAAW;AACT,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACD,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF;;AAED,IAAMC,WAAW,GAAG,KAAK,EAAL,GAAU,IAA9B;AACA,IAAMC,oBAAoB,GAAG,KAAK,IAAlC;IAQqBC,W,WANpB,iBAAQ;AACPC,EAAAA,IAAI,EAAE,CACJ;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GADI,EAEJ;AAAED,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAFI;AADC,CAAR,C;;;;;AAOC,yBAWQ;AAAA;;AAAA,mFAAJ,EAAI;;AAAA,QAVNP,IAUM,QAVNA,IAUM;AAAA,QATNQ,OASM,QATNA,OASM;AAAA,wBARNC,GAQM;AAAA,QARNA,GAQM,yBARAP,WAQA;AAAA,+BAPNQ,UAOM;AAAA,QAPNA,UAOM,gCAPOP,oBAOP;AAAA,iCANNQ,YAMM;AAAA,QANNA,YAMM,kCANS,KAMT;AAAA,gCALNC,WAKM;AAAA,QALNA,WAKM,iCALQ,sBAAW;AAAEC,MAAAA,IAAI,EAAEC,2BAAR;AAAyBC,MAAAA,MAAM,EAAEf;AAAjC,KAAX,CAKR;AAAA,+BAJNgB,UAIM;AAAA,QAJNA,UAIM,0CAJUhB,IAIV;AAAA,+BAHNiB,UAGM;AAAA,QAHNA,UAGM,gCAHOC,6BAGP;AAAA,mCAFNC,cAEM;AAAA,QAFNA,cAEM,oCAFWC,iCAEX;AAAA,QADHC,OACG;;AAAA;;AACNtB,IAAAA,SAAS,CAACC,IAAD,CAAT;AACA,uGACKqB,OADL;AAEET,MAAAA,WAAW,EAAXA;AAFF;;AAFM;;AAAA;;AAON,UAAKU,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACA,UAAKC,gBAAL,GAAwB,IAAID,GAAJ,EAAxB;AACA,UAAKE,cAAL,GAAsB,IAAIF,GAAJ,EAAtB;AACA,UAAKG,YAAL,GAAoB,IAAIH,GAAJ,EAApB;;AACA,QAAI,CAACZ,YAAL,EAAmB;AACjB,YAAKgB,QAAL,GAAgBnB,OAAhB;AACD;;AACD,UAAKoB,IAAL,GAAYnB,GAAZ;AACA,UAAKoB,WAAL,GAAmBnB,UAAnB;AAEA,UAAKoB,WAAL,GAAmBd,UAAnB;;AAEA,QAAI,MAAKW,QAAT,EAAmB;AACjB,YAAKI,QAAL,GAAgBd,UAAU,CAAC,MAAKL,WAAN,CAA1B;;AACA,YAAKe,QAAL,CAAcK,eAAd,CAA8B;AAC5BC,QAAAA,GAAG,EAAE,MAAKH,WADkB;AAE5BI,QAAAA,OAAO,EAAEf,cAAc,CAAC,MAAKP,WAAN;AAFK,OAA9B;AAID,KAND,MAMO;AACL,YAAKmB,QAAL,GAAgBd,UAAU,CAAC,MAAKL,WAAN,EAAmB;AAC3CuB,QAAAA,IAAI,EAAEhB,cAAc,CAAC,MAAKP,WAAN;AADuB,OAAnB,CAA1B;AAGD;;AAED,UAAKwB,YAAL,GAAoB,CAApB;AA/BM;AAgCP;;;;iCAEY;AAAA;;AACX,WAAKC,KAAL,CAAWC,SAAX,CAAqB;AAAA,eAAM,MAAI,CAACC,cAAL,EAAN;AAAA,OAArB;AACD;;;kCAEa;AACZ,UAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,WAAKnB,aAAL,CAAmBoB,OAAnB,CAA2B,UAACC,YAAD,EAAeC,YAAf,EAAgC;AACzD,YAAID,YAAY,EAAhB,EAAoB;AAClBC,UAAAA,YAAY,GAAGF,OAAf,CAAuB,UAACG,KAAD,EAAW;AAChCL,YAAAA,MAAM,CAACM,GAAP,CAAWD,KAAX;AACD,WAFD;AAGD;AACF,OAND;;AAOA,gCAAWL,MAAX;AACD;;;+BAEU;AACT;AACA,UAAMO,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AACA,UAAIA,GAAG,GAAG,KAAKX,YAAX,GAA0B,GAA9B,EAAmC;AACjC,aAAKA,YAAL,GAAoBW,GAApB;AACA,aAAKV,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiBuC,OADL;AAElBC,UAAAA,OAAO,EAAE,KAAKC,WAAL,EAFS;AAGlBC,UAAAA,SAAS,EAAEN,IAAI,CAACD,GAAL,EAHO;AAIlBtC,UAAAA,GAAG,EAAE,KAAKmB;AAJQ,SAApB;AAMD;AACF;;;qCAEgB;AACf,UAAI,KAAK2B,WAAL,EAAJ,EAAwB;AACtB,aAAKlB,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiB4C;AADL,SAApB,EADsB,CAItB;;AACA,aAAKnB,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiB6C;AADL,SAApB;AAGD,OARD,MAQO,IAAI,KAAKC,YAAL,EAAJ,EAAyB;AAC9B,aAAKrB,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiB+C;AADL,SAApB;AAGA,aAAKvB,YAAL,GAAoB,CAApB;AACA,aAAKC,KAAL,CAAWY,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiBgD;AADL,SAApB;AAGD;AACF;;;kCAEa;AACZ,aAAO,CAAC,EACN,KAAKC,OAAL,KACC,CAAC,KAAKlC,QAAN,IAAkB,KAAKA,QAAL,CAAcmC,KADjC,KAEA,KAAKC,oBAHC,CAAR;AAKD;;;mCAEc;AACb,aAAO,CAAC,EACN,KAAKD,KAAL,KAEG,CAAC,CAAC,KAAKnC,QAAP,IAAmB,CAAC,KAAKA,QAAL,CAAcmC,KAAnC,IACA,CAAC,KAAKC,oBAHR,CADM,CAAR;AAOD;;;6CASmD;AAAA,UAAhC/D,IAAgC,SAAhCA,IAAgC;AAAA,UAA1BgE,QAA0B,SAA1BA,QAA0B;AAAA,UAAhBrB,YAAgB,SAAhBA,YAAgB;;AAClD,UAAI,CAAC3C,IAAL,EAAW;AACT,cAAM,IAAIC,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,6BAAN;AAGD;;AACD,UAAI,KAAKwB,gBAAL,CAAsB0C,GAAtB,CAA0BlE,IAA1B,CAAJ,EAAqC;AACnC,cAAM,IAAIC,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,kCAC2CA,IAD3C,wBAAN;AAGD;;AACD,UAAI,OAAOgE,QAAP,KAAoB,UAAxB,EAAoC;AAClC,cAAM,IAAI/D,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,wCAAN;AAGD;;AACD,UAAI,OAAO2C,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAI1C,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,4CAAN;AAGD;;AACD,WAAKwB,gBAAL,CAAsB2C,GAAtB,CAA0BnE,IAA1B,EAAgC;AAC9BgE,QAAAA,QAAQ,EAARA,QAD8B;AAE9BrB,QAAAA,YAAY,EAAZA;AAF8B,OAAhC;AAID;;;0CAE8C;AAAA,UAA9BC,YAA8B,SAA9BA,YAA8B;AAAA,UAAhBD,YAAgB,SAAhBA,YAAgB;;AAC7C,UAAI,OAAOC,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAI3C,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,4CAAN;AAGD;;AACD,UAAI,OAAO2C,YAAP,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAI1C,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,4CAAN;AAGD;;AACD,UAAI,KAAKsB,aAAL,CAAmB4C,GAAnB,CAAuBtB,YAAvB,CAAJ,EAA0C;AACxC,cAAM,IAAI3C,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,+CAAN;AAGD;;AACD,WAAKsB,aAAL,CAAmB6C,GAAnB,CAAuBvB,YAAvB,EAAqCD,YAArC;AACD;;;;;;;;;;;qBAIK,KAAKmB,K;;;;;AACP,qBAAKM,QAAL;;;uBACM,KAAKC,KAAL,CAAW;AACfjB,kBAAAA,OAAO,EAAE,KAAKC,WAAL;AADM,iBAAX,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQRD,gBAAAA,O,SAAAA,O,4BACAkB,W,EAAAA,W,kCAAc,K,gDACdC,W,EAAAA,W,kCAAc,K;;uBAERC,OAAO,CAACC,GAAR,CAAY,mBAAI,KAAKjD,gBAAL,CAAsBkD,IAAtB,EAAJ,EACfC,GADe,CACX,UAAA3E,IAAI;AAAA,yBACP,MAAI,CAAC4E,YAAL,CAAkB;AAChB5E,oBAAAA,IAAI,EAAJA,IADgB;AAEhBoD,oBAAAA,OAAO,EAAPA,OAFgB;AAGhBkB,oBAAAA,WAAW,EAAXA,WAHgB;AAIhBC,oBAAAA,WAAW,EAAXA;AAJgB,mBAAlB,CADO;AAAA,iBADO,CAAZ,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYNvE,gBAAAA,I,SAAAA,I,EACAoD,O,SAAAA,O;;AAGE,qBAAKf,KAAL,CAAWY,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiByD,KADL;AAElBjB,kBAAAA,OAAO,EAAPA,OAFkB;AAGlBpD,kBAAAA,IAAI,EAAJA;AAHkB,iBAApB;AAKM6E,gBAAAA,Q,GAAW,KAAKrD,gBAAL,CAAsBsD,GAAtB,CAA0B9E,IAA1B,C;;oBACZ6E,Q;;;;;sBACG,IAAI5E,KAAJ,WACD,KAAKgE,WAAL,CAAiBjE,IADhB,gCACyCA,IADzC,qB;;;AAIF+E,gBAAAA,O,GAAUF,QAAQ,CACrBb,QADa,CACJ;AACRZ,kBAAAA,OAAO,EAAPA;AADQ,iBADI,C;;AAIhB,qBAAK3B,cAAL,CAAoB0C,GAApB,CAAwBnE,IAAxB,EAA8B;AAC5B+E,kBAAAA,OAAO,EAAPA,OAD4B;AAE5B3B,kBAAAA,OAAO,EAAPA;AAF4B,iBAA9B;;;uBAImB2B,O;;;AAAb5C,gBAAAA,I;;AACN,qBAAKV,cAAL,WAA2BzB,IAA3B;;AAEA,qBAAKqC,KAAL,CAAWY,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiBoE,YADL;AAElBhF,kBAAAA,IAAI,EAAJA,IAFkB;AAGlBoD,kBAAAA,OAAO,EAAPA,OAHkB;AAIlBjB,kBAAAA,IAAI,EAAJA,IAJkB;AAKlBmB,kBAAAA,SAAS,EAAEN,IAAI,CAACD,GAAL;AALO,iBAApB;;;;;;;;AAQA,qBAAKtB,cAAL,WAA2BzB,IAA3B;;AACA,qBAAKqC,KAAL,CAAWY,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKtC,WAAL,CAAiBqE,UADL;AAElBjF,kBAAAA,IAAI,EAAJA,IAFkB;AAGlBoD,kBAAAA,OAAO,EAAPA,OAHkB;AAIlB8B,kBAAAA,KAAK,cAJa;AAKlB5B,kBAAAA,SAAS,EAAEN,IAAI,CAACD,GAAL;AALO,iBAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaF/C,gBAAAA,I,SAAAA,I,EACAoD,O,SAAAA,O,EACAkB,W,SAAAA,W,EACAC,W,SAAAA,W;AAEMxB,gBAAAA,G,GAAMC,IAAI,CAACD,GAAL,E;AACNZ,gBAAAA,I,GAAO,KAAKA,I;AACZgD,gBAAAA,W,GAAc,E;AACdC,gBAAAA,Q,GAAW,E;;AAGjB,oBAAI,CAACb,WAAD,IAAgB,KAAK9C,cAAL,CAAoByC,GAApB,CAAwBlE,IAAxB,CAApB,EAAmD;AACjDqF,kBAAAA,QAAQ,GAAG,KAAK5D,cAAL,CAAoBqD,GAApB,CAAwB9E,IAAxB,CAAX;AACAoF,kBAAAA,QAAQ,CAACE,IAAT,CAAcD,QAAQ,CAACN,OAAvB;AACAM,kBAAAA,QAAQ,CAACjC,OAAT,CAAiBV,OAAjB,CAAyB,UAAC6C,IAAD,EAAU;AACjCJ,oBAAAA,WAAW,CAACI,IAAD,CAAX,GAAoB,IAApB;AACD,mBAFD;AAGD;;AAED,oBAAI,CAAChB,WAAD,IAAgB,KAAK7C,YAAL,CAAkBwC,GAAlB,CAAsBlE,IAAtB,CAApB,EAAiD;AAC/CwF,kBAAAA,KAAK,GAAG,KAAK9D,YAAL,CAAkBoD,GAAlB,CAAsB9E,IAAtB,CAAR;AACAoF,kBAAAA,QAAQ,CAACE,IAAT,CAAcE,KAAK,CAACT,OAApB;AACAS,kBAAAA,KAAK,CAACpC,OAAN,CAAcV,OAAd,CAAsB,UAAC6C,IAAD,EAAU;AAC9BJ,oBAAAA,WAAW,CAACI,IAAD,CAAX,GAAoB,IAApB;AACD,mBAFD;AAGD;;AACKE,gBAAAA,e,GAAkBnB,WAAW,GACjClB,OADiC,GAEjC,mBACE,UAAAP,KAAK;AAAA,yBACH,CAACsC,WAAW,CAACtC,KAAD,CAAZ,KAEE,CAACV,IAAI,CAACU,KAAD,CAAL,IACA,CAACV,IAAI,CAACU,KAAD,CAAJ,CAAY7C,IAAZ,CADD,IAEA+C,GAAG,GAAGZ,IAAI,CAACU,KAAD,CAAJ,CAAY7C,IAAZ,EAAkB0F,EAAxB,GAA6B,MAAI,CAAC7D,WAJpC,CADG;AAAA,iBADP,EASEuB,OATF,C;;AAYF,oBAAIqC,eAAe,CAACE,MAApB,EAA4B;AAC1B,sBAAIpB,WAAJ,EAAiB;AACfa,oBAAAA,QAAQ,CAACE,IAAT,CAAc,KAAKM,iBAAL,CAAuB;AACnC5F,sBAAAA,IAAI,EAAJA,IADmC;AAEnCoD,sBAAAA,OAAO,EAAEqC;AAF0B,qBAAvB,CAAd;AAID,mBALD,MAKO,IAAI,CAACJ,QAAL,EAAe;AACpBA,oBAAAA,QAAQ,GAAG,KAAKO,iBAAL,CAAuB;AAChC5F,sBAAAA,IAAI,EAAJA,IADgC;AAEhCoD,sBAAAA,OAAO,EAAEqC;AAFuB,qBAAvB,CAAX;AAIAL,oBAAAA,QAAQ,CAACE,IAAT,CAAcD,QAAd;AACD,mBANM,MAMA,IAAI,CAACG,KAAL,EAAY;AACjBA,oBAAAA,KAAK,GAAG;AACNpC,sBAAAA,OAAO,EAAEqC;AADH,qBAAR;AAGAD,oBAAAA,KAAK,CAACT,OAAN,GAAgB;AAAA;AAAA,4CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACTM,QAAQ,CAACN,OADA;;AAAA;AAETA,8BAAAA,OAFS,GAEC,MAAI,CAACa,iBAAL,CAAuB;AACrC5F,gCAAAA,IAAI,EAAJA,IADqC;AAErCoD,gCAAAA,OAAO,EAAEoC,KAAK,CAACpC;AAFsB,+BAAvB,CAFD;;AAMf,8BAAA,MAAI,CAAC1B,YAAL,WAAyB1B,IAAzB;;AANe;AAAA,qCAOT+E,OAPS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAD,IAAhB;;AASA,yBAAKrD,YAAL,CAAkByC,GAAlB,CAAsBnE,IAAtB,EAA4BwF,KAA5B;;AACAJ,oBAAAA,QAAQ,CAACE,IAAT,CAAcE,KAAK,CAACT,OAApB;AACD,mBAfM,MAeA;AACLS,oBAAAA,KAAK,CAACpC,OAAN,GAAgBoC,KAAK,CAACpC,OAAN,CAAcyC,MAAd,CAAqBJ,eAArB,CAAhB;AACD;AACF;;;uBACKjB,OAAO,CAACC,GAAR,CAAYW,QAAZ,C;;;;;;;;;;;;;;;;;;wBAxMmB;AACzB,aAAO,gBACL;AAAA,YAAGzC,YAAH,SAAGA,YAAH;AAAA,eAAsBA,YAAY,EAAlC;AAAA,OADK,qBAED,KAAKnB,gBAAL,CAAsBsE,MAAtB,EAFC,EAAP;AAID;;;wBAsMY;AACX,aAAO,KAAKC,KAAL,CAAWC,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWC,MAAX,KAAsBC,2BAAenC,KAA5C;AACD;;;wBAEa;AACZ,aAAO,KAAKiC,KAAL,CAAWC,MAAX,KAAsBC,2BAAepC,OAA5C;AACD;;;wBAEU;AACT,aAAO,KAAKqC,KAAZ;AACD;;;wBAYiB;AAChB,aAAO,KAAKC,YAAZ;AACD;;;;EAzVsCC,qB,0EAuKtCC,mB,kJAUAA,mB,kJAgEAA,mB,gKA4FAC,kB;;;;;;;WACO,CACN;AAAA,aACE,MAAI,CAAC3E,QAAL,GACE,MAAI,CAACA,QAAL,CAAc4E,OAAd,CAAsB,MAAI,CAACzE,WAA3B,CADF,GAEE,MAAI,CAACiE,KAAL,CAAW5D,IAHf;AAAA,KADM,EAMN,UAAAA,IAAI;AAAA,aAAKA,IAAI,IAAI,EAAb;AAAA,KANE,C;;iFAaPmE,kB;;;;;;;WACc,CACb;AAAA,aAAM,MAAI,CAACnE,IAAX;AAAA,KADa,EAEb,UAACA,IAAD,EAAU;AACR,UAAMqE,OAAO,GAAG,EAAhB;AACA,0BACE,UAAC3D,KAAD,EAAW;AACT,YAAM4D,WAAW,GAAGtE,IAAI,CAACU,KAAD,CAAxB;;AACA,YAAI,CAAC4D,WAAL,EAAkB;AAChB;AACD;;AACD,YAAIC,WAAW,GAAG,EAAlB;AACA,4BACE,UAACC,cAAD,EAAiBC,YAAjB,EAAkC;AAChC,cAAIH,WAAW,CAACG,YAAD,CAAX,IAA6BH,WAAW,CAACG,YAAD,CAAX,CAA0BzE,IAA1B,CAA+BwD,MAA/B,GAAwC,CAAzE,EAA4E;AAC1Ee,YAAAA,WAAW,GAAGA,WAAW,CAACb,MAAZ,CAAmBY,WAAW,CAACG,YAAD,CAAX,CAA0BzE,IAA7C,CAAd;AACD;AACF,SALH,EAME,MAAI,CAACX,gBANP;;AAQA,YAAIkF,WAAW,CAACf,MAAZ,GAAqB,CAAzB,EAA4B;AAC1Ba,UAAAA,OAAO,CAAC3D,KAAD,CAAP,GAAiB6D,WAAjB;AACD;AACF,OAlBH,EAmBEG,MAAM,CAACnC,IAAP,CAAYvC,IAAZ,CAnBF;AAqBA,aAAOqE,OAAP;AACD,KA1BY,C","sourcesContent":["import { all, filter, forEach } from 'ramda';\nimport RcModule from '../RcModule';\nimport { Library } from '../di';\nimport { prefixEnum } from '../Enum';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport baseActionTypes from './baseActionTypes';\nimport getDefaultReducer from './getDefaultReducer';\nimport getDefaultDataReducer from './getDefaultDataReducer';\nimport proxify from '../proxy/proxify';\nimport { selector } from '../selector';\n\nexport function checkName(name) {\n  if (!name) {\n    throw new Error('DataMatcher: \"name\" is required.');\n  }\n  if (typeof name !== 'string') {\n    throw new Error('DataMatcher: \"name\" must be a string.');\n  }\n}\n\nconst DEFAULT_TTL = 30 * 60 * 1000;\nconst DEFAULT_NO_MATCH_TTL = 30 * 1000;\n\n@Library({\n  deps: [\n    { dep: 'Storage', optional: true },\n    { dep: 'DataMatcherOptions', optional: true }\n  ]\n})\nexport default class DataMatcher extends RcModule {\n  constructor({\n    name,\n    storage,\n    ttl = DEFAULT_TTL,\n    noMatchTtl = DEFAULT_NO_MATCH_TTL,\n    disableCache = false,\n    actionTypes = prefixEnum({ base: baseActionTypes, prefix: name }),\n    storageKey = `${name}Data`,\n    getReducer = getDefaultReducer,\n    getDataReducer = getDefaultDataReducer,\n    ...options\n  } = {}) {\n    checkName(name);\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._querySources = new Map();\n    this._searchProviders = new Map();\n    this._matchPromises = new Map();\n    this._matchQueues = new Map();\n    if (!disableCache) {\n      this._storage = storage;\n    }\n    this._ttl = ttl;\n    this._noMatchTtl = noMatchTtl;\n\n    this._storageKey = storageKey;\n\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._storageKey,\n        reducer: getDataReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        data: getDataReducer(this.actionTypes),\n      });\n    }\n\n    this._lastCleanUp = 0;\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _getQueries() {\n    const output = new Set();\n    this._querySources.forEach((readyCheckFn, getQueriesFn) => {\n      if (readyCheckFn()) {\n        getQueriesFn().forEach((query) => {\n          output.add(query);\n        });\n      }\n    });\n    return [...output];\n  }\n\n  _cleanUp() {\n    // throttle clean up to only run once every 100ms\n    const now = Date.now();\n    if (now - this._lastCleanUp > 100) {\n      this._lastCleanUp = now;\n      this.store.dispatch({\n        type: this.actionTypes.cleanUp,\n        queries: this._getQueries(),\n        timestamp: Date.now(),\n        ttl: this._ttl,\n      });\n    }\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      // this._cleanUp();\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this._lastCleanUp = 0;\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return !!(\n      this.pending &&\n      (!this._storage || this._storage.ready) &&\n      this.searchProvidersReady\n    );\n  }\n\n  _shouldReset() {\n    return !!(\n      this.ready &&\n      (\n        (!!this._storage && !this._storage.ready) ||\n        !this.searchProvidersReady\n      )\n    );\n  }\n\n  get searchProvidersReady() {\n    return all(\n      ({ readyCheckFn }) => readyCheckFn(),\n      [...this._searchProviders.values()]\n    );\n  }\n\n  addSearchProvider({ name, searchFn, readyCheckFn }) {\n    if (!name) {\n      throw new Error(\n        `${this.constructor.name}: \"name\" is required.`\n      );\n    }\n    if (this._searchProviders.has(name)) {\n      throw new Error(\n        `${this.constructor.name}: A provider named \"${name}\" already exists.`\n      );\n    }\n    if (typeof searchFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"searchFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    this._searchProviders.set(name, {\n      searchFn,\n      readyCheckFn,\n    });\n  }\n\n  addQuerySource({ getQueriesFn, readyCheckFn }) {\n    if (typeof getQueriesFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"getQueriesFn\" must be a function.`\n      );\n    }\n    if (typeof readyCheckFn !== 'function') {\n      throw new Error(\n        `${this.constructor.name}: \"readyCheckFn\" must be a function.`\n      );\n    }\n    if (this._querySources.has(getQueriesFn)) {\n      throw new Error(\n        `${this.constructor.name}: this getQueryFn has already been added.`\n      );\n    }\n    this._querySources.set(getQueriesFn, readyCheckFn);\n  }\n\n  @proxify\n  async triggerMatch() {\n    if (this.ready) {\n      this._cleanUp();\n      await this.match({\n        queries: this._getQueries(),\n      });\n    }\n  }\n\n  @proxify\n  async match({\n    queries,\n    ignoreCache = false,\n    ignoreQueue = false,\n  }) {\n    await Promise.all([...this._searchProviders.keys()]\n      .map(name => (\n        this._matchSource({\n          name,\n          queries,\n          ignoreCache,\n          ignoreQueue,\n        })\n      )));\n  }\n\n  async _fetchMatchResult({\n    name,\n    queries,\n  }) {\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.match,\n        queries,\n        name,\n      });\n      const provider = this._searchProviders.get(name);\n      if (!provider) {\n        throw new Error(\n          `${this.constructor.name}: provider named \"${name} does not exist`\n        );\n      }\n      const promise = provider\n        .searchFn({\n          queries,\n        });\n      this._matchPromises.set(name, {\n        promise,\n        queries,\n      });\n      const data = await promise;\n      this._matchPromises.delete(name);\n\n      this.store.dispatch({\n        type: this.actionTypes.matchSuccess,\n        name,\n        queries,\n        data,\n        timestamp: Date.now(),\n      });\n    } catch (error) {\n      this._matchPromises.delete(name);\n      this.store.dispatch({\n        type: this.actionTypes.matchError,\n        name,\n        queries,\n        error,\n        timestamp: Date.now(),\n      });\n      throw error;\n    }\n  }\n\n  @proxify\n  async _matchSource({\n    name,\n    queries,\n    ignoreCache,\n    ignoreQueue,\n  }) {\n    const now = Date.now();\n    const data = this.data;\n    const queuedItems = {};\n    const promises = [];\n    let queue;\n    let matching;\n    if (!ignoreQueue && this._matchPromises.has(name)) {\n      matching = this._matchPromises.get(name);\n      promises.push(matching.promise);\n      matching.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n\n    if (!ignoreQueue && this._matchQueues.has(name)) {\n      queue = this._matchQueues.get(name);\n      promises.push(queue.promise);\n      queue.queries.forEach((item) => {\n        queuedItems[item] = true;\n      });\n    }\n    const filteredQueries = ignoreCache ?\n      queries :\n      filter(\n        query => (\n          !queuedItems[query] &&\n          (\n            !data[query] ||\n            !data[query][name] ||\n            now - data[query][name]._t > this._noMatchTtl\n          )\n        ),\n        queries\n      );\n\n    if (filteredQueries.length) {\n      if (ignoreQueue) {\n        promises.push(this._fetchMatchResult({\n          name,\n          queries: filteredQueries,\n        }));\n      } else if (!matching) {\n        matching = this._fetchMatchResult({\n          name,\n          queries: filteredQueries,\n        });\n        promises.push(matching);\n      } else if (!queue) {\n        queue = {\n          queries: filteredQueries,\n        };\n        queue.promise = (async () => {\n          await matching.promise;\n          const promise = this._fetchMatchResult({\n            name,\n            queries: queue.queries,\n          });\n          this._matchQueues.delete(name);\n          await promise;\n        })();\n        this._matchQueues.set(name, queue);\n        promises.push(queue.promise);\n      } else {\n        queue.queries = queue.queries.concat(filteredQueries);\n      }\n    }\n    await Promise.all(promises);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  @selector\n  _data = [\n    () => (\n      this._storage ?\n        this._storage.getItem(this._storageKey) :\n        this.state.data\n    ),\n    data => (data || {})\n  ]\n\n  get dataMapping() {\n    return this._dataMapping;\n  }\n\n  @selector\n  _dataMapping = [\n    () => this.data,\n    (data) => {\n      const dataMap = {};\n      forEach(\n        (query) => {\n          const queryResult = data[query];\n          if (!queryResult) {\n            return;\n          }\n          let matchesList = [];\n          forEach(\n            (_providerValue, providerName) => {\n              if (queryResult[providerName] && queryResult[providerName].data.length > 0) {\n                matchesList = matchesList.concat(queryResult[providerName].data);\n              }\n            },\n            this._searchProviders\n          );\n          if (matchesList.length > 0) {\n            dataMap[query] = matchesList;\n          }\n        },\n        Object.keys(data)\n      );\n      return dataMap;\n    }\n  ]\n}\n"],"file":"index.js"}