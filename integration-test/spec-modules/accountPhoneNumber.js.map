{"version":3,"sources":["integration-test/spec-modules/accountPhoneNumber.js"],"names":["authzProfileBody","require","auth","client","accountPhoneNumber","account","describe","timeout","mock","mockClient","isLoginSuccess","clientHistoryRequest","ClientHistoryRequest","Map","before","restore","mockForLogin","console","error","skip","after","logout","it","retries","expect","numbers","length","equal","Object","keys","extensionToPhoneNumberMap","mockAuthzProfile","authzProfile","permissions","filter","p","permission","id"],"mappings":"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","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, accountPhoneNumber, account) => {\n  describe('AccountPhoneNumber:', function () {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    describe('when there is ReadCompanyPhoneNumbers permission:', function () {\n      before(async function() {\n        mock.restore();\n        mock.mockForLogin();\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error('Skip test case as failed to login with credential ', account);\n          this.skip();\n        }\n      });\n\n      after(async function () {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(accountPhoneNumber.numbers.length).equal(2);\n      });\n\n      it('Should get extensionToPhoneNumberMap', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(Object.keys(accountPhoneNumber.extensionToPhoneNumberMap).length).equal(2);\n      });\n    });\n\n    describe(\"when there isn't ReadCompanyPhoneNumbers permission:\", function () {\n      before(async function() {\n        mock.restore();\n        mock.mockForLogin({ mockAuthzProfile: false });\n        mock.authzProfile({\n          permissions: authzProfileBody.permissions.filter(p => p.permission.id !== 'ReadCompanyPhoneNumbers')\n        });\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error('Skip test case as failed to login with credential ', account);\n          this.skip();\n        }\n      });\n\n      after(async function () {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should not load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(accountPhoneNumber.numbers.length).equal(0);\n      });\n\n      it('Should not get extensionToPhoneNumberMap', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(Object.keys(accountPhoneNumber.extensionToPhoneNumberMap).length).equal(0);\n      });\n    });\n  });\n};\n"],"file":"accountPhoneNumber.js"}