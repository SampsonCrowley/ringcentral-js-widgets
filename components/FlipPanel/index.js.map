{"version":3,"sources":["components/FlipPanel/index.js"],"names":["FlipPanel","props","state","flipValue","flipNumbers","length","phoneNumber","flipEnabled","isOnFlip","onRadioSelect","value","setState","onFlip","styles","root","hideFlipPanel","headerTitle","i18n","getString","currentLocale","flipContainer","radioGroup","formatPhone","buttonGroup","button","flipButton","disabled","flipIcon","FlipIcon","completeButton","complete","EndIcon","Component","propTypes","PropTypes","bool","isRequired","array","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BackButton from '../BackButton';\nimport BackHeader from '../BackHeader';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport CircleButton from '../CircleButton';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class FlipPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue: this.props.flipNumbers.length === 0 ? '' : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n    this.onRadioSelect = (value) => {\n      this.setState({\n        flipValue: value,\n      });\n    };\n    this.onFlip = () => {\n      this.props.onFlip(this.state.flipValue);\n      this.setState({\n        flipEnabled: false,\n      });\n    };\n  }\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.isOnFlip ? null : this.props.hideFlipPanel}\n          backButton={<BackButton showIcon={!this.props.isOnFlip} />}\n        >\n          <span data-sign='flipTitle'\n          className={styles.headerTitle}>\n            {i18n.getString('flipHeader', this.props.currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            dataSign={'flipNumber'}\n            className={styles.radioGroup}\n            radioOptions={this.props.flipNumbers}\n            disabled={!this.state.flipEnabled}\n            formatPhone={this.props.formatPhone}\n            onRadioSelect={this.onRadioSelect}\n            currentLocale={this.props.currentLocale}\n          />\n          <div className={styles.buttonGroup}>\n            <div data-sign='flip'className={styles.button} title={i18n.getString('flip', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.state.flipEnabled}\n                className={\n                  classnames(styles.flipButton, this.state.flipEnabled ? '' : styles.disabled)\n                }\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div data-sign='flipComplete'className={styles.button} title={i18n.getString('complete', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.props.isOnFlip}\n                className={\n                  classnames(styles.completeButton, this.props.isOnFlip ? '' : styles.disabled)\n                }\n                onClick={this.props.complete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFlipPanel.propTypes = {\n  isOnFlip: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  hideFlipPanel: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  complete: PropTypes.func.isRequired,\n};\n"],"file":"index.js"}