{"version":3,"sources":["integration-test/spec-modules/dialingPlan.js"],"names":["authzProfileBody","require","auth","client","dialingPlan","account","describe","timeout","mock","mockClient","isLoginSuccess","clientHistoryRequest","ClientHistoryRequest","Map","afterEach","logout","it","restore","mockForLogin","console","error","skip","retries","expect","plans","length","equal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,2BAAD,CAAhC;;eAEe,kBAACC,IAAD,EAAOC,MAAP,EAAeC,WAAf,EAA4BC,OAA5B,EAAwC;AACrDC,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAY;AAAA;;AACnC,SAAKC,OAAL,CAAa,KAAb;AACAC,IAAAA,IAAI,CAACC,UAAL,CAAgBN,MAAhB;AAEA,QAAIO,cAAJ;AACA,QAAMC,oBAAoB,GAAG,IAAIC,gCAAJ,CAAyB,IAAIC,GAAJ,EAAzB,EAAoCV,MAApC,CAA7B;AAEAW,IAAAA,SAAS;AAAA;AAAA;AAAA;AAAA,4BAAC;AAAA;AAAA;AAAA;AAAA;AACRZ,cAAAA,IAAI,CAACa,MAAL;AADQ;AAAA,qBAEF,6BAAc,CAAd,CAFE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT;AAKAC,IAAAA,EAAE,CAAC,yEAAD;AAAA;AAAA;AAAA;AAAA,4BAA4E;AAAA;AAAA;AAAA;AAAA;AAC5ER,cAAAA,IAAI,CAACS,OAAL;AACAT,cAAAA,IAAI,CAACU,YAAL;AAF4E;AAAA,qBAGrD,2BAAYhB,IAAZ,EAAkBG,OAAlB,CAHqD;;AAAA;AAG5EK,cAAAA,cAH4E;;AAI5E,kBAAI,CAACA,cAAL,EAAqB;AACnBS,gBAAAA,OAAO,CAACC,KAAR,CAAc,oDAAd,EAAoEf,OAApE;;AACA,gBAAA,KAAI,CAACgB,IAAL;AACD;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa,CAAb;;AAR4E;AAAA,qBAStE,6BAAc,CAAd,CATsE;;AAAA;AAU5EC,cAAAA,MAAM,CAACnB,WAAW,CAACoB,KAAZ,CAAkBC,MAAnB,CAAN,CAAiCC,KAAjC,CAAuC,CAAvC;;AAV4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5E,GAAF;AAYD,GAxBO,CAAR;AAyBD,C","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, dialingPlan, account) => {\n  describe('DialingPlan:', function () {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    afterEach(async function () {\n      auth.logout();\n      await waitInSeconds(1);\n    });\n\n    it('Should load availableExtensions when there is ReadExtensions permission', async () => {\n      mock.restore();\n      mock.mockForLogin();\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error('Skip test case as failed to login with credential ', account);\n        this.skip();\n      }\n      this.retries(2);\n      await waitInSeconds(1);\n      expect(dialingPlan.plans.length).equal(3);\n    });\n  });\n};\n"],"file":"dialingPlan.js"}