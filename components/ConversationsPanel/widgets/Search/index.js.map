{"version":3,"sources":["components/ConversationsPanel/widgets/Search/index.js"],"names":["Search","composeTextPermission","typeFilter","onSearchInputChange","searchInput","currentLocale","disableLinks","goToComposeText","renderSearchTip","showTextIcon","messageTypes","all","text","styles","searchContainer","withoutTextIcon","i18n","getString","textIcon","hoverTextSVGIcon","textSVGIcon","propTypes","PropTypes","bool","string","func","isRequired","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;;;AAGe,SAASA,MAAT,OASZ;AAAA,MARDC,qBAQC,QARDA,qBAQC;AAAA,MAPDC,UAOC,QAPDA,UAOC;AAAA,MANDC,mBAMC,QANDA,mBAMC;AAAA,MALDC,WAKC,QALDA,WAKC;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,eAEC,QAFDA,eAEC;AAAA,MADDC,eACC,QADDA,eACC;;AACD,MAAI,CAACL,mBAAL,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,MAAMM,YAAY,GAClBR,qBAAqB,KACpBC,UAAU,KAAKQ,yBAAaC,GAA5B,IAAmCT,UAAU,KAAKQ,yBAAaE,IAD3C,CADrB;AAGA,SACE;AACE,IAAA,SAAS,EACT,4BAAWC,mBAAOC,eAAlB,EAAmCL,YAAY,GAAG,IAAH,GAAUI,mBAAOE,eAAhE;AAFF,KAKE,gCAAC,uBAAD;AACE,IAAA,SAAS,EAAEF,mBAAOT,WADpB;AAEE,IAAA,KAAK,EAAEA,WAFT;AAGE,IAAA,QAAQ,EAAED,mBAHZ;AAIE,IAAA,WAAW,EAAEa,iBAAKC,SAAL,CAAe,QAAf,EAAyBZ,aAAzB,CAJf;AAKE,IAAA,QAAQ,EAAEC;AALZ,IALF,EAYE;AACE,IAAA,KAAK,EAAEU,iBAAKC,SAAL,CAAe,aAAf,EAA8BZ,aAA9B,CADT;AAEE,IAAA,SAAS,EAAEQ,mBAAOK,QAFpB;AAGE,IAAA,OAAO,EAAEX;AAHX,KAKE,gCAAC,+BAAD;AAAqB,IAAA,SAAS,EAAEM,mBAAOM,gBAAvC;AAAyD,IAAA,KAAK,EAAE,EAAhE;AAAoE,IAAA,MAAM,EAAE;AAA5E,IALF,EAME,gCAAC,0BAAD;AAAgB,IAAA,SAAS,EAAEN,mBAAOO,WAAlC;AAA+C,IAAA,KAAK,EAAE,EAAtD;AAA0D,IAAA,MAAM,EAAE;AAAlE,IANF,CAZF,EAoBGZ,eAAe,IAAIA,eAAe,EApBrC,CADF;AAwBD;;AAEDR,MAAM,CAACqB,SAAP,GAAmB;AACjBpB,EAAAA,qBAAqB,EAAEqB,sBAAUC,IADhB;AAEjBrB,EAAAA,UAAU,EAAEoB,sBAAUE,MAFL;AAGjBrB,EAAAA,mBAAmB,EAAEmB,sBAAUG,IAHd;AAIjBrB,EAAAA,WAAW,EAAEkB,sBAAUE,MAJN;AAKjBnB,EAAAA,aAAa,EAAEiB,sBAAUE,MAAV,CAAiBE,UALf;AAMjBpB,EAAAA,YAAY,EAAEgB,sBAAUC,IANP;AAOjBhB,EAAAA,eAAe,EAAEe,sBAAUG,IAAV,CAAeC,UAPf;AAQjBlB,EAAAA,eAAe,EAAEc,sBAAUG;AARV,CAAnB;AAWAzB,MAAM,CAAC2B,YAAP,GAAsB;AACpB1B,EAAAA,qBAAqB,EAAE,IADH;AAEpBC,EAAAA,UAAU,EAAEQ,yBAAaC,GAFL;AAGpBR,EAAAA,mBAAmB,EAAEyB,SAHD;AAIpBxB,EAAAA,WAAW,EAAE,EAJO;AAKpBE,EAAAA,YAAY,EAAE,KALM;AAMpBE,EAAAA,eAAe,EAAEoB;AANG,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\n\nimport SearchInput from '../../../SearchInput';\nimport NewComposeText from '../../../../assets/images/NewComposeText.svg';\nimport NewComposeTextHover from '../../../../assets/images/NewComposeTextHover.svg';\n\nimport i18n from '../../i18n';\nimport styles from './styles.scss';\n\n\nexport default function Search({\n  composeTextPermission,\n  typeFilter,\n  onSearchInputChange,\n  searchInput,\n  currentLocale,\n  disableLinks,\n  goToComposeText,\n  renderSearchTip\n}) {\n  if (!onSearchInputChange) {\n    return null;\n  }\n  const showTextIcon =\n  composeTextPermission &&\n  (typeFilter === messageTypes.all || typeFilter === messageTypes.text);\n  return (\n    <div\n      className={\n      classnames(styles.searchContainer, showTextIcon ? null : styles.withoutTextIcon)\n    }\n    >\n      <SearchInput\n        className={styles.searchInput}\n        value={searchInput}\n        onChange={onSearchInputChange}\n        placeholder={i18n.getString('search', currentLocale)}\n        disabled={disableLinks}\n      />\n      <span\n        title={i18n.getString('composeText', currentLocale)}\n        className={styles.textIcon}\n        onClick={goToComposeText}\n      >\n        <NewComposeTextHover className={styles.hoverTextSVGIcon} width={20} height={21} />\n        <NewComposeText className={styles.textSVGIcon} width={20} height={21} />\n      </span>\n      {renderSearchTip && renderSearchTip()}\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  composeTextPermission: PropTypes.bool,\n  typeFilter: PropTypes.string,\n  onSearchInputChange: PropTypes.func,\n  searchInput: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  disableLinks: PropTypes.bool,\n  goToComposeText: PropTypes.func.isRequired,\n  renderSearchTip: PropTypes.func,\n};\n\nSearch.defaultProps = {\n  composeTextPermission: true,\n  typeFilter: messageTypes.all,\n  onSearchInputChange: undefined,\n  searchInput: '',\n  disableLinks: false,\n  renderSearchTip: undefined,\n};\n"],"file":"index.js"}