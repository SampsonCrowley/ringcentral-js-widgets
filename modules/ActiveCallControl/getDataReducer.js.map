{"version":3,"sources":["modules/ActiveCallControl/getDataReducer.js"],"names":["updateActiveSessionStatus","state","party","sessionId","newState","muted","standAlone","code","status","direction","id","isOnMute","isOnHold","activeCallControlStatus","hold","isReject","setActiveSessionStatus","activeSession","obj","partyId","getActiveSessionIdReducer","types","type","setActiveSessionId","resetSuccess","rejectSuccess","hangUpSuccess","removeActiveSession","getRecordingIdsStatusReducer","response","startRecord","stopRecord","recordFail","getActiveSessionsStatusReducer","activeSessionsMap","updateActiveSessions","holdSuccess","unholdSuccess","getTimestampReducer","timestamp","getBusyReducer","unhold","mute","unmute","transfer","reject","hangUp","flip","holdError","unholdError","muteSuccess","muteError","unmuteSuccess","unmuteError","transferSuccess","transferError","rejectError","hangUpError","flipSuccess","flipError","getDataReducer","activeSessionId","activeSessionsStatus","busy","recordingIds"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { isHangUp, isReject } from './helpers';\nimport activeCallControlStatus from '../../enums/activeCallControlStatus';\n\n\nfunction updateActiveSessionStatus({\n  state,\n  party,\n  sessionId\n}) {\n  const newState = { ...state };\n  const {\n    muted,\n    standAlone,\n    status: {\n      code\n    },\n    direction,\n    id,\n  } = party;\n  if (isHangUp(code) && newState[sessionId]) {\n    delete newState[sessionId];\n  } else {\n    if (!newState[sessionId]) {\n      newState[sessionId] = {};\n    }\n    newState[sessionId][id] = {\n      ...newState[sessionId][id],\n      standAlone,\n      sessionId,\n      isOnMute: muted,\n      isOnHold: code === activeCallControlStatus.hold,\n      isReject: isReject({ direction, code })\n    };\n  }\n  return newState;\n}\n\nfunction setActiveSessionStatus(state, activeSession, obj) {\n  const {\n    sessionId,\n    partyId\n  } = activeSession;\n  const newState = { ...state };\n  if (!newState[sessionId]) {\n    newState[sessionId] = {};\n  }\n  newState[sessionId][partyId] = {\n    ...newState[sessionId][partyId],\n    ...obj\n  };\n  return newState;\n}\nfunction getActiveSessionIdReducer(types) {\n  return (state = null, { type, sessionId }) => {\n    switch (type) {\n      case types.setActiveSessionId: {\n        return sessionId;\n      }\n      case types.resetSuccess:\n      case types.rejectSuccess:\n      case types.hangUpSuccess:\n      case types.removeActiveSession: {\n        return null;\n      }\n      default:\n        return state;\n    }\n  };\n}\nfunction getRecordingIdsStatusReducer(types) {\n  return (state = {}, { type, activeSession, response }) => {\n    switch (type) {\n      case types.startRecord: {\n        const {\n          sessionId,\n          partyId\n        } = activeSession;\n        const newState = { ...state };\n        if (!newState[sessionId]) {\n          newState[sessionId] = {};\n        }\n        newState[sessionId][partyId] = {\n          ...response\n        };\n        return newState;\n      }\n      case types.stopRecord: {\n        const {\n          sessionId,\n        } = activeSession;\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.recordFail:\n      case types.rejectSuccess:\n      case types.hangUpSuccess:\n      case types.removeActiveSession:\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\nfunction getActiveSessionsStatusReducer(types) {\n  return (state = {}, {\n    type, sessionId, party, activeSessionsMap, activeSession\n  }) => {\n    switch (type) {\n      case types.updateActiveSessions: {\n        let newState = null;\n        for (const sessionId in activeSessionsMap) {\n          if (sessionId) {\n            newState = updateActiveSessionStatus({\n              state,\n              party: activeSessionsMap[sessionId],\n              sessionId\n            });\n          }\n        }\n        return newState;\n      }\n      case types.updateActiveSessionStatus: {\n        return updateActiveSessionStatus({\n          state,\n          party,\n          sessionId\n        });\n      }\n      case types.holdSuccess:\n      case types.unholdSuccess: {\n        return setActiveSessionStatus(state, activeSession, { isOnHold: type === types.holdSuccess });\n      }\n      case types.rejectSuccess:\n      case types.hangUpSuccess:\n      case types.removeActiveSession: {\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.resetSuccess: {\n        return {};\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getTimestampReducer(types) {\n  return (state = null, { type, timestamp }) => {\n    switch (type) {\n      case types.updateActiveSessions:\n        return timestamp;\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nfunction getBusyReducer(types) {\n  return (state = 0, { type, timestamp }) => {\n    switch (type) {\n      case types.hold:\n      case types.unhold:\n      case types.mute:\n      case types.unmute:\n      case types.transfer:\n      case types.reject:\n      case types.hangUp:\n      case types.flip:\n        return timestamp;\n      case types.holdSuccess:\n      case types.holdError:\n      case types.unholdSuccess:\n      case types.unholdError:\n      case types.muteSuccess:\n      case types.muteError:\n      case types.unmuteSuccess:\n      case types.unmuteError:\n      case types.transferSuccess:\n      case types.transferError:\n      case types.rejectSuccess:\n      case types.rejectError:\n      case types.hangUpSuccess:\n      case types.hangUpError:\n      case types.flipSuccess:\n      case types.flipError:\n        return 0;\n      default:\n        return state;\n    }\n  };\n}\nexport default function getDataReducer(types) {\n  return combineReducers({\n    activeSessionId: getActiveSessionIdReducer(types),\n    activeSessionsStatus: getActiveSessionsStatusReducer(types),\n    busy: getBusyReducer(types),\n    recordingIds: getRecordingIdsStatusReducer(types),\n    timestamp: getTimestampReducer(types),\n  });\n}\n"],"file":"getDataReducer.js"}