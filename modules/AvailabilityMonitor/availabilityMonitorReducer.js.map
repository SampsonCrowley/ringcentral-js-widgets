{"version":3,"sources":["modules/AvailabilityMonitor/availabilityMonitorReducer.js"],"names":["isLimitedAvailabilityModeReducer","types","state","mode","AvailabilityStatus","NORMAL","type","limitedMode","LIMITED","normalMode","isAppInitialErrorModeReducer","appInitialError","APP_INITIAL_ERROR","AvailabilityMonitorReducer","status","isLimitedAvailabilityMode","isAppInitialError"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEO,SAASA,gCAAT,CAA0CC,KAA1C,EAAiD;AACtD,SAAO,YAA2D;AAAA,QAA1DC,KAA0D,uEAAlD;AAAEC,MAAAA,IAAI,EAAEC,4BAAmBC;AAA3B,KAAkD;;AAAA;AAAA,QAAXC,IAAW,QAAXA,IAAW;;AAChE,YAAQA,IAAR;AACE,WAAKL,KAAK,CAACM,WAAX;AAAwB;AACtB,iBAAO;AAAEJ,YAAAA,IAAI,EAAEC,4BAAmBI;AAA3B,WAAP;AACD;;AACD,WAAKP,KAAK,CAACQ,UAAX;AAAuB;AACrB,iBAAO;AAAEN,YAAAA,IAAI,EAAEC,4BAAmBC;AAA3B,WAAP;AACD;;AACD;AACE,eAAOH,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEM,SAASQ,4BAAT,CAAsCT,KAAtC,EAA6C;AAClD,SAAO,YAA2D;AAAA,QAA1DC,KAA0D,uEAAlD;AAAEC,MAAAA,IAAI,EAAEC,4BAAmBC;AAA3B,KAAkD;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAChE,YAAQA,IAAR;AACE,WAAKL,KAAK,CAACU,eAAX;AAA4B;AAC1B,iBAAO;AAAER,YAAAA,IAAI,EAAEC,4BAAmBQ;AAA3B,WAAP;AACD;;AACD,WAAKX,KAAK,CAACQ,UAAX;AAAuB;AACrB,iBAAO;AAAEN,YAAAA,IAAI,EAAEC,4BAAmBC;AAA3B,WAAP;AACD;;AACD;AACE,eAAOH,KAAP;AARJ;AAUD,GAXD;AAYD;;AAEc,SAASW,0BAAT,CAAoCZ,KAApC,EAA2C;AACxD,SAAO,4BAAgB;AACrBa,IAAAA,MAAM,EAAE,qCAAuBb,KAAvB,CADa;AAErBc,IAAAA,yBAAyB,EAAEf,gCAAgC,CAACC,KAAD,CAFtC;AAGrBe,IAAAA,iBAAiB,EAAEN,4BAA4B,CAACT,KAAD;AAH1B,GAAhB,CAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\nimport AvailabilityStatus from './availabilityStatus';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function isLimitedAvailabilityModeReducer(types) {\n  return (state = { mode: AvailabilityStatus.NORMAL }, { type }) => {\n    switch (type) {\n      case types.limitedMode: {\n        return { mode: AvailabilityStatus.LIMITED };\n      }\n      case types.normalMode: {\n        return { mode: AvailabilityStatus.NORMAL };\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function isAppInitialErrorModeReducer(types) {\n  return (state = { mode: AvailabilityStatus.NORMAL }, { type }) => {\n    switch (type) {\n      case types.appInitialError: {\n        return { mode: AvailabilityStatus.APP_INITIAL_ERROR };\n      }\n      case types.normalMode: {\n        return { mode: AvailabilityStatus.NORMAL };\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function AvailabilityMonitorReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    isLimitedAvailabilityMode: isLimitedAvailabilityModeReducer(types),\n    isAppInitialError: isAppInitialErrorModeReducer(types),\n  });\n}\n"],"file":"availabilityMonitorReducer.js"}