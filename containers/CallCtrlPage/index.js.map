{"version":3,"sources":["containers/CallCtrlPage/index.js"],"names":["CallCtrlPage","props","state","selectedMatcherIndex","avatarUrl","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","sendDTMF","value","onFlip","onTransfer","onPark","onAdd","onMerge","onBeforeMerge","_mounted","_updateAvatarAndMatchIndex","conferenceCallId","layout","callCtrlLayouts","conferenceCtrl","loadConference","nextProps","mergeCtrl","direction","callDirections","inbound","onIncomingCallCaptured","contactMatch","phoneNumber","outbound","to","from","fallbackUserName","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","showBackButton","onBackButtonClick","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","sourceIcons","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","showSpinner","addDisabled","mergeDisabled","conferenceCallEquipped","hasConferenceCall","conferenceCallParties","lastCallInfo","gotoParticipantsCtrl","children","Component","propTypes","PropTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknow","i","mapToProps","_","phone","webphone","locale","contactMatcher","regionSettings","forwardingNumber","contactSearch","conferenceCall","callingSettings","normalCtrl","currentSession","activeSession","contactMapping","dataMapping","fromMatches","toMatches","isWebRTC","callingMode","callingModes","partyData","isOnConference","isMerging","isConferenceSession","conferenceData","conferences","mergingPair","find","conference","newVal","isOverload","partyProfiles","fullName","sortedResult","mapToFunctions","routerInteraction","callMonitor","hangup","sessionId","mute","unmute","hold","unhold","startRecord","stopRecord","flipNumber","flip","transferNumber","transfer","park","debouncedSearch","searchString","isCallRecording","sessionData","x","sessions","setMergeParty","fromSessionId","outBoundOnholdCalls","activeOnHoldCalls","filter","call","length","push","fromNumber","currentConferenceSession","_sessions","get","confId","CallCtrlContainer","default"],"mappings":"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","file":"index.js","sourcesContent":["import { find } from 'ramda';\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport withPhone from '../../lib/withPhone';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n    };\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onTransfer = value =>\n      this.props.onTransfer(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n    this.onAdd = () =>\n      this.props.onAdd(this.props.session.id);\n    this.onMerge = () =>\n      this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () =>\n      this.props.onBeforeMerge(this.props.session.id);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    if (\n      this.props.conferenceCallId\n      && this.props.layout === callCtrlLayouts.conferenceCtrl\n    ) {\n      this.props.loadConference(this.props.conferenceCallId);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.session.direction === callDirections.inbound\n    ) {\n      nextProps.onIncomingCallCaptured();\n    }\n    if (this.props.session.id !== nextProps.session.id) {\n      this._updateAvatarAndMatchIndex(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.onFlip}\n        onTransfer={this.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        searchContactList={this.props.searchContactList}\n        searchContact={this.props.searchContact}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n        recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        layout={this.props.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.props.gotoParticipantsCtrl}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  onIncomingCallCaptured: PropTypes.func,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  onIncomingCallCaptured: i => i,\n  conferenceCallId: null,\n  gotoParticipantsCtrl: i => i,\n  loadConference: i => i,\n};\n\nfunction mapToProps(_, {\n  phone: {\n    webphone,\n    locale,\n    contactMatcher,\n    regionSettings,\n    brand,\n    forwardingNumber,\n    contactSearch,\n    conferenceCall,\n    callingSettings,\n  },\n  layout = callCtrlLayouts.normalCtrl,\n}) {\n  const currentSession = webphone.activeSession || {};\n  const contactMapping = contactMatcher && contactMatcher.dataMapping;\n  const fromMatches = (contactMapping && contactMapping[currentSession.from]) || [];\n  const toMatches = (contactMapping && contactMapping[currentSession.to]) || [];\n  const nameMatches =\n    currentSession.direction === callDirections.outbound ? toMatches : fromMatches;\n\n  const isWebRTC = callingSettings.callingMode === callingModes.webphone;\n  let mergeDisabled = !(currentSession.partyData) || !isWebRTC;\n  let addDisabled = !isWebRTC || currentSession.direction === callDirections.inbound;\n\n  let isOnConference = false;\n  let hasConferenceCall = false;\n  let isMerging = false;\n  let conferenceCallParties;\n  let conferenceCallId = null;\n  if (conferenceCall) {\n    isOnConference = conferenceCall.isConferenceSession(currentSession.id);\n    const conferenceData = Object.values(conferenceCall.conferences)[0];\n\n    isMerging = conferenceCall.isMerging && !!(\n      Object\n        .values(conferenceCall.mergingPair)\n        .find(id => id === currentSession.id)\n      || (isOnConference)\n    );\n\n    if (conferenceData && isWebRTC) {\n      conferenceCallId = conferenceData.conference.id;\n\n      const newVal = conferenceCall.isOverload(conferenceCallId)\n        // in case webphone.activeSession has not been updated yet\n        || !(currentSession.partyData);\n      // update\n      mergeDisabled = newVal || !(currentSession.partyData);\n      addDisabled = newVal;\n    }\n\n    hasConferenceCall = !!conferenceData;\n    conferenceCallParties = conferenceCall.partyProfiles;\n  }\n\n  layout = isOnConference ? callCtrlLayouts.conferenceCtrl : layout;\n  return {\n    brand: brand.fullName,\n    nameMatches,\n    currentLocale: locale.currentLocale,\n    session: currentSession,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    flipNumbers: forwardingNumber.flipNumbers,\n    showBackButton: true, // callMonitor.calls.length > 0,\n    searchContactList: contactSearch.sortedResult,\n    layout,\n    showSpinner: isMerging,\n    addDisabled,\n    mergeDisabled,\n    conferenceCallEquipped: !!conferenceCall,\n    hasConferenceCall,\n    conferenceCallParties,\n    conferenceCallId,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    webphone,\n    regionSettings,\n    contactSearch,\n    conferenceCall,\n    routerInteraction,\n    callMonitor,\n  },\n  getAvatarUrl,\n  onBackButtonClick,\n  phoneTypeRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    onHangup: sessionId => webphone.hangup(sessionId),\n    onMute: sessionId => webphone.mute(sessionId),\n    onUnmute: sessionId => webphone.unmute(sessionId),\n    onHold: sessionId => webphone.hold(sessionId),\n    onUnhold: sessionId => webphone.unhold(sessionId),\n    onRecord: sessionId => webphone.startRecord(sessionId),\n    onStopRecord: sessionId => webphone.stopRecord(sessionId),\n    sendDTMF: (value, sessionId) => webphone.sendDTMF(value, sessionId),\n    updateSessionMatchedContact: (sessionId, contact) => (\n      webphone.updateSessionMatchedContact(sessionId, contact)\n    ),\n    getAvatarUrl,\n    onBackButtonClick,\n    onFlip: (flipNumber, sessionId) => webphone.flip(flipNumber, sessionId),\n    onTransfer: (transferNumber, sessionId) => webphone.transfer(transferNumber, sessionId),\n    onPark: sessionId => webphone.park(sessionId),\n    searchContact: searchString => (\n      contactSearch.debouncedSearch({ searchString })\n    ),\n    phoneTypeRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n    onAdd(sessionId) {\n      const currentSession = webphone.activeSession;\n      if (!currentSession || webphone.isCallRecording(currentSession)) {\n        return;\n      }\n      const sessionData = find(x => x.id === sessionId, webphone.sessions);\n      if (sessionData) {\n        conferenceCall.setMergeParty({ fromSessionId: sessionId });\n        const outBoundOnholdCalls = callMonitor.activeOnHoldCalls\n          .filter(call => call.direction === callDirections.outbound);\n        if (outBoundOnholdCalls.length) {\n          // goto 'calls on hold' page\n          routerInteraction\n            .push(`/conferenceCall/callsOnhold/${sessionData.fromNumber}/${sessionData.id}`);\n        } else { // goto dialer directly\n          routerInteraction.push(`/conferenceCall/dialer/${sessionData.fromNumber}`);\n        }\n      }\n    },\n    onBeforeMerge() {\n      const currentSession = webphone.activeSession;\n      let currentConferenceSession;\n      if (conferenceCall) {\n        const conferenceData = Object.values(conferenceCall.conferences)[0];\n        if (conferenceData) {\n          currentConferenceSession = webphone._sessions.get(conferenceData.sessionId);\n        }\n      }\n      if (!currentSession || webphone.isCallRecording(currentSession)) {\n        return false;\n      }\n      if (currentConferenceSession && webphone.isCallRecording(currentConferenceSession)) {\n        return false;\n      }\n      return true;\n    },\n    async onMerge(sessionId) {\n      const conferenceData = await conferenceCall.onMerge({ sessionId });\n      if (!conferenceData) {\n        routerInteraction.push('/conferenceCall/mergeCtrl');\n      }\n    },\n    onIncomingCallCaptured() {\n      routerInteraction.push('/calls/active');\n    },\n    gotoParticipantsCtrl() {\n      routerInteraction.push('/conferenceCall/participants');\n    },\n    loadConference(confId) {\n      conferenceCall.loadConference(confId);\n    },\n  };\n}\n\nconst CallCtrlContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(CallCtrlPage));\n\nCallCtrlContainer.propTypes = {\n  getAvatarUrl: PropTypes.func,\n  onBackButtonClick: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  backButtonLabel: PropTypes.string,\n  children: PropTypes.node,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n};\n\nCallCtrlContainer.defaultProps = {\n  getAvatarUrl: () => null,\n  showContactDisplayPlaceholder: false,\n  children: undefined,\n  sourceIcons: undefined,\n};\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  CallCtrlPage,\n  CallCtrlContainer as default,\n};\n"]}