{"version":3,"sources":["lib/Tabbie.js"],"names":["HEART_BEAT_INTERVAL","HEART_BEAT_EXPIRE","GC_INTERVAL","FIGHT_TIMEOUT","Tabbie","prefix","heartBeatInterval","heartBeatExpire","gcInterval","fightTimeout","_heartBeat","localStorage","setItem","_heartBeatKey","Date","now","_gc","expiredCut","_heartBeatExpire","_getHeartBeatKeys","forEach","key","getItem","removeItem","replace","_heartBeatRegExp","getMainTabId","_fightForMainTab","_setAsVisibleTab","currentMainTabId","_mainTabKey","document","hidden","id","_setAsMainTab","_prefix","_enabled","window","visibilityState","_id","uuid","v4","RegExp","_eventRegExp","_heartBeatInterval","_gcInterval","_fightTimeout","enabled","_heartBeatIntervalId","setInterval","_gcIntervalId","addEventListener","e","emit","test","newValue","payload","JSON","parse","event","args","clearInterval","length","keys","Set","i","add","originalMainTabId","mainTabId","Promise","resolve","once","stringify","prototype"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\nimport emitter from 'event-emitter';\nimport sleep from './sleep';\n\nconst HEART_BEAT_INTERVAL = 1000;\n// heatbeat older than HEART_BEAT_EXPIRE will be gc'ed\n// chrome and firefox throttles intervals when inactive expire time of 2000\n// sometimes would kill live heartbeats and cause the mainTabId to change\nconst HEART_BEAT_EXPIRE = 3000;\nconst GC_INTERVAL = 5000;\n\nconst FIGHT_TIMEOUT = 20;\n\n/**\n * @class\n * @description The base active tab and cross tab event handling class.\n */\nexport default class Tabbie {\n  constructor({\n    prefix = '',\n    heartBeatInterval = HEART_BEAT_INTERVAL,\n    heartBeatExpire = HEART_BEAT_EXPIRE,\n    gcInterval = GC_INTERVAL,\n    fightTimeout = FIGHT_TIMEOUT,\n  }) {\n    this._prefix = (prefix && prefix !== '') ? `${prefix}-` : '';\n    this._enabled = typeof window !== 'undefined' &&\n      typeof document.visibilityState !== 'undefined' &&\n      typeof localStorage !== 'undefined';\n    this._id = uuid.v4();\n    this._heartBeatKey = `${this.prefix}tabbie-heartBeat-${this.id}`;\n    this._heartBeatRegExp = new RegExp(`^${this.prefix}tabbie-heartBeat-`);\n    this._mainTabKey = `${this.prefix}tabbie-mainTab-id`;\n    this._eventRegExp = new RegExp(`^${this.prefix}tabbie-event-`);\n    this._heartBeatExpire = heartBeatExpire;\n    this._heartBeatInterval = heartBeatInterval;\n    this._gcInterval = gcInterval;\n    this._fightTimeout = fightTimeout;\n\n    if (this.enabled) {\n      this._heartBeatIntervalId = setInterval(this._heartBeat, heartBeatInterval);\n      this._heartBeat();\n\n      this._gcIntervalId = setInterval(this._gc, gcInterval);\n\n      document.addEventListener('visibilitychange', this._setAsVisibleTab);\n\n      window.addEventListener('focus', this._setAsVisibleTab);\n\n      window.addEventListener('storage', async (e) => {\n        if (e.key === this._mainTabKey) {\n          // use the newest main tab id from localhost instead of from the event\n          // to avoid race conditions\n          this.emit('mainTabIdChanged', await this.getMainTabId());\n        } else if (\n          this._heartBeatRegExp.test(e.key) &&\n          (!e.newValue || e.newValue === '')\n        ) {\n          if (e.key.replace(this._heartBeatRegExp, '') === await this.getMainTabId()) {\n            // main tab closed itself, fight to be the main tab\n            // or someone gc'ed the main tab\n            localStorage.removeItem(this._mainTabKey);\n            await this._fightForMainTab();\n          }\n        } else if (\n          this._eventRegExp.test(e.key) &&\n          e.newValue && e.newValue !== ''\n        ) {\n          const payload = JSON.parse(e.newValue);\n          const [id, event, ...args] = payload;\n          if (id !== this.id) { // ie fires storage event on original\n            this.emit('event', event, ...args);\n          }\n        }\n      });\n      window.addEventListener('unload', () => {\n        clearInterval(this._gcIntervalId);\n        clearInterval(this._heartBeatIntervalId);\n        if (localStorage.getItem(this._mainTabKey) === this.id) {\n          localStorage.removeItem(this._mainTabKey);\n        }\n        localStorage.removeItem(this._heartBeatKey);\n      });\n      if (!document.hidden) {\n        this._setAsMainTab();\n      } else if (!localStorage.getItem(this._mainTabKey)) {\n        this._fightForMainTab();\n      }\n    }\n  }\n  _heartBeat = () => {\n    localStorage.setItem(this._heartBeatKey, Date.now());\n  }\n  _gc = () => {\n    const expiredCut = Date.now() - this._heartBeatExpire;\n    this._getHeartBeatKeys().forEach(async (key) => {\n      if (localStorage.getItem(key) < expiredCut) {\n        localStorage.removeItem(key);\n        if (key.replace(this._heartBeatRegExp, '') === await this.getMainTabId()) {\n          // the tab that gc's the main tab will not receive the storage event\n          this._fightForMainTab();\n        }\n      }\n    });\n  }\n  _getHeartBeatKeys() {\n    const { length } = localStorage;\n    const keys = new Set();\n    for (let i = 0; i < length; i += 1) {\n      const key = localStorage.key(i);\n      if (key && key !== '' && this._heartBeatRegExp.test(key)) keys.add(key);\n    }\n    return [...keys];\n  }\n  _setAsMainTab() {\n    localStorage.setItem(this._mainTabKey, this.id);\n    this.emit('mainTabIdChanged', this.id);\n  }\n\n  _setAsVisibleTab = () => {\n    // avoid setting mainTabId repeatedly which may result in forced rendering\n    const currentMainTabId = localStorage.getItem(this._mainTabKey);\n    if (!document.hidden && currentMainTabId !== this.id) this._setAsMainTab();\n  }\n\n  async _fightForMainTab() {\n    const originalMainTabId = localStorage.getItem(this._mainTabKey);\n    // if a tab becomes visible during the delay, it can just assume the main tab role\n    await sleep(this._fightTimeout);\n    if (localStorage.getItem(this._mainTabKey) === originalMainTabId) {\n      this._setAsMainTab();\n    }\n  }\n\n  /**\n   * @function\n   * @return {Promise} - Resolves to current main tab id\n   */\n  async getMainTabId() {\n    const mainTabId = localStorage.getItem(this._mainTabKey);\n    if (mainTabId) return mainTabId;\n\n    return new Promise((resolve) => {\n      this.once('mainTabIdChanged', resolve);\n    });\n  }\n\n  async checkIsMain() {\n    // assume main if not enabled\n    // this is to ensure that modules depending on this would function\n    // in node like environments\n    return !this.enabled || (await this.getMainTabId() === this.id);\n  }\n\n  get id() {\n    return this._id;\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  get prefix() {\n    return this._prefix;\n  }\n\n  send(event, ...args) {\n    if (this.enabled) {\n      const id = uuid.v4();\n      const key = `${this.prefix}tabbie-event-${id}`;\n      const payload = [this.id, event, ...args];\n      localStorage.setItem(key, JSON.stringify(payload));\n      localStorage.removeItem(key);\n    }\n  }\n}\nemitter(Tabbie.prototype);\n"],"file":"Tabbie.js"}