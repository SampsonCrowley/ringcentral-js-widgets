{"version":3,"sources":["components/RecentActivityPanel/index.js"],"names":["cx","classNames","bind","styles","ToggleIcon","expanded","dynamicsFont","arrow","foldArrowIcon","propTypes","PropTypes","bool","isRequired","RecentActivityPanel","props","title","onPanelToggle","toggleButton","label","onClick","placement","currentContact","containerClass","container","className","header","string","object","func","defaultProps","height","offset","expandable"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,EAAE,GAAGC,cAAWC,IAAX,CAAgBC,eAAhB,CAAX;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SACjB;AAAG,IAAA,SAAS,EAAE,yBAAWC,sBAAaC,KAAxB,EAA+BP,EAAE,CAAC,WAAD,EAAc;AAAEQ,MAAAA,aAAa,EAAE,CAACH;AAAlB,KAAd,CAAjC;AAAd,IADiB;AAAA,CAAnB;;AAIAD,UAAU,CAACK,SAAX,GAAuB;AACrBJ,EAAAA,QAAQ,EAAEK,mBAAUC,IAAV,CAAeC;AADJ,CAAvB;AAIA;;;;AAGA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA,MAC1BC,KAD0B,GACSD,KADT,CAC1BC,KAD0B;AAAA,MACnBV,QADmB,GACSS,KADT,CACnBT,QADmB;AAAA,MACTW,aADS,GACSF,KADT,CACTE,aADS;AAElC,MAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,6BAAC,UAAD;AAAY,MAAA,QAAQ,EAAEb;AAAtB,MADY;AAEnBc,IAAAA,OAAO,EAAEH,aAFU;AAGnBI,IAAAA,SAAS,EAAE;AAHQ,GAArB;;AAKA,MAAI,CAACN,KAAK,CAACO,cAAX,EAA2B;AACzB,WAAO,IAAP;AACD;;AACD,MAAMC,cAAc,GAAG,yBAAWnB,gBAAOoB,SAAlB,EAA6BT,KAAK,CAACU,SAAnC,CAAvB;AACA,SACE;AAAK,IAAA,SAAS,EAAEF;AAAhB,KACE;AAAK,IAAA,SAAS,EAAEnB,gBAAOsB,MAAvB;AAA+B,IAAA,OAAO,EAAET;AAAxC,KACE,6BAAC,eAAD;AAAQ,IAAA,OAAO,EAAE,CAACC,YAAD,CAAjB;AAAiC,IAAA,SAAS,EAAEd,gBAAOsB;AAAnD,KAA4DV,KAA5D,CADF,CADF,EAIE,6BAAC,2BAAD,EAAwBD,KAAxB,CAJF,CADF;AAQD;;AAEDD,mBAAmB,CAACJ,SAApB,GAAgC;AAC9BM,EAAAA,KAAK,EAAEL,mBAAUgB,MAAV,CAAiBd,UADM;AAE9BS,EAAAA,cAAc,EAAEX,mBAAUiB,MAFI;AAG9BX,EAAAA,aAAa,EAAEN,mBAAUkB,IAAV,CAAehB,UAHA;AAI9BP,EAAAA,QAAQ,EAAEK,mBAAUC,IAAV,CAAeC,UAJK;AAK9BY,EAAAA,SAAS,EAAEd,mBAAUgB;AALS,CAAhC;AAQAb,mBAAmB,CAACgB,YAApB,GAAmC;AACjCR,EAAAA,cAAc,EAAE,IADiB;AAEjCG,EAAAA,SAAS,EAAE;AAFsB,CAAnC;;eAKe,yBAAW;AACxBrB,EAAAA,MAAM,EAAE;AACN2B,IAAAA,MAAM,EAAE,OADF;AAENC,IAAAA,MAAM,EAAE;AAFF,GADgB;AAKxBP,EAAAA,SAAS,EAAErB,gBAAO6B;AALM,CAAX,EAMZnB,mBANY,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport classNames from 'classnames/bind';\nimport Header from '../Header';\nimport styles from './styles.scss';\nimport expandable from './expandable';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport RecentActivityView from '../RecentActivityView';\n\nconst cx = classNames.bind(styles);\nconst ToggleIcon = ({ expanded }) => (\n  <i className={classnames(dynamicsFont.arrow, cx('arrowIcon', { foldArrowIcon: !expanded }))} />\n);\n\nToggleIcon.propTypes = {\n  expanded: PropTypes.bool.isRequired\n};\n\n/**\n * RecentActivityPanel component provides a animated slide-out panel.\n */\nfunction RecentActivityPanel(props) {\n  const { title, expanded, onPanelToggle } = props;\n  const toggleButton = {\n    label: <ToggleIcon expanded={expanded} />,\n    onClick: onPanelToggle,\n    placement: 'right'\n  };\n  if (!props.currentContact) {\n    return null;\n  }\n  const containerClass = classnames(styles.container, props.className);\n  return (\n    <div className={containerClass}>\n      <div className={styles.header} onClick={onPanelToggle}>\n        <Header buttons={[toggleButton]} className={styles.header}>{title}</Header>\n      </div>\n      <RecentActivityView {...props} />\n    </div>\n  );\n}\n\nRecentActivityPanel.propTypes = {\n  title: PropTypes.string.isRequired,\n  currentContact: PropTypes.object,\n  onPanelToggle: PropTypes.func.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n};\n\nRecentActivityPanel.defaultProps = {\n  currentContact: null,\n  className: null,\n};\n\nexport default expandable({\n  styles: {\n    height: '200px',\n    offset: '27px',\n  },\n  className: styles.expandable\n})(RecentActivityPanel);\n"],"file":"index.js"}