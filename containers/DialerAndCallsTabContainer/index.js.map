{"version":3,"sources":["containers/DialerAndCallsTabContainer/index.js"],"names":["TabContentView","props","getTabs","currentLocale","currentPath","path","label","i18n","getString","isActive","showSpinner","styles","nav","content","Component","propTypes","showTabs","PropTypes","bool","isRequired","string","goTo","func","mapToProps","_","phone","locale","routerInteraction","ready","mapToFunctions","push","DialerAndCallsTabContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,c;;;;;AASJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,wFAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,8BACb;AAAA,aAAM,MAAKD,KAAL,CAAWE,aAAjB;AAAA,KADa,EAEb;AAAA,aAAM,MAAKF,KAAL,CAAWG,WAAjB;AAAA,KAFa,EAGb,UAACD,aAAD,EAAgBC,WAAhB;AAAA,aAAiC,CAC/B;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAe,QAAf,EAAyBL,aAAzB,CAFT;AAGEM,QAAAA,QAHF,sBAGa;AAAE,iBAAOL,WAAW,KAAK,SAAvB;AAAmC;AAHlD,OAD+B,EAM/B;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,KAAK,EAAEC,iBAAKC,SAAL,CAAe,UAAf,EAA2BL,aAA3B,CAFT;AAGEM,QAAAA,QAHF,sBAGa;AAAE,iBAAOL,WAAW,KAAK,QAAvB;AAAkC;AAHjD,OAN+B,CAAjC;AAAA,KAHa,CAAf;AAFiB;AAkBlB;;;;6BACQ;AACP,UAAI,KAAKH,KAAL,CAAWS,WAAf,EAA4B;AAC1B,eAAO,gCAAC,0BAAD,OAAP;AACD;;AACD,aACE,gCAAC,2BAAD,eACM,KAAKT,KADX;AAEE,QAAA,IAAI,EAAE,KAAKC,OAAL,EAFR;AAGE,QAAA,YAAY,EAAES,mBAAOC,GAHvB;AAIE,QAAA,mBAAmB,EAAED,mBAAOE;AAJ9B,SADF;AAQD;;;;EAxC0BC,gB;;AAAvBd,c,CACGe,S,GAAY;AACjBC,EAAAA,QAAQ,EAAEC,sBAAUC,IAAV,CAAeC,UADR;AAEjBT,EAAAA,WAAW,EAAEO,sBAAUC,IAAV,CAAeC,UAFX;AAGjBhB,EAAAA,aAAa,EAAEc,sBAAUG,MAAV,CAAiBD,UAHf;AAIjBf,EAAAA,WAAW,EAAEa,sBAAUG,MAAV,CAAiBD,UAJb;AAKjBE,EAAAA,IAAI,EAAEJ,sBAAUK,IAAV,CAAeH;AALJ,C;;AA0CrB,SAASI,UAAT,CAAoBC,CAApB,QAMG;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,wBAJDA,KAIC;AAAA,MAHCC,MAGD,cAHCA,MAGD;AAAA,MAFCC,iBAED,cAFCA,iBAED;AACD,SAAO;AACLX,IAAAA,QAAQ,EAAE,gCAAeS,KAAf,CADL;AAELtB,IAAAA,aAAa,EAAEuB,MAAM,CAACvB,aAFjB;AAGLO,IAAAA,WAAW,EAAE,CAACgB,MAAM,CAACE,KAHhB;AAILxB,IAAAA,WAAW,EAAEuB,iBAAiB,CAACvB;AAJ1B,GAAP;AAMD;;AAED,SAASyB,cAAT,CAAwBL,CAAxB,SAIG;AAAA,MAFCG,iBAED,SAHDF,KAGC,CAFCE,iBAED;AACD,SAAO;AACLN,IAAAA,IADK,gBACAhB,IADA,EACM;AACTsB,MAAAA,iBAAiB,CAACG,IAAlB,CAAuBzB,IAAvB;AACD;AAHI,GAAP;AAKD;;AAED,IAAM0B,0BAA0B,GAAG,2BAAU,yBAC3CR,UAD2C,EAE3CM,cAF2C,EAG3C7B,cAH2C,CAAV,CAAnC","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport withPhone from '../../lib/withPhone';\nimport hasActiveCalls from '../../lib/hasActiveCalls';\nimport TabContentPanel from '../../components/TabContentPanel';\nimport SpinnerOverlay from '../../components/SpinnerOverlay';\nimport i18n from './i18n';\nimport styles from './styles.scss';\n\nclass TabContentView extends Component {\n  static propTypes = {\n    showTabs: PropTypes.bool.isRequired,\n    showSpinner: PropTypes.bool.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    currentPath: PropTypes.string.isRequired,\n    goTo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.getTabs = createSelector(\n      () => this.props.currentLocale,\n      () => this.props.currentPath,\n      (currentLocale, currentPath) => ([\n        {\n          path: '/dialer',\n          label: i18n.getString('dialer', currentLocale),\n          isActive() { return currentPath === '/dialer'; },\n        },\n        {\n          path: '/calls',\n          label: i18n.getString('allCalls', currentLocale),\n          isActive() { return currentPath === '/calls'; }\n        },\n      ]),\n    );\n  }\n  render() {\n    if (this.props.showSpinner) {\n      return <SpinnerOverlay />;\n    }\n    return (\n      <TabContentPanel\n        {...this.props}\n        tabs={this.getTabs()}\n        navClassName={styles.nav}\n        tabContentClassName={styles.content}\n      />\n    );\n  }\n}\n\nfunction mapToProps(_, {\n  phone,\n  phone: {\n    locale,\n    routerInteraction,\n  },\n}) {\n  return {\n    showTabs: hasActiveCalls(phone),\n    currentLocale: locale.currentLocale,\n    showSpinner: !locale.ready,\n    currentPath: routerInteraction.currentPath,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n  },\n}) {\n  return {\n    goTo(path) {\n      routerInteraction.push(path);\n    },\n  };\n}\n\nconst DialerAndCallsTabContainer = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TabContentView));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  DialerAndCallsTabContainer as default,\n};\n"],"file":"index.js"}