{"version":3,"sources":["lib/isValidNumber.js"],"names":["isValidNumber","input","regionSettings","countryCode","areaCode","hasInvalidChars","isValid"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEe,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,cAA9B,EAA8C;AAC3D,MAAI,yBAAQD,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;;AAH0D,eAOvD,wBAAM;AACRA,IAAAA,KAAK,EAALA,KADQ;AAERE,IAAAA,WAAW,EAAED,cAAc,CAACC,WAFpB;AAGRC,IAAAA,QAAQ,EAAEF,cAAc,CAACE;AAHjB,GAAN,CAPuD;AAAA,MAKzDC,eALyD,UAKzDA,eALyD;AAAA,MAMzDC,OANyD,UAMzDA,OANyD;;AAY3D,MACED,eAAe,IACb,CAACC,OAFL,EAEc;AACZ,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { parse } from '@ringcentral-integration/phone-number';\nimport isBlank from './isBlank';\n\nexport default function isValidNumber(input, regionSettings) {\n  if (isBlank(input)) {\n    return false;\n  }\n  const {\n    hasInvalidChars,\n    isValid,\n  } = parse({\n    input,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n  });\n  if (\n    hasInvalidChars ||\n      !isValid) {\n    return false;\n  }\n  return true;\n}\n"],"file":"isValidNumber.js"}