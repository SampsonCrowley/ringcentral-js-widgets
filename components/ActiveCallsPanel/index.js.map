{"version":3,"sources":["components/ActiveCallsPanel/index.js"],"names":["ActiveCallsPanel","hasCalls","props","onCallsEmpty","nextProps","activeRingCalls","length","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","calls","title","currentLocale","areaCode","countryCode","brand","showContactDisplayPlaceholder","formatPhone","onClickToSms","onCreateContact","onViewContact","outboundSmsPermission","internalSmsPermission","isLoggedContact","onLogCall","autoLog","loggingMap","webphoneAnswer","webphoneReject","webphoneHangup","webphoneResume","enableContactFallback","webphoneToVoicemail","sourceIcons","isWebRTC","conferenceCallEquipped","isSessionAConferenceCall","className","showSpinner","styles","root","noCalls","i18n","getString","spinner","target","container","getCallList","Component","propTypes","PropTypes","string","isRequired","array","bool","func","object","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport ActiveCallList from '../ActiveCallList';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class ActiveCallsPanel extends Component {\n  componentDidMount() {\n    if (\n      !this.hasCalls(this.props) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.hasCalls(this.props) &&\n      !this.hasCalls(nextProps) &&\n      typeof this.props.onCallsEmpty === 'function'\n    ) {\n      this.props.onCallsEmpty();\n    }\n  }\n\n  hasCalls(props = this.props) {\n    return (\n      props.activeRingCalls.length > 0 ||\n      props.activeOnHoldCalls.length > 0 ||\n      props.activeCurrentCalls.length > 0 ||\n      props.otherDeviceCalls.length > 0\n    );\n  }\n\n  getCallList(calls, title) {\n    const {\n      currentLocale,\n      areaCode,\n      countryCode,\n      brand,\n      showContactDisplayPlaceholder,\n      formatPhone,\n      onClickToSms,\n      onCreateContact,\n      onViewContact,\n      outboundSmsPermission,\n      internalSmsPermission,\n      isLoggedContact,\n      onLogCall,\n      autoLog,\n      loggingMap,\n      webphoneAnswer,\n      webphoneReject,\n      webphoneHangup,\n      webphoneResume,\n      enableContactFallback,\n      webphoneToVoicemail,\n      sourceIcons,\n      activeCurrentCalls,\n      isWebRTC,\n      conferenceCallEquipped,\n      isSessionAConferenceCall,\n    } = this.props;\n\n    return (\n      <ActiveCallList\n        title={title}\n        calls={calls}\n        currentLocale={currentLocale}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        formatPhone={formatPhone}\n        onClickToSms={onClickToSms}\n        onCreateContact={onCreateContact}\n        onViewContact={onViewContact}\n        outboundSmsPermission={outboundSmsPermission}\n        internalSmsPermission={internalSmsPermission}\n        isLoggedContact={isLoggedContact}\n        onLogCall={onLogCall}\n        autoLog={autoLog}\n        loggingMap={loggingMap}\n        webphoneAnswer={webphoneAnswer}\n        webphoneReject={webphoneReject}\n        webphoneHangup={webphoneHangup}\n        webphoneResume={webphoneResume}\n        webphoneToVoicemail={webphoneToVoicemail}\n        enableContactFallback={enableContactFallback}\n        sourceIcons={sourceIcons}\n        isWebRTC={isWebRTC}\n        conferenceCallEquipped={conferenceCallEquipped}\n        currentCall={activeCurrentCalls[0]}\n        isSessionAConferenceCall={isSessionAConferenceCall}\n      />\n    );\n  }\n\n  render() {\n    const {\n      activeRingCalls,\n      activeOnHoldCalls,\n      activeCurrentCalls,\n      otherDeviceCalls,\n      className,\n      currentLocale,\n      showSpinner,\n    } = this.props;\n\n    if (!this.hasCalls()) {\n      return (\n        <div className={classnames(styles.root, className)}>\n          <p className={styles.noCalls}>{i18n.getString('noActiveCalls', currentLocale)}</p>\n          {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.root}>\n        <div\n          className={classnames(styles.root, className)}\n          ref={(target) => { this.container = target; }}\n        >\n          {this.getCallList(activeRingCalls, i18n.getString('ringCall', currentLocale))}\n          {this.getCallList(activeCurrentCalls, i18n.getString('currentCall', currentLocale))}\n          {this.getCallList(activeOnHoldCalls, i18n.getString('onHoldCall', currentLocale))}\n          {this.getCallList(otherDeviceCalls, i18n.getString('otherDeviceCall', currentLocale))}\n        </div>\n        {showSpinner ? <SpinnerOverlay className={styles.spinner} /> : null}\n      </div>\n    );\n  }\n}\n\nActiveCallsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  activeRingCalls: PropTypes.array.isRequired,\n  activeOnHoldCalls: PropTypes.array.isRequired,\n  activeCurrentCalls: PropTypes.array.isRequired,\n  otherDeviceCalls: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  formatPhone: PropTypes.func.isRequired,\n  onClickToSms: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  isLoggedContact: PropTypes.func,\n  onLogCall: PropTypes.func,\n  webphoneAnswer: PropTypes.func,\n  webphoneReject: PropTypes.func,\n  webphoneHangup: PropTypes.func,\n  webphoneResume: PropTypes.func,\n  webphoneToVoicemail: PropTypes.func,\n  autoLog: PropTypes.bool,\n  onViewContact: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n  loggingMap: PropTypes.object,\n  onCallsEmpty: PropTypes.func,\n  sourceIcons: PropTypes.object,\n  isWebRTC: PropTypes.bool.isRequired,\n  conferenceCallEquipped: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  isSessionAConferenceCall: PropTypes.func,\n};\n\nActiveCallsPanel.defaultProps = {\n  className: undefined,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  onCreateContact: undefined,\n  onClickToSms: undefined,\n  outboundSmsPermission: true,\n  internalSmsPermission: true,\n  isLoggedContact: undefined,\n  onLogCall: undefined,\n  onViewContact: undefined,\n  webphoneAnswer: undefined,\n  webphoneReject: undefined,\n  webphoneHangup: undefined,\n  webphoneResume: undefined,\n  webphoneToVoicemail: undefined,\n  enableContactFallback: undefined,\n  loggingMap: {},\n  autoLog: false,\n  onCallsEmpty: undefined,\n  sourceIcons: undefined,\n  conferenceCallEquipped: false,\n  showSpinner: false,\n  isSessionAConferenceCall: () => false,\n};\n"]}