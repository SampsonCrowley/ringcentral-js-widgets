{"version":3,"sources":["modules/Presence/index.js"],"names":["presenceEndPoint","Presence","deps","dep","optional","auth","client","storage","subscription","rolesAndPermissions","connectivityMonitor","actionTypes","presenceActionTypes","getReducer","getPresenceReducer","subscriptionFilter","subscriptionFilters","presence","lastNotDisturbDndStatusStorageKey","options","_auth","ensureExist","_client","_subscription","_rolesAndPermissions","_storage","_connectivityMonitor","_subscriptionFilter","_lastMessage","_delayTimeoutId","_lastNotDisturbDndStatusStorageKey","_reducer","registerReducer","key","reducer","lastNotDisturbDndStatus","_lastSequence","_shouldInit","_init","_shouldReset","_reset","ready","message","_subscriptionHandler","_connectivity","connectivity","hasPresencePermission","_fetch","test","event","body","sequence","store","dispatch","type","notification","subscribe","_onStateChange","loggedIn","status","moduleStatuses","pending","init","fetch","initSuccess","reset","resetSuccess","ownerId","account","extension","get","data","fetchSuccess","lastDndStatus","dndStatus","_promise","fetchError","error","params","hasEditPresencePermission","platform","service","put","response","json","updateSuccess","updateError","userStatusParams","userStatus","takeAllCalls","doNotAcceptDepartmentCalls","presenceStatus","available","doNotAcceptAnyCalls","_getUpdateStatusParams","_update","busy","offline","presenceData","setAvailable","setBusy","setDoNotDisturb","setInvisible","state","getItem","RcModule","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,qBAAzB;AAEA;;;;;IAYqBC,Q,WARpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,MADI,EACI,QADJ,EACc,cADd,EAC8B,qBAD9B,EAEJ;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,EAGJ;AAAED,IAAAA,GAAG,EAAE,qBAAP;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GAHI,EAIJ;AAAED,IAAAA,GAAG,EAAE,iBAAP;AAA0BC,IAAAA,QAAQ,EAAE;AAApC,GAJI;AADA,CAAP,C;;;;;AASC;;;;;;;;;AASA,0BAYG;AAAA;;AAAA;;AAAA,QAXDC,IAWC,QAXDA,IAWC;AAAA,QAVDC,MAUC,QAVDA,MAUC;AAAA,QATDC,OASC,QATDA,OASC;AAAA,QARDC,YAQC,QARDA,YAQC;AAAA,QAPDC,mBAOC,QAPDA,mBAOC;AAAA,QANDC,mBAMC,QANDA,mBAMC;AAAA,gCALDC,WAKC;AAAA,QALDA,WAKC,iCALaC,oBAKb;AAAA,+BAJDC,UAIC;AAAA,QAJDA,UAIC,gCAJYC,2BAIZ;AAAA,qCAHDC,kBAGC;AAAA,QAHDA,kBAGC,sCAHoBC,6BAAoBC,QAGxC;AAAA,qCAFDC,iCAEC;AAAA,QAFDA,iCAEC,sCAFmC,yBAEnC;AAAA,QADEC,OACF;;AAAA;;AACD,oGACKA,OADL;AAEER,MAAAA,WAAW,EAAXA;AAFF;AAIA,UAAKS,KAAL,GAAa,mEAAMC,oBAAN,iBAAkBhB,IAAlB,EAAwB,MAAxB,CAAb;AACA,UAAKiB,OAAL,GAAe,mEAAMD,oBAAN,iBAAkBf,MAAlB,EAA0B,QAA1B,CAAf;AACA,UAAKiB,aAAL,GAAqB,mEAAMF,oBAAN,iBAAkBb,YAAlB,EAAgC,cAAhC,CAArB;AACA,UAAKgB,oBAAL,GACE,mEAAMH,oBAAN,iBAAkBZ,mBAAlB,EAAuC,qBAAvC,CADF;AAEA,UAAKgB,QAAL,GAAgBlB,OAAhB;AACA,UAAKmB,oBAAL,GAA4BhB,mBAA5B;AAEA,UAAKiB,mBAAL,GAA2BZ,kBAA3B;AAEA,UAAKa,YAAL,GAAoB,IAApB;AAEA,UAAKC,eAAL,GAAuB,IAAvB;AACA,UAAKC,kCAAL,GAA0CZ,iCAA1C;;AACA,QAAI,MAAKO,QAAT,EAAmB;AACjB,YAAKM,QAAL,GAAgBlB,UAAU,CAAC,MAAKF,WAAN,CAA1B;;AACA,YAAKc,QAAL,CAAcO,eAAd,CAA8B;AAC5BC,QAAAA,GAAG,EAAE,MAAKH,kCADkB;AAE5BI,QAAAA,OAAO,EAAE,2DAAkC,MAAKvB,WAAvC;AAFmB,OAA9B;AAID,KAND,MAMO;AACL,YAAKoB,QAAL,GAAgBlB,UAAU,CAAC,MAAKF,WAAN,EAAmB;AAC3CwB,QAAAA,uBAAuB,EAAE,2DAAkC,MAAKxB,WAAvC;AADkB,OAAnB,CAA1B;AAGD;;AACD,UAAKyB,aAAL,GAAqB,CAArB;AA9BC;AA+BF;;;;;;;;;;;;qBAGK,KAAKC,WAAL,E;;;;;;uBACI,KAAKC,KAAL,E;;;;;;;AACD,oBAAI,KAAKC,YAAL,EAAJ,EAAyB;AAC9B,uBAAKC,MAAL;AACD,iBAFM,MAEA,IACL,KAAKC,KAAL,IACA,KAAKlB,aAAL,CAAmBkB,KADnB,IAEA,KAAKlB,aAAL,CAAmBmB,OAFnB,IAGA,KAAKnB,aAAL,CAAmBmB,OAAnB,KAA+B,KAAKd,YAJ/B,EAKL;AACA,uBAAKA,YAAL,GAAoB,KAAKL,aAAL,CAAmBmB,OAAvC;;AACA,uBAAKC,oBAAL,CAA0B,KAAKf,YAA/B;AACD,iBARM,MAQA,IACL,KAAKa,KAAL,IACA,KAAKf,oBADL,IAEA,KAAKA,oBAAL,CAA0Be,KAF1B,IAGA,KAAKG,aAAL,KAAuB,KAAKlB,oBAAL,CAA0BmB,YAJ5C,EAKL;AACA,uBAAKD,aAAL,GAAqB,KAAKlB,oBAAL,CAA0BmB,YAA/C,CADA,CAEA;;AACA,sBAAI,KAAKD,aAAT,EAAwB;AACtB,wBAAI,KAAKpB,oBAAL,CAA0BsB,qBAA9B,EAAqD;AACnD,2BAAKC,MAAL;AACD;AACF;AACF;;;;;;;;;;;;;;;;;;yCAGkBL,O,EAAS;AAC5B,UAAIA,OAAO,IAAI1C,gBAAgB,CAACgD,IAAjB,CAAsBN,OAAO,CAACO,KAA9B,CAAX,IAAmDP,OAAO,CAACQ,IAA/D,EAAqE;AACnE,YAAIR,OAAO,CAACQ,IAAR,CAAaC,QAAjB,EAA2B;AACzB,cAAIT,OAAO,CAACQ,IAAR,CAAaC,QAAb,GAAwB,KAAKf,aAAjC,EAAgD;AAC9C;AACD;;AACD,eAAKA,aAAL,GAAqBM,OAAO,CAACQ,IAAR,CAAaC,QAAlC;AACD;;AACD,aAAKC,KAAL,CAAWC,QAAX;AACEC,UAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiB4C;AADzB,WAEKb,OAAO,CAACQ,IAFb;AAID;AACF;;;iCAEY;AAAA;;AACX,WAAKE,KAAL,CAAWI,SAAX,CAAqB;AAAA,eAAM,MAAI,CAACC,cAAL,EAAN;AAAA,OAArB;AACD;;;kCAEa;AACZ,aACE,KAAKrC,KAAL,CAAWsC,QAAX,KACC,CAAC,KAAKjC,QAAN,IAAkB,KAAKA,QAAL,CAAcgB,KADjC,MAEC,CAAC,KAAKf,oBAAN,IAA8B,KAAKA,oBAAL,CAA0Be,KAFzD,KAGA,KAAKlB,aAAL,CAAmBkB,KAHnB,IAIA,KAAKjB,oBAAL,CAA0BiB,KAJ1B,IAKA,KAAKkB,MAAL,KAAgBC,wBAAeC,OANjC;AAQD;;;mCAEc;AACb,aACE,CACE,CAAC,KAAKzC,KAAL,CAAWsC,QAAZ,IACC,CAAC,CAAC,KAAKjC,QAAP,IAAmB,CAAC,KAAKA,QAAL,CAAcgB,KADnC,IAEA,CAAC,KAAKjB,oBAAL,CAA0BiB,KAF3B,IAGC,KAAKf,oBAAL,IAA6B,CAAC,KAAKA,oBAAL,CAA0Be,KAHzD,IAIA,CAAC,KAAKlB,aAAL,CAAmBkB,KALtB,KAOA,KAAKA,KARP;AAUD;;;;;;;;;;;AAGC,qBAAKW,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBmD;AADL,iBAApB;;AAGA,oBAAI,KAAKpC,oBAAT,EAA+B;AAC7B,uBAAKkB,aAAL,GAAqB,KAAKlB,oBAAL,CAA0BmB,YAA/C;AACD;;qBACG,KAAKrB,oBAAL,CAA0BsB,qB;;;;;;uBACtB,KAAKiB,KAAL,E;;;AACN,qBAAKxC,aAAL,CAAmBiC,SAAnB,CAA6B,KAAK7B,mBAAlC;;;AAEF,qBAAKyB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBqD;AADL,iBAApB;;;;;;;;;;;;;;;;;;6BAKO;AACP,WAAKZ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBsD;AADL,OAApB;AAGA,WAAK7B,aAAL,GAAqB,CAArB;AACA,WAAKR,YAAL,GAAoB,IAApB;AACA,WAAKwB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBuD;AADL,OAApB;AAGD;;;;;;;;;;;;AAIC,qBAAKd,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBoD;AADL,iBAApB;;AAIUI,gBAAAA,O,GAAY,KAAK/C,K,CAAjB+C,O;;uBACW,KAAK7C,OAAL,CAAa8C,OAAb,GAAuBC,SAAvB,GAAmCpD,QAAnC,GAA8CqD,GAA9C,E;;;AAAbC,gBAAAA,I;;AACN,oBAAIJ,OAAO,KAAK,KAAK/C,KAAL,CAAW+C,OAA3B,EAAoC;AAClC,uBAAKf,KAAL,CAAWC,QAAX;AACEC,oBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiB6D;AADzB,qBAEKD,IAFL;AAGEE,oBAAAA,aAAa,EAAE,KAAKC;AAHtB;AAKD;;AACD,qBAAKC,QAAL,GAAgB,IAAhB;;;;;;;AAEA,qBAAKA,QAAL,GAAgB,IAAhB;AACA,qBAAKvB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiBiE,UADL;AAElBC,kBAAAA,KAAK;AAFa,iBAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUF,oBAAI,CAAC,KAAKF,QAAV,EAAoB;AAClB,uBAAKA,QAAL,GAAgB,KAAK5B,MAAL,EAAhB;AACD;;kDACM,KAAK4B,Q;;;;;;;;;;;;;;;;;;;;;gDAIAG,M;;;;;;oBACP,KAAKtD,oBAAL,CAA0BuD,yB;;;;;;;;;AAIrBZ,gBAAAA,O,GAAY,KAAK/C,K,CAAjB+C,O;AACFa,gBAAAA,Q,GAAW,KAAK1D,OAAL,CAAa2D,OAAb,CAAqBD,QAArB,E;;uBACMA,QAAQ,CAACE,GAAT,CACrB,iCADqB,EAErBJ,MAFqB,C;;;AAAjBK,gBAAAA,Q;AAIAZ,gBAAAA,I,GAAOY,QAAQ,CAACC,IAAT,E;;AACb,oBAAIjB,OAAO,KAAK,KAAK/C,KAAL,CAAW+C,OAA3B,EAAoC;AAClC,uBAAKf,KAAL,CAAWC,QAAX;AACEC,oBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiB0E;AADzB,qBAEKd,IAFL;AAGEE,oBAAAA,aAAa,EAAE,KAAKC;AAHtB;AAKD;;;;;;;;AAED,qBAAKtB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAK3C,WAAL,CAAiB2E,WADL;AAElBT,kBAAAA,KAAK;AAFa,iBAApB;;;;;;;;;;;;;;;;;;;2CAQmBU,gB,EAAkB;AACvC,UAAMT,MAAM,GAAG;AACbJ,QAAAA,SAAS,EAAE,KAAKA,SADH;AAEbc,QAAAA,UAAU,EAAED;AAFC,OAAf;;AAIA,UACET,MAAM,CAACJ,SAAP,KAAqBA,mBAAUe,YAA/B,IACAX,MAAM,CAACJ,SAAP,KAAqBA,mBAAUgB,0BAFjC,EAGE;AACAZ,QAAAA,MAAM,CAACJ,SAAP,GAAmB,KAAKvC,uBAAL,IAAgCuC,mBAAUe,YAA7D;AACD;;AACD,aAAOX,MAAP;AACD;;;;;;;;;;;;sBAGK,KAAKU,UAAL,KAAoBG,wBAAeC,SAAnC,IACF,KAAKlB,SAAL,KAAmBA,mBAAUmB,mB;;;;;;;;AAGzBf,gBAAAA,M,GAAS,KAAKgB,sBAAL,CAA4BH,wBAAeC,SAA3C,C;;uBACT,KAAKG,OAAL,CAAajB,MAAb,C;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAKJ,KAAKU,UAAL,KAAoBG,wBAAeK,IAAnC,IACA,KAAKtB,SAAL,KAAmBA,mBAAUmB,mB;;;;;;;;AAIzBf,gBAAAA,M,GAAS,KAAKgB,sBAAL,CAA4BH,wBAAeK,IAA3C,C;;uBACT,KAAKD,OAAL,CAAajB,MAAb,C;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAKJ,KAAKJ,SAAL,KAAmBA,mBAAUmB,mB;;;;;;;;AAIzBf,gBAAAA,M,GAAS;AACbJ,kBAAAA,SAAS,EAAEA,mBAAUmB,mBADR;AAEbL,kBAAAA,UAAU,EAAEG,wBAAeK;AAFd,iB;;uBAIT,KAAKD,OAAL,CAAajB,MAAb,C;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAKJ,KAAKU,UAAL,KAAoBG,wBAAeM,OAAnC,IACA,KAAKvB,SAAL,KAAmBA,mBAAUmB,mB;;;;;;;;AAIzBf,gBAAAA,M,GAAS,KAAKgB,sBAAL,CAA4BH,wBAAeM,OAA3C,C;;uBACT,KAAKF,OAAL,CAAajB,MAAb,C;;;;;;;;;;;;;;;;;;;;;iDAGUoB,Y;;;;;gCACTA,Y;oDACAP,wBAAeC,S,yBAGfD,wBAAeK,I,yBAGftB,mBAAUmB,mB,yBAGVF,wBAAeM,O;;;;;uBARZ,KAAKE,YAAL,E;;;;;;;uBAGA,KAAKC,OAAL,E;;;;;;;uBAGA,KAAKC,eAAL,E;;;;;;;uBAGA,KAAKC,YAAL,E;;;;;;;uBAGA,KAAKH,YAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMJrB,gBAAAA,M,GAAS;AACbU,kBAAAA,UAAU,EAAE,KAAKA;AADJ,iB;;AAGf,oBAAI,KAAKd,SAAL,KAAmBA,mBAAUe,YAAjC,EAA+C;AAC7CX,kBAAAA,MAAM,CAACJ,SAAP,GAAmBA,mBAAUgB,0BAA7B;AACD,iBAFD,MAEO,IAAI,KAAKhB,SAAL,KAAmBA,mBAAUgB,0BAAjC,EAA6D;AAClEZ,kBAAAA,MAAM,CAACJ,SAAP,GAAmBA,mBAAUe,YAA7B;AACD;;qBACGX,MAAM,CAACJ,S;;;;;;uBACH,KAAKqB,OAAL,CAAajB,MAAb,C;;;;;;;;;;;;;;;;;;wBAIG;AACX,aAAO,KAAKyB,KAAL,CAAW5C,MAAlB;AACD;;;wBAEW;AACV,aAAO,KAAK4C,KAAL,CAAW5C,MAAX,KAAsBC,wBAAenB,KAA5C;AACD;;;wBAEe;AACd,aAAO,KAAK8D,KAAL,CAAW7B,SAAlB;AACD;;;wBAE6B;AAC5B,UAAI,KAAKjD,QAAT,EAAmB;AACjB,eAAO,KAAKA,QAAL,CAAc+E,OAAd,CAAsB,KAAK1E,kCAA3B,CAAP;AACD;;AACD,aAAO,KAAKyE,KAAL,CAAWpE,uBAAlB;AACD;;;wBAEgB;AACf,aAAO,KAAKoE,KAAL,CAAWf,UAAlB;AACD;;;wBAEa;AACZ,aAAO,KAAKe,KAAL,CAAW7D,OAAlB;AACD;;;wBAEoB;AACnB,aAAO,KAAK6D,KAAL,CAAWZ,cAAlB;AACD;;;wBAEoB;AACnB;AACA,UACA,KAAKY,KAAL,CAAWf,UAAX,KAA0BG,wBAAeC,SAAzC,IACA,KAAKW,KAAL,CAAW7B,SAAX,KAAyBA,mBAAUmB,mBAFnC,EAEwD;AACtD,eAAOF,wBAAeC,SAAtB;AACD,OANkB,CAQnB;;;AACA,UAAG,KAAKW,KAAL,CAAWf,UAAX,KAA0BG,wBAAeK,IAAzC,IACH,KAAKO,KAAL,CAAW7B,SAAX,KAAyBA,mBAAUmB,mBADnC,EACwD;AACtD,eAAOF,wBAAeK,IAAtB;AACD,OAZkB,CAcnB;;;AACA,UAAG,KAAKO,KAAL,CAAW7B,SAAX,KAAyBA,mBAAUmB,mBAAtC,EAA2D;AACzD,eAAOnB,mBAAUmB,mBAAjB;AACD,OAjBkB,CAmBnB;;;AACA,UAAG,KAAKU,KAAL,CAAWf,UAAX,KAA0BG,wBAAeM,OAAzC,IACH,KAAKM,KAAL,CAAW7B,SAAX,KAAyBA,mBAAUmB,mBADnC,EACwD;AACtD,eAAOF,wBAAeM,OAAtB;AACD;;AAED,aAAON,wBAAeC,SAAtB;AACD;;;;EA9WmCa,kB,4DA0JnCC,gB,4IA0BAA,gB,6IAQAA,gB","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport getPresenceReducer, { getLastNotDisturbDndStatusReducer } from './getPresenceReducer';\nimport presenceActionTypes from './actionTypes';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport dndStatus from './dndStatus';\nimport presenceStatus from './presenceStatus';\nimport proxify from '../../lib/proxy/proxify';\nimport ensureExist from '../../lib/ensureExist';\n\nconst presenceEndPoint = /.*\\/presence(\\?.*)?/;\n\n/**\n * @class\n * @description Presence info module\n */\n@Module({\n  deps: [\n    'Auth', 'Client', 'Subscription', 'RolesAndPermissions',\n    { dep: 'Storage', optional: true },\n    { dep: 'ConnectivityMonitor', optional: true },\n    { dep: 'PresenceOptions', optional: true }\n  ]\n})\nexport default class Presence extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {Subscription} params.subscription - subscription module instance\n   * @param {Object} params.actionTypes - actionTypes enums\n   */\n  constructor({\n    auth,\n    client,\n    storage,\n    subscription,\n    rolesAndPermissions,\n    connectivityMonitor,\n    actionTypes = presenceActionTypes,\n    getReducer = getPresenceReducer,\n    subscriptionFilter = subscriptionFilters.presence,\n    lastNotDisturbDndStatusStorageKey = 'lastNotDisturbDndStatus',\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._auth = this::ensureExist(auth, 'auth');\n    this._client = this::ensureExist(client, 'client');\n    this._subscription = this::ensureExist(subscription, 'subscription');\n    this._rolesAndPermissions =\n      this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._storage = storage;\n    this._connectivityMonitor = connectivityMonitor;\n\n    this._subscriptionFilter = subscriptionFilter;\n\n    this._lastMessage = null;\n\n    this._delayTimeoutId = null;\n    this._lastNotDisturbDndStatusStorageKey = lastNotDisturbDndStatusStorageKey;\n    if (this._storage) {\n      this._reducer = getReducer(this.actionTypes);\n      this._storage.registerReducer({\n        key: this._lastNotDisturbDndStatusStorageKey,\n        reducer: getLastNotDisturbDndStatusReducer(this.actionTypes)\n      });\n    } else {\n      this._reducer = getReducer(this.actionTypes, {\n        lastNotDisturbDndStatus: getLastNotDisturbDndStatusReducer(this.actionTypes),\n      });\n    }\n    this._lastSequence = 0;\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      await this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    } else if (\n      this.ready &&\n      this._subscription.ready &&\n      this._subscription.message &&\n      this._subscription.message !== this._lastMessage\n    ) {\n      this._lastMessage = this._subscription.message;\n      this._subscriptionHandler(this._lastMessage);\n    } else if (\n      this.ready &&\n      this._connectivityMonitor &&\n      this._connectivityMonitor.ready &&\n      this._connectivity !== this._connectivityMonitor.connectivity\n    ) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n      // fetch data on regain connectivity\n      if (this._connectivity) {\n        if (this._rolesAndPermissions.hasPresencePermission) {\n          this._fetch();\n        }\n      }\n    }\n  }\n\n  _subscriptionHandler(message) {\n    if (message && presenceEndPoint.test(message.event) && message.body) {\n      if (message.body.sequence) {\n        if (message.body.sequence < this._lastSequence) {\n          return;\n        }\n        this._lastSequence = message.body.sequence;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.notification,\n        ...message.body,\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      (!this._storage || this._storage.ready) &&\n      (!this._connectivityMonitor || this._connectivityMonitor.ready) &&\n      this._subscription.ready &&\n      this._rolesAndPermissions.ready &&\n      this.status === moduleStatuses.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        (!!this._storage && !this._storage.ready) ||\n        !this._rolesAndPermissions.ready ||\n        (this._connectivityMonitor && !this._connectivityMonitor.ready) ||\n        !this._subscription.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  async _init() {\n    this.store.dispatch({\n      type: this.actionTypes.init,\n    });\n    if (this._connectivityMonitor) {\n      this._connectivity = this._connectivityMonitor.connectivity;\n    }\n    if (this._rolesAndPermissions.hasPresencePermission) {\n      await this.fetch();\n      this._subscription.subscribe(this._subscriptionFilter);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.reset,\n    });\n    this._lastSequence = 0;\n    this._lastMessage = null;\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  @proxify\n  async _fetch() {\n    this.store.dispatch({\n      type: this.actionTypes.fetch,\n    });\n    try {\n      const { ownerId } = this._auth;\n      const data = await this._client.account().extension().presence().get();\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.fetchSuccess,\n          ...data,\n          lastDndStatus: this.dndStatus,\n        });\n      }\n      this._promise = null;\n    } catch (error) {\n      this._promise = null;\n      this.store.dispatch({\n        type: this.actionTypes.fetchError,\n        error,\n      });\n      throw error;\n    }\n  }\n\n  @proxify\n  async fetch() {\n    if (!this._promise) {\n      this._promise = this._fetch();\n    }\n    return this._promise;\n  }\n\n  @proxify\n  async _update(params) {\n    if (!this._rolesAndPermissions.hasEditPresencePermission) {\n      return;\n    }\n    try {\n      const { ownerId } = this._auth;\n      const platform = this._client.service.platform();\n      const response = await platform.put(\n        '/account/~/extension/~/presence',\n        params\n      );\n      const data = response.json();\n      if (ownerId === this._auth.ownerId) {\n        this.store.dispatch({\n          type: this.actionTypes.updateSuccess,\n          ...data,\n          lastDndStatus: this.dndStatus\n        });\n      }\n    } catch (error) {\n      this.store.dispatch({\n        type: this.actionTypes.updateError,\n        error,\n      });\n      throw error;\n    }\n  }\n\n  _getUpdateStatusParams(userStatusParams) {\n    const params = {\n      dndStatus: this.dndStatus,\n      userStatus: userStatusParams,\n    };\n    if (\n      params.dndStatus !== dndStatus.takeAllCalls &&\n      params.dndStatus !== dndStatus.doNotAcceptDepartmentCalls\n    ) {\n      params.dndStatus = this.lastNotDisturbDndStatus || dndStatus.takeAllCalls;\n    }\n    return params;\n  }\n\n  async setAvailable() {\n    if (this.userStatus === presenceStatus.available &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.available);\n    await this._update(params);\n  }\n\n  async setBusy() {\n    if (\n      this.userStatus === presenceStatus.busy &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.busy);\n    await this._update(params);\n  }\n\n  async setDoNotDisturb() {\n    if (\n      this.dndStatus === dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = {\n      dndStatus: dndStatus.doNotAcceptAnyCalls,\n      userStatus: presenceStatus.busy\n    };\n    await this._update(params);\n  }\n\n  async setInvisible() {\n    if (\n      this.userStatus === presenceStatus.offline &&\n      this.dndStatus !== dndStatus.doNotAcceptAnyCalls\n    ) {\n      return;\n    }\n    const params = this._getUpdateStatusParams(presenceStatus.offline);\n    await this._update(params);\n  }\n\n  async setPresence(presenceData) {\n    switch(presenceData) {\n      case presenceStatus.available:\n        await this.setAvailable();\n        break;\n      case presenceStatus.busy:\n        await this.setBusy();\n        break;\n      case dndStatus.doNotAcceptAnyCalls:\n        await this.setDoNotDisturb();\n        break;\n      case presenceStatus.offline:\n        await this.setInvisible();\n        break;\n      default:\n        await this.setAvailable();\n        break;\n    }\n  }\n\n  async toggleAcceptCallQueueCalls() {\n    const params = {\n      userStatus: this.userStatus,\n    };\n    if (this.dndStatus === dndStatus.takeAllCalls) {\n      params.dndStatus = dndStatus.doNotAcceptDepartmentCalls;\n    } else if (this.dndStatus === dndStatus.doNotAcceptDepartmentCalls) {\n      params.dndStatus = dndStatus.takeAllCalls;\n    }\n    if (params.dndStatus) {\n      await this._update(params);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get dndStatus() {\n    return this.state.dndStatus;\n  }\n\n  get lastNotDisturbDndStatus() {\n    if (this._storage) {\n      return this._storage.getItem(this._lastNotDisturbDndStatusStorageKey);\n    }\n    return this.state.lastNotDisturbDndStatus;\n  }\n\n  get userStatus() {\n    return this.state.userStatus;\n  }\n\n  get message() {\n    return this.state.message;\n  }\n\n  get presenceStatus() {\n    return this.state.presenceStatus;\n  }\n\n  get presenceOption() {\n    // available\n    if (\n    this.state.userStatus === presenceStatus.available &&\n    this.state.dndStatus !== dndStatus.doNotAcceptAnyCalls) {\n      return presenceStatus.available\n    }\n\n    // busy\n    if(this.state.userStatus === presenceStatus.busy &&\n    this.state.dndStatus !== dndStatus.doNotAcceptAnyCalls) {\n      return presenceStatus.busy;\n    }\n\n    // doNotDisturb\n    if(this.state.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n      return dndStatus.doNotAcceptAnyCalls;\n    }\n\n    // invisible\n    if(this.state.userStatus === presenceStatus.offline &&\n    this.state.dndStatus !== dndStatus.doNotAcceptAnyCalls) {\n      return presenceStatus.offline\n    }\n\n    return presenceStatus.available\n  }\n\n}\n"],"file":"index.js"}