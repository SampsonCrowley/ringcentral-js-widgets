{"version":3,"sources":["containers/ActiveCallsPage/index.js"],"names":["mapToProps","_","phone","brand","callLogger","callMonitor","locale","regionSettings","rolesAndPermissions","conferenceCall","callingSettings","connectivityMonitor","rateLimiter","showContactDisplayPlaceholder","showRingoutCallControl","useV2","isWebRTC","callingMode","callingModes","webphone","currentLocale","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","showSpinner","isMerging","fullName","autoLog","conferenceCallParties","partyProfiles","disableLinks","connectivity","throttling","mapToFunctions","composeText","contactMatcher","contactSearch","routerInteraction","activeCallControl","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","formatPhone","phoneNumber","webphoneAnswer","sessionId","session","sessions","find","id","direction","callDirections","inbound","closeMergingPair","answer","webphoneToVoicemail","toVoiceMail","webphoneReject","reject","webphoneHangup","allCallsClickHangupTrack","hangup","webphoneResume","resume","currentPath","push","webphoneHold","allCallsClickHoldTrack","hold","ringoutHangup","hangUp","ringoutTransfer","setActiveSessionId","ringoutReject","allCallsClickRejectTrack","contact","type","onClickToSms","isDummyContact","clean","name","updateTypingToNumber","search","searchString","addToRecipients","undefined","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","ActiveCallsPage","ActiveCallsPanel","default"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAgBG;AAAA,wBAfDC,KAeC;AAAA,MAdCC,KAcD,cAdCA,KAcD;AAAA,MAbCC,UAaD,cAbCA,UAaD;AAAA,MAZCC,WAYD,cAZCA,WAYD;AAAA,MAXCC,MAWD,cAXCA,MAWD;AAAA,MAVCC,cAUD,cAVCA,cAUD;AAAA,MATCC,mBASD,cATCA,mBASD;AAAA,MARCC,cAQD,cARCA,cAQD;AAAA,MAPCC,eAOD,cAPCA,eAOD;AAAA,MANCC,mBAMD,cANCA,mBAMD;AAAA,MALCC,WAKD,cALCA,WAKD;AAAA,mCAHDC,6BAGC;AAAA,MAHDA,6BAGC,yCAH+B,KAG/B;AAAA,mCAFDC,sBAEC;AAAA,MAFDA,sBAEC,yCAFwB,KAExB;AAAA,MADDC,KACC,QADDA,KACC;;AACD,MAAMC,WAAWN,gBAAgBO,WAAhB,KAAgCC,uBAAaC,QAA9D;;AAEA,SAAO;AACLC,mBAAed,OAAOc,aADjB;AAELC,qBAAiBhB,YAAYgB,eAFxB;AAGLC,uBAAmBjB,YAAYiB,iBAH1B;AAILC,wBAAoBlB,YAAYkB,kBAJ3B;AAKLC,sBAAkBnB,YAAYmB,gBALzB;AAMLC,cAAUlB,eAAekB,QANpB;AAOLC,iBAAanB,eAAemB,WAPvB;AAQLC,2BAAuB,CAAC,EACtBnB,oBAAoBoB,WAApB,IACApB,oBAAoBoB,WAApB,CAAgCC,WAFV,CARnB;AAYLC,2BAAuB,CAAC,EACtBtB,oBAAoBoB,WAApB,IACApB,oBAAoBoB,WAApB,CAAgCG,WAFV,CAZnB;AAgBLC,iBAAa,CAAC,EAAEvB,kBAAkBA,eAAewB,SAAnC,CAhBT;AAiBL9B,WAAOA,MAAM+B,QAjBR;AAkBLrB,gEAlBK;AAmBLC,kDAnBK;AAoBLqB,aAAS,CAAC,EAAE/B,cAAcA,WAAW+B,OAA3B,CApBL;AAqBLnB,sBArBK;AAsBLoB,2BAAuB3B,iBAAiBA,eAAe4B,aAAhC,GAAgD,IAtBlE;AAuBLtB,gBAvBK;AAwBLuB,kBAAc,CAAC3B,oBAAoB4B,YAArB,IACZ3B,YAAY4B;AAzBT,GAAP;AA2BD;;AAED,SAASC,cAAT,CAAwBxC,CAAxB,SAwBG;AAAA;;AAAA,0BAvBDC,KAuBC;AAAA,MAtBCE,UAsBD,eAtBCA,UAsBD;AAAA,MArBCsC,WAqBD,eArBCA,WAqBD;AAAA,MApBCC,cAoBD,eApBCA,cAoBD;AAAA,MAnBCC,aAmBD,eAnBCA,aAmBD;AAAA,MAlBCrC,cAkBD,eAlBCA,cAkBD;AAAA,MAjBCsC,iBAiBD,eAjBCA,iBAiBD;AAAA,MAhBC1B,QAgBD,eAhBCA,QAgBD;AAAA,MAfCT,eAeD,eAfCA,eAeD;AAAA,MAdCD,cAcD,eAdCA,cAcD;AAAA,MAbCJ,WAaD,eAbCA,WAaD;AAAA,MAZCyC,iBAYD,eAZCA,iBAYD;AAAA,oCAVDC,gBAUC;AAAA,MAVDA,gBAUC,yCAVkB,cAUlB;AAAA,kCATDC,aASC;AAAA,MATDA,aASC,uCATe,eASf;AAAA,MARDC,eAQC,SARDA,eAQC;AAAA,MAPDC,SAOC,SAPDA,SAOC;AAAA,MANDC,eAMC,SANDA,eAMC;AAAA,MALDC,YAKC,SALDA,YAKC;AAAA,MAJDC,aAIC,SAJDA,aAIC;AAAA,oCAHDC,eAGC;AAAA,MAHDA,eAGC,yCAHiB,IAGjB;AAAA,MAFDC,YAEC,SAFDA,YAEC;AAAA,MADDxC,KACC,SADDA,KACC;;AACD,SAAO;AACLyC,eADK,uBACOC,WADP,EACoB;AACvB,aAAO,4BAAa;AAClBA,gCADkB;AAElBhC,kBAAUlB,eAAekB,QAFP;AAGlBC,qBAAanB,eAAemB;AAHV,OAAb,CAAP;AAKD,KAPI;AAQCgC,kBARD;AAAA,4GAQgBC,SARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASExC,QATF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAaGyC,uBAbH,GAaazC,SAAS0C,QAAT,CAAkBC,IAAlB,CAAuB;AAAA,yBAAWF,QAAQG,EAAR,KAAeJ,SAA1B;AAAA,iBAAvB,CAbb;;AAcH,oBACElD,kBACAmD,OADA,IAEAA,QAAQI,SAAR,KAAsBC,yBAAeC,OAHvC,EAIE;AACAzD,iCAAe0D,gBAAf;AACD;;AAEDhD,yBAASiD,MAAT,CAAgBT,SAAhB;;AAtBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBCU,uBAxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAyBKlD,YAAYA,SAASmD,WAAT,wBAzBjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA2BCC,kBA3BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDA4BKpD,YAAYA,SAASqD,MAAT,wBA5BjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8BCC,kBA9BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BH;AACApE,4BAAYqE,wBAAZ;AAhCG,kDAiCKvD,YAAYA,SAASwD,MAAT,wBAjCjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmCCC,kBAnCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAoCEzD,QApCF;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAuCGA,SAAS0D,MAAT,wBAvCH;;AAAA;AAwCH,oBAAIhC,kBAAkBiC,WAAlB,KAAkC9B,aAAlC,IAAmD,CAACjC,KAAxD,EAA+D;AAC7D8B,oCAAkBkC,IAAlB,CAAuB/B,aAAvB;AACD;;AA1CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4CCgC,gBA5CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CH;AACA3E,4BAAY4E,sBAAZ;AA9CG,kDA+CK9D,YAAYA,SAAS+D,IAAT,wBA/CjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiDCC,iBAjDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkDH;AACA9E,4BAAYqE,wBAAZ;AAnDG,kDAoDK5B,qBAAqBA,kBAAkBsC,MAAlB,iCApD1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsDCC,mBAtDD;AAAA,8GAsDiB1B,SAtDjB;AAAA;AAAA;AAAA;AAAA;AAuDHb,kCAAkBwC,kBAAlB,CAAqC3B,SAArC;AACAd,kCAAkBkC,IAAlB,gBAAoCpB,SAApC;;AAxDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0DC4B,iBA1DD;AAAA,8GA0De5B,SA1Df;AAAA;AAAA;AAAA;AAAA;AA2DH;AACAtD,4BAAYmF,wBAAZ;AA5DG,kDA6DK1C,qBAAqBA,kBAAkB0B,MAAlB,CAAyBb,SAAzB,CA7D1B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA+DLN,mBAAeC,kBACZD,iBAAkB,kBAAiB;AAAA,UAAdoC,OAAc,UAAdA,OAAc;AAAA,UAC1B1B,EAD0B,GACb0B,OADa,CAC1B1B,EAD0B;AAAA,UACtB2B,IADsB,GACbD,OADa,CACtBC,IADsB;;AAElC7C,wBAAkBkC,IAAlB,gBAAoCW,IAApC,SAA4C3B,EAA5C;AACD,KAJY,GAIP,IAnEH;AAoEL4B,kBAAcjD;AAAA,4FACZ,mBAAO+C,OAAP;AAAA,YAAgBG,cAAhB,uEAAiC,KAAjC;AAAA;AAAA;AAAA;AAAA;AACE,oBAAI/C,iBAAJ,EAAuB;AACrBA,oCAAkBkC,IAAlB,CAAuBhC,gBAAvB;AACD;AACDL,4BAAYmD,KAAZ;AACA,oBAAIJ,QAAQK,IAAR,IAAgBL,QAAQhC,WAAxB,IAAuCmC,cAA3C,EAA2D;AACzDlD,8BAAYqD,oBAAZ,CAAiCN,QAAQK,IAAzC;AACAlD,gCAAcoD,MAAd,CAAqB,EAAEC,cAAcR,QAAQK,IAAxB,EAArB;AACD,iBAHD,MAGO;AACLpD,8BAAYwD,eAAZ,CAA4BT,OAA5B;AACD;;AAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;;AAAA;AAAA;AAAA;AAAA,UAaZU,SAjFG;AAkFLlD,qBAAiBA;AAAA,4FACf;AAAA,YAASQ,WAAT,UAASA,WAAT;AAAA,YAAsBqC,IAAtB,UAAsBA,IAAtB;AAAA,YAA4BM,UAA5B,UAA4BA,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC+BzD,eAAe0D,cAAf,CAA8B;AACzD5C,0CADyD;AAEzD6C,+BAAa;AAF4C,iBAA9B,CAD/B;;AAAA;AACQD,8BADR;;AAAA,oBAKOA,cALP;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMUpD,gBAAgB,EAAEQ,wBAAF,EAAeqC,UAAf,EAAqBM,sBAArB,EAAhB,CANV;;AAAA;AAAA;AAAA,uBAOUzD,eAAe4D,gBAAf,CAAgC,EAAE9C,wBAAF,EAAhC,CAPV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADe;;AAAA;AAAA;AAAA;AAAA,UAWf0C,SA7FG;AA8FLhD,oCA9FK;AA+FLD,eAAWA,aACR9C;AAAA,4FAAe;AAAA,YAASoG,IAAT,UAASA,IAAT;AAAA,YAAef,OAAf,UAAeA,OAAf;AAAA,qCAAwBgB,QAAxB;AAAA,YAAwBA,QAAxB,mCAAmC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACRrG,WAAWsG,OAAX,CAAmB;AACvBF,4BADuB;AAEvBf,kCAFuB;AAGvBgB;AAHuB,iBAAnB,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAf;;AAAA;AAAA;AAAA;AAAA,OAhGE;AAuGLrD,kBAAcA,gBAAiB,YAAM;AACnC,UAAMpC,WAAWN,gBAAgBO,WAAhB,KAAgCC,uBAAaC,QAA9D;;AAEA,UAAIH,YAAY,CAACG,SAAS0C,QAAT,CAAkB8C,MAAnC,EAA2C;AACzC9D,0BAAkBkC,IAAlB,CAAuB,SAAvB;AACD;AACF,KA7GI;AA8GL6B,4BA9GK,oCA8GoBjD,SA9GpB,EA8G+B;AAClC,aAAO,CAAC,EACNlD,kBACGA,eAAeoG,mBAAf,CAAmClD,SAAnC,CAFG,CAAR;AAID,KAnHI;AAoHLmD,mBApHK,2BAoHWN,IApHX,EAoHiB;AACpB,UAAI,CAACA,KAAKO,eAAV,EAA2B;AACzB;AACA,YAAI,0CAAqBP,IAArB,CAAJ,EAAgC;AAC9B;AACD;;AAJwB,YAMjB7C,SANiB,GAMH6C,IANG,CAMjB7C,SANiB;AAOzB;;AACAtD,oBAAY2G,kBAAZ;AACAnE,0BAAkBkC,IAAlB,wBAA4CpB,SAA5C;AACD,OAVD,MAUO;AACL;AACA;AACA,YAAI,0CAAqB6C,IAArB,CAAJ,EAAgC;AAC9BrF,mBAAS8F,eAAT,CAAyBT,KAAKO,eAAL,CAAqBhD,EAA9C;AACA;AACD;AACD,YAAIyC,KAAKO,eAAL,IAAwBP,KAAKO,eAAL,CAAqBhD,EAAjD,EAAqD;AACnD;AACA1D,sBAAY2G,kBAAZ;AACAnE,4BAAkBkC,IAAlB,CAA0B/B,aAA1B,SAA2CwD,KAAKO,eAAL,CAAqBhD,EAAhE;AACD;AACF;AACF,KA5II;;AA6ILR,8BA7IK;AA8IL2D,iCAA6B,qCAACvD,SAAD,EAAY8B,OAAZ;AAAA,aAC3BtE,SAAS+F,2BAAT,CAAqCvD,SAArC,EAAgD8B,OAAhD,CAD2B;AAAA;AA9IxB,GAAP;AAkJD;;AAED,IAAM0B,kBAAkB,6BAAU,yBAChCnH,UADgC,EAEhCyC,cAFgC,EAGhC2E,0BAHgC,CAAV,CAAxB;;QAMEpH,U,GAAAA,U;QACAyC,c,GAAAA,c;QACmB4E,O,GAAnBF,e","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport { isRingingInboundCall } from 'ringcentral-integration/lib/callLogHelpers';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport { withPhone } from '../../lib/phoneContext';\n\nimport ActiveCallsPanel from '../../components/ActiveCallsPanel';\n\nfunction mapToProps(_, {\n  phone: {\n    brand,\n    callLogger,\n    callMonitor,\n    locale,\n    regionSettings,\n    rolesAndPermissions,\n    conferenceCall,\n    callingSettings,\n    connectivityMonitor,\n    rateLimiter,\n  },\n  showContactDisplayPlaceholder = false,\n  showRingoutCallControl = false,\n  useV2,\n}) {\n  const isWebRTC = callingSettings.callingMode === callingModes.webphone;\n\n  return {\n    currentLocale: locale.currentLocale,\n    activeRingCalls: callMonitor.activeRingCalls,\n    activeOnHoldCalls: callMonitor.activeOnHoldCalls,\n    activeCurrentCalls: callMonitor.activeCurrentCalls,\n    otherDeviceCalls: callMonitor.otherDeviceCalls,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n    showSpinner: !!(conferenceCall && conferenceCall.isMerging),\n    brand: brand.fullName,\n    showContactDisplayPlaceholder,\n    showRingoutCallControl,\n    autoLog: !!(callLogger && callLogger.autoLog),\n    isWebRTC,\n    conferenceCallParties: conferenceCall ? conferenceCall.partyProfiles : null,\n    useV2,\n    disableLinks: !connectivityMonitor.connectivity ||\n      rateLimiter.throttling,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    callLogger,\n    composeText,\n    contactMatcher,\n    contactSearch,\n    regionSettings,\n    routerInteraction,\n    webphone,\n    callingSettings,\n    conferenceCall,\n    callMonitor,\n    activeCallControl,\n  },\n  composeTextRoute = '/composeText',\n  callCtrlRoute = '/calls/active',\n  onCreateContact,\n  onLogCall,\n  isLoggedContact,\n  onCallsEmpty,\n  onViewContact,\n  showViewContact = true,\n  getAvatarUrl,\n  useV2,\n}) {\n  return {\n    formatPhone(phoneNumber) {\n      return formatNumber({\n        phoneNumber,\n        areaCode: regionSettings.areaCode,\n        countryCode: regionSettings.countryCode,\n      });\n    },\n    async webphoneAnswer(sessionId) {\n      if (!webphone) {\n        return;\n      }\n\n      const session = webphone.sessions.find(session => session.id === sessionId);\n      if (\n        conferenceCall &&\n        session &&\n        session.direction === callDirections.inbound\n      ) {\n        conferenceCall.closeMergingPair();\n      }\n\n      webphone.answer(sessionId);\n    },\n    async webphoneToVoicemail(...args) {\n      return (webphone && webphone.toVoiceMail(...args));\n    },\n    async webphoneReject(...args) {\n      return (webphone && webphone.reject(...args));\n    },\n    async webphoneHangup(...args) {\n      // user action track\n      callMonitor.allCallsClickHangupTrack();\n      return (webphone && webphone.hangup(...args));\n    },\n    async webphoneResume(...args) {\n      if (!webphone) {\n        return;\n      }\n      await webphone.resume(...args);\n      if (routerInteraction.currentPath !== callCtrlRoute && !useV2) {\n        routerInteraction.push(callCtrlRoute);\n      }\n    },\n    async webphoneHold(...args) {\n      // user action track\n      callMonitor.allCallsClickHoldTrack();\n      return (webphone && webphone.hold(...args));\n    },\n    async ringoutHangup(...args) {\n      // user action track\n      callMonitor.allCallsClickHangupTrack();\n      return (activeCallControl && activeCallControl.hangUp(...args));\n    },\n    async ringoutTransfer(sessionId) {\n      activeCallControl.setActiveSessionId(sessionId);\n      routerInteraction.push(`/transfer/${sessionId}`);\n    },\n    async ringoutReject(sessionId) {\n      // user action track\n      callMonitor.allCallsClickRejectTrack();\n      return (activeCallControl && activeCallControl.reject(sessionId));\n    },\n    onViewContact: showViewContact ?\n      (onViewContact || (({ contact }) => {\n        const { id, type } = contact;\n        routerInteraction.push(`/contacts/${type}/${id}?direct=true`);\n      })) : null,\n    onClickToSms: composeText ?\n      async (contact, isDummyContact = false) => {\n        if (routerInteraction) {\n          routerInteraction.push(composeTextRoute);\n        }\n        composeText.clean();\n        if (contact.name && contact.phoneNumber && isDummyContact) {\n          composeText.updateTypingToNumber(contact.name);\n          contactSearch.search({ searchString: contact.name });\n        } else {\n          composeText.addToRecipients(contact);\n        }\n      } :\n      undefined,\n    onCreateContact: onCreateContact ?\n      async ({ phoneNumber, name, entityType }) => {\n        const hasMatchNumber = await contactMatcher.hasMatchNumber({\n          phoneNumber,\n          ignoreCache: true\n        });\n        if (!hasMatchNumber) {\n          await onCreateContact({ phoneNumber, name, entityType });\n          await contactMatcher.forceMatchNumber({ phoneNumber });\n        }\n      } :\n      undefined,\n    isLoggedContact,\n    onLogCall: onLogCall ||\n      (callLogger && (async ({ call, contact, redirect = true }) => {\n        await callLogger.logCall({\n          call,\n          contact,\n          redirect,\n        });\n      })),\n    onCallsEmpty: onCallsEmpty || (() => {\n      const isWebRTC = callingSettings.callingMode === callingModes.webphone;\n\n      if (isWebRTC && !webphone.sessions.length) {\n        routerInteraction.push('/dialer');\n      }\n    }),\n    isSessionAConferenceCall(sessionId) {\n      return !!(\n        conferenceCall\n        && conferenceCall.isConferenceSession(sessionId)\n      );\n    },\n    onCallItemClick(call) {\n      if (!call.webphoneSession) {\n        // For ringout call\n        if (isRingingInboundCall(call)) {\n          return;\n        }\n\n        const { sessionId } = call;\n        // to track the call item be clicked.\n        callMonitor.callItemClickTrack();\n        routerInteraction.push(`/simplifycallctrl/${sessionId}`);\n      } else {\n        // For webphone call\n        // show the ring call modal when click a ringing call.\n        if (isRingingInboundCall(call)) {\n          webphone.toggleMinimized(call.webphoneSession.id);\n          return;\n        }\n        if (call.webphoneSession && call.webphoneSession.id) {\n          // to track the call item be clicked.\n          callMonitor.callItemClickTrack();\n          routerInteraction.push(`${callCtrlRoute}/${call.webphoneSession.id}`);\n        }\n      }\n    },\n    getAvatarUrl,\n    updateSessionMatchedContact: (sessionId, contact) => (\n      webphone.updateSessionMatchedContact(sessionId, contact)\n    ),\n  };\n}\n\nconst ActiveCallsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ActiveCallsPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  ActiveCallsPage as default,\n};\n"]}