{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","toggleTransferPanel","isShowTransferPanel","prevState","hideTransferPanel","onMerge","onBeforeMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","afterOnMerge","hideMergeConfirm","hideMergeConfirmAlt","afterHideMergeConfirm","confirmMerge","afterConfirmMerge","gotoParticipantsCtrl","nextProps","sessionId","onKeyPadChange","onHangup","currentLocale","isOnFlip","flipNumbers","formatPhone","onFlip","onTransfer","isOnTransfer","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","showBackButton","backButtonLabel","onBackButtonClick","phoneNumber","callStatus","startTime","isOnMute","isOnHold","recordStatus","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onPark","onAdd","nameMatches","fallBackName","areaCode","countryCode","selectedMatcherIndex","onSelectMatcherName","avatarUrl","brand","showContactDisplayPlaceholder","sourceIcons","direction","addDisabled","mergeDisabled","conferenceCallEquipped","conferenceCallParties","lastCallInfo","getAvatarUrl","actions","children","showSpinner","Component","propTypes","PropTypes","string","array","isRequired","number","bool","func","node","object","defaultProps","undefined","i"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport TransferPanel from '../TransferPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n      isShowMergeConfirm: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true,\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false,\n      });\n    };\n\n    this.toggleTransferPanel = () => {\n      this.setState(prevState => ({\n        isShowTransferPanel: !prevState.isShowTransferPanel,\n      }));\n    };\n\n    this.hideTransferPanel = () => {\n      this.setState({\n        isShowTransferPanel: false,\n      });\n    };\n\n    this.onMerge = () => {\n      const { onBeforeMerge } = this.props;\n      if (!onBeforeMerge || onBeforeMerge()) {\n        if (\n          this.props.hasConferenceCall &&\n          this.props.layout === callCtrlLayouts.normalCtrl\n        ) {\n          this.showMergeConfirm();\n        } else if (this.props.onMerge) {\n          this.props.onMerge();\n        }\n      }\n      // track user click merge\n      this.props.afterOnMerge();\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n\n    this.hideMergeConfirmAlt = () => {\n      this.hideMergeConfirm();\n      // user action track\n      this.props.afterHideMergeConfirm();\n    };\n\n    this.confirmMerge = () => {\n      this.setState({\n        isShowMergeConfirm: false\n      });\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n      // user action track\n      this.props.afterConfirmMerge();\n    };\n\n    this.gotoParticipantsCtrl = () => {\n      this.props.gotoParticipantsCtrl();\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n    if (this.props.sessionId !== nextProps.sessionId) {\n      this.hiddenKeyPad();\n      this.hideFlipPanel();\n      this.hideTransferPanel();\n      this.hideMergeConfirm();\n    }\n  }\n\n  render() {\n    if (this.state.isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={this.props.onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={this.props.onHangup}\n          currentLocale={this.props.currentLocale}\n        />\n      );\n    }\n    if (this.state.isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={this.props.isOnFlip}\n          flipNumbers={this.props.flipNumbers}\n          currentLocale={this.props.currentLocale}\n          formatPhone={this.props.formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          onFlip={this.props.onFlip}\n          complete={this.props.onHangup}\n        />\n      );\n    }\n    if (this.state.isShowTransferPanel) {\n      return (\n        <TransferPanel\n          onTransfer={this.props.onTransfer}\n          currentLocale={this.props.currentLocale}\n          toggleTransferPanel={this.toggleTransferPanel}\n          isOnTransfer={this.props.isOnTransfer}\n          searchContactList={this.props.searchContactList}\n          searchContact={this.props.searchContact}\n          formatPhone={this.props.formatPhone}\n          phoneTypeRenderer={this.props.phoneTypeRenderer}\n          recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n          recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={this.props.backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={this.props.phoneNumber}\n        sessionId={this.props.sessionId}\n        callStatus={this.props.callStatus}\n        startTime={this.props.startTime}\n        isOnMute={this.props.isOnMute}\n        isOnHold={this.props.isOnHold}\n        recordStatus={this.props.recordStatus}\n        onMute={this.props.onMute}\n        onUnmute={this.props.onUnmute}\n        onHold={this.props.onHold}\n        onUnhold={this.props.onUnhold}\n        onRecord={this.props.onRecord}\n        onStopRecord={this.props.onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={this.props.onHangup}\n        onPark={this.props.onPark}\n        onAdd={this.props.onAdd}\n        onMerge={this.onMerge}\n        nameMatches={this.props.nameMatches}\n        fallBackName={this.props.fallBackName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.props.selectedMatcherIndex}\n        onSelectMatcherName={this.props.onSelectMatcherName}\n        avatarUrl={this.props.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.toggleTransferPanel}\n        gotoParticipantsCtrl={this.gotoParticipantsCtrl}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        layout={this.props.layout}\n        direction={this.props.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.props.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        actions={this.props.actions}\n      >\n        {this.props.children}\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        {this.props.layout === callCtrlLayouts.normalCtrl\n          ? <ConfirmMergeModal\n            currentLocale={this.props.currentLocale}\n            show={this.state.isShowMergeConfirm}\n            onMerge={this.confirmMerge}\n            onCancel={this.hideMergeConfirmAlt}\n            partyProfiles={this.props.conferenceCallParties}\n          />\n          : null\n        }\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  isOnTransfer: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onPark: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onKeyPadChange: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func.isRequired,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  direction: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallParties: PropTypes.array,\n  getAvatarUrl: PropTypes.func,\n  gotoParticipantsCtrl: PropTypes.func,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  actions: PropTypes.array,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnTransfer: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n  getAvatarUrl: () => null,\n  gotoParticipantsCtrl: i => i,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  actions: []\n};\n\nexport default CallCtrlPanel;\n"]}