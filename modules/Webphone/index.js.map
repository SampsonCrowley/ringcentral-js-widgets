{"version":3,"sources":["modules/Webphone/index.js"],"names":["FIRST_THREE_RETRIES_DELAY","FOURTH_RETRIES_DELAY","FIFTH_RETRIES_DELAY","MAX_RETRIES_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","Enum","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onBeforeCallResume","onBeforeCallEnd","options","actionTypes","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_contactMatcher","_tabManager","_onCallEndFunctions","push","_onCallRingFunctions","_onCallStartFunctions","_onCallResumeFunctions","_onBeforeCallResumeFunctions","_onBeforeCallEndFunctions","_webphone","_remoteVideo","_localVideo","_sessions","_reducer","addSelector","sessions","outputs","forEach","session","to","from","ringSessionId","ringSession","id","cached","activeSessionId","activeSession","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","stop","unregister","removeAllListeners","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","incoming","incomingAudio","outgoing","outgoingAudio","onRegistered","registered","info","message","webphoneErrors","connected","onUnregistered","unregistered","onRegistrationFailed","cause","connectionStatus","connectFailed","errorCode","needToReconnect","console","error","statusCode","status_code","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","danger","allowDuplicates","payload","registrationFailed","indexOf","_connect","on","log","_onInvite","reconnect","_retrySleep","connecting","resetRetryCounts","active","connect","_sipProvision","sipProvision","disconnecting","_createWebphone","ttl","refreshServiceFeatures","notWebphonePermission","sipProvisionError","connectError","disconnected","browserNotSupported","warning","_fetchDL","notOutboundCallWithoutDL","checkDLError","hangup","_updateSessions","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","i","len","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","onHold","__rc_lastActiveTime","Date","now","mediaHandler","onGetUserMediaError","__rc_creationTime","request","_onCallRing","sessionId","sipSession","get","find","_holdOtherSession","accept","acceptOptions","_onCallStart","callAnswer","code","reject","unhold","forwardNumber","validateNumbers","validatedResult","result","errors","callErrors","phoneNumber","validPhoneNumber","numbers","e164","__rc_isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","isOnHold","local","hold","holdError","currentSessionId","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","__rc_isOnTransfer","transfer","transferError","ua","invite","media","once","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","extendedControls","outbound","__rc_fromNumber","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","map","normalizeSession","updateSessions","set","delete","__rc_minimized","normalizedSession","x","callStart","triggerMatch","_onCallStartFunc","handler","callRing","playIncoming","_onCallRingFunc","_onBeforeCallEndFunc","_removeSession","callEnd","_onCallEndFunc","_onBeforeCallResumeFunc","_onCallResumeFunc","connectRetryCounts","state","status","moduleStatuses","ringSessions","onHoldSessions","lastEndedSessions","cachedSessions","webphoneEnabled","audio","deviceId","inputDeviceId","video","render","remote","isOnTransfer","RcModule","proxify","getter","minimized"],"mappings":"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","file":"index.js","sourcesContent":["import { find, filter } from 'ramda';\nimport { createSelector } from 'reselect';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport getter from '../../lib/getter';\nimport Enum from '../../lib/Enum';\n\nimport {\n  isBrowserSupport,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst FIRST_THREE_RETRIES_DELAY = 10 * 1000;\nconst FOURTH_RETRIES_DELAY = 30 * 1000;\nconst FIFTH_RETRIES_DELAY = 60 * 1000;\nconst MAX_RETRIES_DELAY = 2 * 60 * 1000;\n\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = new Enum([\n  'pending',\n  'playing',\n  'stopped',\n]);\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    { dep: 'ContactMatcher', optional: true },\n    'NumberValidate',\n    'RolesAndPermissions',\n    'AudioSettings',\n    { dep: 'TabManager', optional: true },\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call start\n   * @param {Function} params.onCallResume - callback on a call resume\n   * @param {Function} params.onBeforeCallResume - callback before a call resume\n   * @param {Function} params.onBeforeCallEnd - callback before a call hangup\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this:: ensureExist(auth, 'auth');\n    this._client = this:: ensureExist(client, 'client');\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._numberValidate = this:: ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this:: ensureExist(audioSettings, 'audioSettings');\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n\n    this._onCallEndFunctions = [];\n    if (typeof onCallEnd === 'function') {\n      this._onCallEndFunctions.push(onCallEnd);\n    }\n    this._onCallRingFunctions = [];\n    if (typeof onCallRing === 'function') {\n      this._onCallRingFunctions.push(onCallRing);\n    }\n    this._onCallStartFunctions = [];\n    if (typeof onCallStart === 'function') {\n      this._onCallStartFunctions.push(onCallStart);\n    }\n    this._onCallResumeFunctions = [];\n    if (typeof onCallResume === 'function') {\n      this._onCallResumeFunctions.push(onCallResume);\n    }\n    this._onBeforeCallResumeFunctions = [];\n    if (typeof onBeforeCallResume === 'function') {\n      this._onBeforeCallResumeFunctions.push(onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._onBeforeCallEndFunctions.push(onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = find(\n          session => session.id === ringSessionId,\n          sessions\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('cachedSessions',\n      () => this.sessions,\n      sessions => filter(session => session.cached, sessions)\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = find(\n          session => session.id === activeSessionId,\n          sessions\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => filter(session => isRing(session), sessions)\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => filter(session => isOnHold(session), sessions)\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n        incoming: incomingAudio, // path to audio file for incoming call\n        outgoing: outgoingAudio, // path to aduotfile for outgoing call\n      }\n    });\n    this._isFirstRegister = true;\n    const onRegistered = () => {\n      if (this._isFirstRegister) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n      }\n      this._isFirstRegister = false;\n    };\n    const onUnregistered = () => {\n      this._isFirstRegister = true;\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    };\n    const onRegistrationFailed = (response, cause) => {\n      if (this.connectionStatus === connectionStatus.connectFailed) {\n        return;\n      }\n      this._isFirstRegister = true;\n      let errorCode;\n      let needToReconnect = false;\n      console.error(response);\n      console.error('webphone register failed:', cause);\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response ? response.status_code : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 503:\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          needToReconnect = true;\n          break;\n        }\n        case 403: {\n          errorCode = webphoneErrors.webphoneForbidden;\n          needToReconnect = true;\n          break;\n        }\n        // Request Timeout\n        case 408: {\n          errorCode = webphoneErrors.requestTimeout;\n          needToReconnect = true;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          needToReconnect = true;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._alert.danger({\n        message: errorCode,\n        allowDuplicates: false,\n        payload: {\n          statusCode\n        }\n      });\n      this.store.dispatch({\n        type: this.actionTypes.registrationFailed,\n        errorCode,\n        statusCode,\n      });\n      if (['Request Timeout', 'Connection Error'].indexOf(cause) !== -1) {\n        needToReconnect = true;\n      }\n      if (needToReconnect) {\n        this._removeWebphone();\n        this._connect(needToReconnect);\n      }\n    };\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    this._webphone.userAgent.on('registered', onRegistered);\n    this._webphone.userAgent.on('unregistered', onUnregistered);\n    this._webphone.userAgent.on('registrationFailed', onRegistrationFailed);\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n  }\n\n  @proxify\n  async _connect(reconnect = false) {\n    try {\n      if (reconnect) {\n        await this._retrySleep();\n      }\n\n      if (!this._auth.loggedIn) {\n        return;\n      }\n\n      // do not connect if it is connecting\n      if (this.connectionStatus === connectionStatus.connecting) {\n        return;\n      }\n\n      // when reconnect is break by disconnect\n      if (reconnect && this.connectionStatus !== connectionStatus.connectFailed) {\n        this.store.dispatch({\n          type: this.actionTypes.resetRetryCounts,\n        });\n        return;\n      }\n\n      if (this._tabManager && !this._tabManager.active) {\n        await sleep(FIRST_THREE_RETRIES_DELAY);\n        await this._connect(reconnect);\n        return;\n      }\n\n      this.store.dispatch({\n        type: (\n          reconnect ?\n            this.actionTypes.reconnect : this.actionTypes.connect\n        )\n      });\n\n      const sipProvision = await this._sipProvision();\n\n      // do not continue if it is disconnecting\n      if (this.disconnecting) {\n        return;\n      }\n      this._createWebphone(sipProvision);\n    } catch (error) {\n      console.error(error);\n      this._alert.danger({\n        message: webphoneErrors.connectFailed,\n        ttl: 0,\n        allowDuplicates: false,\n      });\n      let needToReconnect = true;\n      let errorCode;\n      if (\n        error && error.message &&\n        (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n      ) {\n        this._rolesAndPermissions.refreshServiceFeatures();\n        needToReconnect = false;\n        errorCode = webphoneErrors.notWebphonePermission;\n      } else {\n        errorCode = webphoneErrors.sipProvisionError;\n      }\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        error,\n      });\n      if (needToReconnect) {\n        await this._connect(needToReconnect);\n      }\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      (\n        this.connectionStatus === connectionStatus.disconnected ||\n        this.connectionStatus === connectionStatus.connectFailed\n      )\n    ) {\n      if (!isBrowserSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this.store.dispatch({\n            type: this.actionTypes.connectError,\n            errorCode: webphoneErrors.notOutboundCallWithoutDL,\n          });\n          this._alert.warning({\n            message: webphoneErrors.notOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.checkDLError,\n        });\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n        });\n      }\n      await this._connect();\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.connectionStatus === connectionStatus.connected ||\n      this.connectionStatus === connectionStatus.connecting ||\n      this.connectionStatus === connectionStatus.connectFailed\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.disconnect,\n      });\n      if (this._webphone) {\n        this._sessions.forEach((session) => {\n          this.hangup(session);\n        });\n        this._removeWebphone();\n        this._sessions = new Map();\n        this._updateSessions();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.unregistered,\n      });\n    }\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (session.__rc_extendedControlStatus === extendedControlStatus.playing) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n      this._updateSessions();\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('hold', () => {\n      console.log('Event: hold');\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n    });\n    session.on('unhold', () => {\n      console.log('Event: unhold');\n      session.__rc_callStatus = sessionStatus.connected;\n      session.__rc_lastActiveTime = Date.now();\n      this._updateSessions();\n    });\n    session.mediaHandler.on('userMediaFailed', () => {\n      this._audioSettings.onGetUserMediaError();\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find(session => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this._onCallStart(sipSession);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      const validatedResult\n        = await this._numberValidate.validateNumbers([forwardNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        return false;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.isOnHold().local) {\n      return true;\n    }\n    try {\n      await session.hold();\n      this._updateSessions();\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  _holdOtherSession(currentSessionId) {\n    this._sessions.forEach((session, sessionId) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.isOnHold().local) {\n        return;\n      }\n      session.hold();\n    });\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.isOnHold().local) {\n        this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      const validatedResult\n        = await this._numberValidate.validateNumbers([transferNumber]);\n      if (!validatedResult.result) {\n        validatedResult.errors.forEach((error) => {\n          this._alert.warning({\n            message: callErrors[error.type],\n            payload: {\n              phoneNumber: error.phoneNumber\n            }\n          });\n        });\n        session.__rc_isOnTransfer = false;\n        this._updateSessions();\n        return;\n      }\n      const validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        media: this.acceptOptions.media\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n  }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.notOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    const session = this._webphone.userAgent.invite(toNumber, {\n      media: this.acceptOptions.media,\n      fromNumber,\n      homeCountryId,\n    });\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._holdOtherSession(session.id);\n    this._onCallStart(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (typeof this._onCallStartFunc === 'function') {\n      this._onCallStartFunc(normalizedSession, this.activeSession);\n    }\n    this._onCallStartFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    if (typeof this._onCallRingFunc === 'function') {\n      this._onCallRingFunc(normalizedSession, this.ringSession);\n    }\n    this._onCallRingFunctions.forEach(\n      handler => handler(normalizedSession, this.ringSession)\n    );\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (typeof this._onBeforeCallEndFunc === 'function') {\n      this._onBeforeCallEndFunc(normalizedSession, this.activeSession);\n    }\n    this._onBeforeCallEndFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (typeof this._onCallEndFunc === 'function') {\n      this._onCallEndFunc(normalizedSession, this.activeSession, this.ringSession);\n    }\n    this._onCallEndFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession, this.ringSession)\n    );\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (typeof this._onBeforeCallResumeFunc === 'function') {\n      this._onBeforeCallResumeFunc(normalizedSession, this.activeSession);\n    }\n    this._onBeforeCallResumeFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (typeof this._onCallResumeFunc === 'function') {\n      this._onCallResumeFunc(normalizedSession, this.activeSession);\n    }\n    this._onCallResumeFunctions.forEach(\n      handler => handler(normalizedSession, this.activeSession)\n    );\n  }\n\n  async _retrySleep() {\n    if (this.connectRetryCounts < 3) {\n      await sleep(FIRST_THREE_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 3) {\n      await sleep(FOURTH_RETRIES_DELAY);\n    }\n    if (this.connectRetryCounts === 4) {\n      await sleep(FIFTH_RETRIES_DELAY); // sleep 30 seconds\n    }\n    if (this.connectRetryCounts > 4) {\n      await sleep(MAX_RETRIES_DELAY); // sleep 30 seconds\n    }\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._onCallStartFunctions.push(handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._onCallRingFunctions.push(handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._onCallEndFunctions.push(handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._onBeforeCallResumeFunctions.push(handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._onCallResumeFunctions.push(handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._onBeforeCallEndFunctions.push(handler);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get cachedSessions() {\n    return this._selectors.cachedSessions();\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      media: {\n        audio: {\n          deviceId: this._audioSettings.inputDeviceId,\n        },\n        video: false,\n        render: {\n          remote: this._remoteVideo,\n          local: this._localVideo,\n        }\n      }\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  @getter\n  ringingCallOnView = createSelector(\n    () => this.ringSessions,\n    sessions => find(\n      session => !session.minimized,\n      sessions,\n    )\n  )\n}\n"]}