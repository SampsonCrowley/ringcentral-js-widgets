{"version":3,"sources":["modules/Conference/index.js"],"names":["DEFAULT_MASK","Conference","deps","dep","optional","alert","client","regionSettings","storage","rolesAndPermissions","options","fetchFunction","mask","account","extension","conferencing","get","_alert","_dialInNumberStorageKey","_additionalNumbersStorageKey","_savedStorageKey","_regionSetting","_rolesAndPermissions","_lastCountryCode","_storage","registerReducer","key","reducer","actionTypes","updateDialInNumber","updateAdditionalNumbers","updateSaveCurrentSettings","data","ready","countryCode","matchedPhoneNumber","phoneNumbers","find","e","country","isoCode","phoneNumber","dialInNumber","allowJoinBeforeHost","_client","put","_store","dispatch","type","fetchSuccess","warning","message","callControlError","generalError","additionalNumbers","_saved","store","inviteWithText","joinAsHost","getItem","permissions","OrganizeConference","DataFetcher","proxify"],"mappings":"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","sourcesContent":["import mask from 'json-mask';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport createSimpleReducer from '../../lib/createSimpleReducer';\nimport callControlError from '../ActiveCallControl/callControlError';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_MASK = 'phoneNumber,hostCode,participantCode,phoneNumbers(country(callingCode,id,isoCode,name),phoneNumber,location),allowJoinBeforeHost';\n\n/**\n * @class\n * @description Conference managing module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'Storage',\n    'RegionSettings',\n    'RolesAndPermissions',\n    { dep: 'ConferenceOptions', optional: true }\n  ]\n})\nexport default class Conference extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {RegionSettings} params.regionSettings - regionSettings module instance\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    alert,\n    client,\n    regionSettings,\n    storage,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      client,\n      fetchFunction: async () => mask(\n        await client.account().extension().conferencing().get(),\n        DEFAULT_MASK,\n      ),\n      storage,\n      ...options,\n    });\n    this._alert = alert;\n    this._dialInNumberStorageKey = 'conferenceDialInNumber';\n    this._additionalNumbersStorageKey = 'conferenceAdditionalNumbers';\n    this._savedStorageKey = 'conferenceSaveCurrentSettings';\n    this._regionSetting = regionSettings;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._lastCountryCode = null;\n    this._storage.registerReducer({\n      key: this._dialInNumberStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateDialInNumber, 'dialInNumber'),\n    });\n    this._storage.registerReducer({\n      key: this._additionalNumbersStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateAdditionalNumbers, 'additionalNumbers'),\n    });\n    this._storage.registerReducer({\n      key: this._savedStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateSaveCurrentSettings, '_saved'),\n    });\n  }\n\n  get _name() {\n    return 'conference';\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  async _onStateChange() {\n    super._onStateChange();\n    if (\n      !this.data ||\n      !this._regionSetting.ready ||\n      this._lastCountryCode === this._regionSetting.countryCode) {\n      return;\n    }\n    this._lastCountryCode = this._regionSetting.countryCode;\n    const matchedPhoneNumber = this.data.phoneNumbers.find(\n      e => e.country.isoCode === this._lastCountryCode\n    );\n    if (matchedPhoneNumber && matchedPhoneNumber.phoneNumber !== this.dialInNumber) {\n      this.updateDialInNumber(matchedPhoneNumber.phoneNumber);\n    }\n  }\n\n  _shouldInit() {\n    return super._shouldInit() && this._rolesAndPermissions.ready && this._alert.ready;\n  }\n\n  @proxify\n  async updateEnableJoinBeforeHost(allowJoinBeforeHost) {\n    try {\n      const data = await this._client.account().extension().conferencing()\n        .put({ allowJoinBeforeHost });\n      this._store.dispatch({ type: this.actionTypes.fetchSuccess, data });\n      return data;\n    } catch (error) {\n      this._alert.warning({\n        message: callControlError.generalError\n      });\n      return null;\n    }\n  }\n\n  @proxify\n  updateDialInNumber(dialInNumber) {\n    this._store.dispatch({ type: this.actionTypes.updateDialInNumber, dialInNumber });\n  }\n\n  @proxify\n  updateAdditionalNumbers(additionalNumbers) {\n    this._store.dispatch({ type: this.actionTypes.updateAdditionalNumbers, additionalNumbers });\n  }\n\n  @proxify\n  updateSaveCurrentSettings(_saved) {\n    this._store.dispatch({ type: this.actionTypes.updateSaveCurrentSettings, _saved });\n  }\n\n  // for track invite with text\n  @proxify\n  onInviteWithText() {\n    this.store.dispatch({\n      type: this.actionTypes.inviteWithText\n    });\n  }\n\n  // for track join as host\n  @proxify\n  onJoinAsHost() {\n    this.store.dispatch({\n      type: this.actionTypes.joinAsHost\n    });\n  }\n\n  get additionalNumbers() {\n    return this._storage.getItem(this._additionalNumbersStorageKey) || [];\n  }\n\n  get _saved() {\n    return this._storage.getItem(this._savedStorageKey) || false;\n  }\n\n  get dialInNumber() {\n    return this._storage.getItem(this._dialInNumberStorageKey) ||\n      (this.data && this.data.phoneNumber);\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.OrganizeConference;\n  }\n}\n"],"file":"index.js"}