{"version":3,"sources":["modules/CallLogSection/index.js"],"names":["CallLogSection","deps","storage","options","actionTypes","_storage","_storageReducer","_storageKey","registerReducer","key","reducer","_reducer","_shouldInit","store","dispatch","type","init","_onInit","initSuccess","_shouldReset","_onReset","resetSuccess","ready","_readyCheckFunction","pending","identify","saveSuccess","args","_onSuccess","saveError","_onError","show","currentIdentify","showLogSection","showNotification","currentNotificationIdentify","showLogNotification","logFunction","readyCheckFunction","onUpdate","onSuccess","onError","_logFunction","ensureExist","_onUpdate","update","callsMapping","isSaving","saving","result","_handleSuccess","_handleError","console","warn","isSameCall","_showLogSection","notificationIsExpand","_showLogNotification","closeLogSection","closeLogNotification","saveCallLog","expandNotification","getItem","callsList","state","callsSavingStatus","status","RcModule","selector","list","mapping","map","_callsMapping","_callsSavingStatus","identity","pick","keys"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqBA,c,WALpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,SADI;AADA,CAAP,C;;;;;AAMC,gCAKE;AAAA;;AAAA,QAHEC,OAGF,QAHEA,OAGF;AAAA,QAFKC,OAEL;;AAAA;;AACA;AAEID,MAAAA,OAAO,EAAPA,OAFJ;AAGIE,MAAAA,WAAW,EAAXA;AAHJ,OAIOD,OAJP;;AADA;;AAAA;;AAQA,UAAKE,QAAL,GAAgBH,OAAhB;AACA,UAAKI,eAAL,GAAuB,mCAAkB,MAAKF,WAAvB,CAAvB;AACA,UAAKG,WAAL,GAAmB,gBAAnB;;AACA,UAAKF,QAAL,CAAcG,eAAd,CAA8B;AAC5BC,MAAAA,GAAG,EAAE,MAAKF,WADkB;AAE5BG,MAAAA,OAAO,EAAE,MAAKJ;AAFc,KAA9B;;AAIA,UAAKK,QAAL,GAAgB,0CAAyB,MAAKP,WAA9B,CAAhB;AAfA;AAgBD;;;;;;;;;;;;qBAGK,KAAKQ,WAAL,E;;;;;AACF,qBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBY;AADL,iBAApB;;sBAGI,OAAO,KAAKC,OAAZ,KAAwB,U;;;;;;uBACpB,KAAKA,OAAL,E;;;AAER,qBAAKJ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBc;AADL,iBAApB;;;;;qBAGS,KAAKC,YAAL,E;;;;;sBACL,OAAO,KAAKC,QAAZ,KAAyB,U;;;;;;uBACrB,KAAKA,QAAL,E;;;AAER,qBAAKP,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBiB;AADL,iBAApB;;;;;;;;;;;;;;;;;;kCAMU;AACZ,aACE,KAAKhB,QAAL,CAAciB,KAAd,IACA,KAAKC,mBAAL,EADA,IAEA,KAAKC,OAHP;AAKD;;;mCAEc;AACb,aACE,CACE,CAAC,KAAKnB,QAAL,CAAciB,KAAf,IACA,CAAC,KAAKC,mBAAL,EAFH,KAGK,KAAKD,KAJZ;AAMD;;;mCAEcG,Q,EAAmB;AAChC,WAAKZ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBsB,WADL;AAElBD,QAAAA,QAAQ,EAARA;AAFkB,OAApB;;AADgC,wCAANE,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAKhC,UAAI,OAAO,KAAKC,UAAZ,KAA2B,UAA/B,EAA2C,KAAKA,UAAL,cAAgBH,QAAhB,SAA6BE,IAA7B;AAC5C;;;iCAEYF,Q,EAAmB;AAC9B,WAAKZ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiByB,SADL;AAElBJ,QAAAA,QAAQ,EAARA;AAFkB,OAApB;;AAD8B,yCAANE,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAK9B,UAAI,OAAO,KAAKG,QAAZ,KAAyB,UAA7B,EAAyC,KAAKA,QAAL,cAAcL,QAAd,SAA2BE,IAA3B;AAC1C;;;oCAEeF,Q,EAAU;AACxB,UAAI,CAAC,KAAKM,IAAN,IAAcN,QAAQ,KAAK,KAAKO,eAApC,EAAqD;AACnD,aAAKnB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiB6B,cADL;AAElBR,UAAAA,QAAQ,EAARA;AAFkB,SAApB;AAID;AACF;;;yCAEoBA,Q,EAAU;AAC7B,UAAI,CAAC,KAAKS,gBAAN,IAA0BT,QAAQ,KAAK,KAAKU,2BAAhD,EAA6E;AAC3E,aAAKtB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBgC,mBADL;AAElBX,UAAAA,QAAQ,EAARA;AAFkB,SAApB;AAID;AACF;;;yCAUC;AAAA,UANEY,WAMF,SANEA,WAMF;AAAA,UALEC,kBAKF,SALEA,kBAKF;AAAA,UAJEC,QAIF,SAJEA,QAIF;AAAA,UAHEC,SAGF,SAHEA,SAGF;AAAA,UAFEC,OAEF,SAFEA,OAEF;AACA,WAAKC,YAAL,GAA2BC,uBAAP,YAAmBN,WAAnB,EAAgC,aAAhC,CAApB;AACA,WAAKd,mBAAL,GAAkCoB,uBAAP,YAAmBL,kBAAnB,EAAuC,oBAAvC,CAA3B;AACA,WAAKM,SAAL,GAAiBL,QAAjB;AACA,WAAKX,UAAL,GAAkBY,SAAlB;AACA,WAAKV,QAAL,GAAgBW,OAAhB;AACD;;;;;;gDAEmBhB,Q;;;;;;;;;;AAClB,qBAAKZ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiByC,MADL;AAElBpB,kBAAAA,QAAQ,EAARA;AAFkB,iBAApB;;4CAD+BE,I;AAAAA,kBAAAA,I;;;;uBAKzB,KAAKiB,SAAL,cAAenB,QAAf,SAA4BE,IAA5B,E;;;;;;;;;;;;;;;;;;;;;gDAGUF,Q;;;;;;;;;;;sBACZA,QAAQ,KACV,CAAC,KAAKqB,YAAL,CAAkBrB,QAAlB,CAAD,IAAgC,CAAC,KAAKqB,YAAL,CAAkBrB,QAAlB,EAA4BsB,QADnD,C;;;;;AAGV,qBAAKlC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,kBAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiB4C,MADL;AAElBvB,kBAAAA,QAAQ,EAARA;AAFkB,iBAApB;;4CAJ2BE,I;AAAAA,kBAAAA,I;;;;;uBASJ,KAAKe,YAAL,cAAkBjB,QAAlB,SAA+BE,IAA/B,E;;;AAAfsB,gBAAAA,M;;AACN,oBAAIA,MAAJ,EAAY;AACV,uBAAKC,cAAL,cAAoBzB,QAApB,SAAiCE,IAAjC;AACD,iBAFD,MAEO;AACL,uBAAKwB,YAAL,cAAkB1B,QAAlB,SAA+BE,IAA/B;AACD;;kDACMsB,M;;;;;;AAEP,qBAAKE,YAAL,cAAkB1B,QAAlB,SAA+BE,IAA/B;;AACAyB,gBAAAA,OAAO,CAACC,IAAR;;;kDAGG,I;;;;;;;;;;;;;;;;;;qCAGQ5B,Q,EAAU;AACzB;AACA,UAAM6B,UAAU,GAAG,KAAKtB,eAAL,KAAyBP,QAA5C;;AACA,UAAI,CAAC,KAAKM,IAAV,EAAgB;AACd;AACA,aAAKwB,eAAL,CAAqB9B,QAArB;AACD,OAHD,MAGO,IAAI,CAAC,KAAK+B,oBAAN,IAA8B,CAACF,UAAnC,EAA+C;AACpD;AACA,aAAKG,oBAAL,CAA0BhC,QAA1B;AACD;AACF;;;sCAEiB;AAChB,UAAI,KAAKM,IAAT,EAAe;AACb,aAAKlB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBsD;AADL,SAApB;AAGD;AACF;;;mDAE8B;AAC7B,UAAMvB,2BAA2B,GAAG,KAAKA,2BAAzC;AACA,WAAKwB,oBAAL;AACA,WAAKD,eAAL;;AACA,WAAKH,eAAL,CAAqBpB,2BAArB;AACD;;;;;;;;;;;;AAGOA,gBAAAA,2B,GAA8B,KAAKA,2B;AACnCH,gBAAAA,e,GAAkB,KAAKA,e;;uBACvB,KAAK4B,WAAL,CAAiB5B,eAAjB,C;;;AACN,qBAAK2B,oBAAL;AACA,qBAAKD,eAAL;;AACA,qBAAKH,eAAL,CAAqBpB,2BAArB;;;;;;;;;;;;;;;;;;2CAGqB;AACrB,UAAI,KAAKD,gBAAT,EAA2B;AACzB,aAAKrB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiBuD;AADL,SAApB;AAGD;AACF;;;4CAEuB;AACtB,UAAI,CAAC,KAAK5B,IAAV,EAAgB;AACd,aAAKwB,eAAL,CAAqB,KAAKpB,2BAA1B;;AACA,aAAKwB,oBAAL;AACD,OAHD,MAGO,IAAI,CAAC,KAAKH,oBAAV,EAAgC;AACrC,aAAK3C,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,KAAKX,WAAL,CAAiByD;AADL,SAApB;AAGD;AACF;;;wBAsBe;AACd,aAAO,KAAKxD,QAAL,CAAcyD,OAAd,CAAsB,KAAKvD,WAA3B,EAAwCwD,SAA/C;AACD;AAED;;;;;;wBAGoB;AAClB,aAAO,KAAK1D,QAAL,CAAcyD,OAAd,CAAsB,KAAKvD,WAA3B,EAAwCuC,YAA/C;AACD;;;wBAEwB;AACvB,aAAO,KAAKkB,KAAL,CAAWC,iBAAlB;AACD;;;wBAEqB;AACpB,aAAO,KAAK5D,QAAL,CAAcyD,OAAd,CAAsB,KAAKvD,WAA3B,EAAwCyB,eAA/C;AACD;;;wBAEU;AACT,aAAO,CAAC,CAAC,KAAKA,eAAd;AACD;;;wBAEiC;AAChC,aAAO,KAAK3B,QAAL,CAAcyD,OAAd,CAAsB,KAAKvD,WAA3B,EAAwC4B,2BAA/C;AACD;;;wBAEsB;AACrB,aAAO,CAAC,CAAC,KAAKA,2BAAd;AACD;;;wBAE0B;AACzB,aAAO,KAAK9B,QAAL,CAAcyD,OAAd,CAAsB,KAAKvD,WAA3B,EAAwCiD,oBAA/C;AACD;;;wBAEY;AACX,aAAO,KAAKQ,KAAL,CAAWE,MAAlB;AACD;;;;EAhQyCC,qB,iFAuMzCC,kB;;;;;;;WACO,CACN;AAAA,aAAM,MAAI,CAACL,SAAX;AAAA,KADM,EAEN;AAAA,aAAM,MAAI,CAACjB,YAAX;AAAA,KAFM,EAGN,UAACuB,IAAD,EAAOC,OAAP;AAAA,aAAmBD,IAAI,CAACE,GAAL,CAAS,UAAA9C,QAAQ;AAAA,eAAI6C,OAAO,CAAC7C,QAAD,CAAX;AAAA,OAAjB,CAAnB;AAAA,KAHM,C;;iFASP2C,kB;;;;;;;WACc,CACb;AAAA,aAAM,MAAI,CAACI,aAAX;AAAA,KADa,EAEb;AAAA,aAAM,MAAI,CAACC,kBAAX;AAAA,KAFa,EAGb,qBACE,sBAAU,iBAAK,kBAAM,UAAN,CAAL,CAAV,CADF,EAEE,CAACC,eAAD,EAAW,oBAAQC,WAAR,EAAc,CAACC,WAAD,EAAOF,eAAP,CAAd,CAAX,CAFF,CAHa,C","sourcesContent":["import {\n  assoc,\n  converge,\n  flip,\n  identity,\n  keys,\n  mergeWith,\n  pick,\n  useWith,\n} from 'ramda';\nimport RcModule from 'ringcentral-integration/lib/RcModule';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\nimport { selector } from 'ringcentral-integration/lib/selector';\nimport getCallLogSectionReducer from './getCallLogSectionReducer';\nimport getStorageReducer from './getStorageReducer';\nimport actionTypes from './actionTypes';\n\n@Module({\n  deps: [\n    'Storage',\n  ]\n})\nexport default class CallLogSection extends RcModule {\n  constructor(\n    {\n      storage,\n      ...options\n    }\n  ) {\n    super(\n      {\n        storage,\n        actionTypes,\n        ...options,\n      }\n    );\n    this._storage = storage;\n    this._storageReducer = getStorageReducer(this.actionTypes);\n    this._storageKey = 'callLogSection';\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: this._storageReducer,\n    });\n    this._reducer = getCallLogSectionReducer(this.actionTypes);\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.init\n      });\n      if (typeof this._onInit === 'function') {\n        await this._onInit();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess\n      });\n    } else if (this._shouldReset()) {\n      if (typeof this._onReset === 'function') {\n        await this._onReset();\n      }\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._storage.ready &&\n      this._readyCheckFunction() &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._storage.ready ||\n        !this._readyCheckFunction()\n      ) && this.ready\n    );\n  }\n\n  _handleSuccess(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.saveSuccess,\n      identify,\n    });\n    if (typeof this._onSuccess === 'function') this._onSuccess(identify, ...args);\n  }\n\n  _handleError(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.saveError,\n      identify,\n    });\n    if (typeof this._onError === 'function') this._onError(identify, ...args);\n  }\n\n  _showLogSection(identify) {\n    if (!this.show || identify !== this.currentIdentify) {\n      this.store.dispatch({\n        type: this.actionTypes.showLogSection,\n        identify\n      });\n    }\n  }\n\n  _showLogNotification(identify) {\n    if (!this.showNotification || identify !== this.currentNotificationIdentify) {\n      this.store.dispatch({\n        type: this.actionTypes.showLogNotification,\n        identify\n      });\n    }\n  }\n\n  addLogHandler(\n    {\n      logFunction,\n      readyCheckFunction,\n      onUpdate,\n      onSuccess,\n      onError\n    }\n  ) {\n    this._logFunction = this:: ensureExist(logFunction, 'logFunction');\n    this._readyCheckFunction = this:: ensureExist(readyCheckFunction, 'readyCheckFunction');\n    this._onUpdate = onUpdate;\n    this._onSuccess = onSuccess;\n    this._onError = onError;\n  }\n\n  async updateCallLog(identify, ...args) {\n    this.store.dispatch({\n      type: this.actionTypes.update,\n      identify,\n    });\n    await this._onUpdate(identify, ...args);\n  }\n\n  async saveCallLog(identify, ...args) {\n    if (identify && (\n      !this.callsMapping[identify] || !this.callsMapping[identify].isSaving\n    )) {\n      this.store.dispatch({\n        type: this.actionTypes.saving,\n        identify,\n      });\n      try {\n        const result = await this._logFunction(identify, ...args);\n        if (result) {\n          this._handleSuccess(identify, ...args);\n        } else {\n          this._handleError(identify, ...args);\n        }\n        return result;\n      } catch (e) {\n        this._handleError(identify, ...args);\n        console.warn(e);\n      }\n    }\n    return null;\n  }\n\n  handleLogSection(identify) {\n    // prevent `isSameCall` for repeat run more time.\n    const isSameCall = this.currentIdentify === identify;\n    if (!this.show) {\n      // Preferentially show call log section.\n      this._showLogSection(identify);\n    } else if (!this.notificationIsExpand && !isSameCall) {\n      // Check it to show log notification when the call log notification isn't expanded.\n      this._showLogNotification(identify);\n    }\n  }\n\n  closeLogSection() {\n    if (this.show) {\n      this.store.dispatch({\n        type: this.actionTypes.closeLogSection\n      });\n    }\n  }\n\n  discardAndHandleNotification() {\n    const currentNotificationIdentify = this.currentNotificationIdentify;\n    this.closeLogNotification();\n    this.closeLogSection();\n    this._showLogSection(currentNotificationIdentify);\n  }\n\n  async saveAndHandleNotification() {\n    const currentNotificationIdentify = this.currentNotificationIdentify;\n    const currentIdentify = this.currentIdentify;\n    await this.saveCallLog(currentIdentify);\n    this.closeLogNotification();\n    this.closeLogSection();\n    this._showLogSection(currentNotificationIdentify);\n  }\n\n  closeLogNotification() {\n    if (this.showNotification) {\n      this.store.dispatch({\n        type: this.actionTypes.closeLogNotification\n      });\n    }\n  }\n\n  expandLogNotification() {\n    if (!this.show) {\n      this._showLogSection(this.currentNotificationIdentify);\n      this.closeLogNotification();\n    } else if (!this.notificationIsExpand) {\n      this.store.dispatch({\n        type: this.actionTypes.expandNotification\n      });\n    }\n  }\n\n  @selector\n  calls = [\n    () => this.callsList,\n    () => this.callsMapping,\n    (list, mapping) => list.map(identify => mapping[identify])\n  ];\n\n  /**\n   * Merge isSaving property from reducer to callsMapping\n   */\n  @selector\n  callsMapping = [\n    () => this._callsMapping,\n    () => this._callsSavingStatus,\n    converge(\n      mergeWith(flip(assoc('isSaving'))),\n      [identity, useWith(pick, [keys, identity])]\n    )\n  ]\n\n  get callsList() {\n    return this._storage.getItem(this._storageKey).callsList;\n  }\n\n  /**\n   * Private calls mapping relationship without isSaving property\n   */\n  get _callsMapping() {\n    return this._storage.getItem(this._storageKey).callsMapping;\n  }\n\n  get _callsSavingStatus() {\n    return this.state.callsSavingStatus;\n  }\n\n  get currentIdentify() {\n    return this._storage.getItem(this._storageKey).currentIdentify;\n  }\n\n  get show() {\n    return !!this.currentIdentify;\n  }\n\n  get currentNotificationIdentify() {\n    return this._storage.getItem(this._storageKey).currentNotificationIdentify;\n  }\n\n  get showNotification() {\n    return !!this.currentNotificationIdentify;\n  }\n\n  get notificationIsExpand() {\n    return this._storage.getItem(this._storageKey).notificationIsExpand;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}