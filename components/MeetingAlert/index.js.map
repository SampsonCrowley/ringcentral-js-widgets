{"version":3,"sources":["components/MeetingAlert/index.js"],"names":["MeetingAlert","message","payload","currentLocale","application","msg","meetingStatus","insufficientPermissions","i18n","getString","permissionName","propTypes","PropTypes","string","isRequired","shape","defaultProps","undefined","handleMessage","emptyTopic","noPassword","scheduledSuccess"],"mappings":";;;;;kBAMwBA,Y;;AANxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,YAAT,OAOZ;AAAA,0BANDC,OAMC;AAAA,MALCA,OAKD,gBALCA,OAKD;AAAA,MAJCC,OAID,gBAJCA,OAID;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,WACC,QADDA,WACC;;AACD,MAAIC,YAAJ;AACA,UAAQJ,OAAR;AACE,SAAKK,wBAAcC,uBAAnB;AACEF,YACE,8BAAC,0BAAD;AACE,iBAASG,eAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CADX;AAEE,gBAAQ;AACNC,kCADM;AAENM,0BAAgBR,QAAQQ;AAFlB,SAFV,GADF;AAQA;AACF;AACEL,YAAMG,eAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CAAN;AACA;AAbJ;AAeA,SACE;AAAA;AAAA;AACGE;AADH,GADF;AAKD;;AAEDL,aAAaW,SAAb,GAAyB;AACvBR,iBAAeS,oBAAUC,MAAV,CAAiBC,UADT;AAEvBb,WAASW,oBAAUG,KAAV,CAAgB;AACvBd,aAASW,oBAAUC,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJoB;AAKvBV,eAAaQ,oBAAUC;AALA,CAAzB;;AAQAb,aAAagB,YAAb,GAA4B;AAC1BZ,eAAaa;AADa,CAA5B;;AAIAjB,aAAakB,aAAb,GAA6B;AAAA,MAAGjB,OAAH,SAAGA,OAAH;AAAA,SAC1BA,YAAYK,wBAAca,UAA3B,IACIlB,YAAYK,wBAAcc,UAD9B,IAEInB,YAAYK,wBAAcC,uBAF9B,IAGIN,YAAYK,wBAAce,gBAJH;AAAA,CAA7B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport meetingStatus from 'ringcentral-integration/modules/Meeting/meetingStatus';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function MeetingAlert({\n  message: {\n    message,\n    payload,\n  },\n  currentLocale,\n  application,\n}) {\n  let msg;\n  switch (message) {\n    case meetingStatus.insufficientPermissions:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{\n            application,\n            permissionName: payload.permissionName,\n          }} />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <span>\n      {msg}\n    </span>\n  );\n}\n\nMeetingAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  application: PropTypes.string,\n};\n\nMeetingAlert.defaultProps = {\n  application: undefined,\n};\n\nMeetingAlert.handleMessage = ({ message }) => (\n  (message === meetingStatus.emptyTopic)\n  || (message === meetingStatus.noPassword)\n  || (message === meetingStatus.insufficientPermissions)\n  || (message === meetingStatus.scheduledSuccess)\n);\n"]}