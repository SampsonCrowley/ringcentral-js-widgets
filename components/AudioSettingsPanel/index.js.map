{"version":3,"sources":["components/AudioSettingsPanel/index.js"],"names":["TooltipCom","Tooltip","AudioSettingsPanel","props","onSave","state","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","inputDeviceId","outputDeviceId","onReset","setState","onDialButtonVolumeChange","onDialButtonMutedChange","onRingtoneVolumeChange","onRingtoneMutedChange","onCallVolumeChange","onOutputDeviceIdChange","device","deviceId","onInputDeviceIdChange","renderDeviceOption","label","i18n","getString","currentLocale","renderOutputDevice","value","availableOutputDevices","renderInputDevice","availableInputDevices","newProps","userMedia","length","checkUserMedia","onBackButtonClick","className","supportDevices","isWebRTC","outputDeviceDisabled","inputDeviceDisabled","hasChanges","permission","outputTooltip","HTMLMediaElement","prototype","setSinkId","offset","outputTooltipContainner","styles","infoIcon","outputDevice","select","renderDeviceValue","tooltipContainner","inputTooltip","isNoLabel","inputTooltipContainner","inputDevice","root","content","Component","devicePropType","PropTypes","string","isRequired","propTypes","number","bool","func","arrayOf","shape","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,OAAOC,qBAAP,KAAmB,UAAnB,GAAgCA,qBAAhC,GAA0CA,gCAA7D;;IAEqBC,kB;;;;;AACnB,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;;AADiB,UAqEnBC,MArEmB,GAqEV,YAAM;AACb,UAAI,OAAO,MAAKD,KAAL,CAAWC,MAAlB,KAA6B,UAAjC,EAA6C;AAAA,0BASvC,MAAKC,KATkC;AAAA,YAEzCC,gBAFyC,eAEzCA,gBAFyC;AAAA,YAGzCC,eAHyC,eAGzCA,eAHyC;AAAA,YAIzCC,cAJyC,eAIzCA,cAJyC;AAAA,YAKzCC,aALyC,eAKzCA,aALyC;AAAA,YAMzCC,UANyC,eAMzCA,UANyC;AAAA,YAOzCC,aAPyC,eAOzCA,aAPyC;AAAA,YAQzCC,cARyC,eAQzCA,cARyC;;AAU3C,cAAKT,KAAL,CAAWC,MAAX,CAAkB;AAChBE,UAAAA,gBAAgB,EAAhBA,gBADgB;AAEhBC,UAAAA,eAAe,EAAfA,eAFgB;AAGhBC,UAAAA,cAAc,EAAdA,cAHgB;AAIhBC,UAAAA,aAAa,EAAbA,aAJgB;AAKhBC,UAAAA,UAAU,EAAVA,UALgB;AAMhBC,UAAAA,aAAa,EAAbA,aANgB;AAOhBC,UAAAA,cAAc,EAAdA;AAPgB,SAAlB;AASD;AACF,KA1FkB;;AAAA,UA4FnBC,OA5FmB,GA4FT,YAAM;AAAA,wBASV,MAAKV,KATK;AAAA,UAEZG,gBAFY,eAEZA,gBAFY;AAAA,UAGZC,eAHY,eAGZA,eAHY;AAAA,UAIZC,cAJY,eAIZA,cAJY;AAAA,UAKZC,aALY,eAKZA,aALY;AAAA,UAMZC,UANY,eAMZA,UANY;AAAA,UAOZC,aAPY,eAOZA,aAPY;AAAA,UAQZC,cARY,eAQZA,cARY;;AAUd,YAAKE,QAAL,CAAc;AACZR,QAAAA,gBAAgB,EAAhBA,gBADY;AAEZC,QAAAA,eAAe,EAAfA,eAFY;AAGZC,QAAAA,cAAc,EAAdA,cAHY;AAIZC,QAAAA,aAAa,EAAbA,aAJY;AAKZC,QAAAA,UAAU,EAAVA,UALY;AAMZC,QAAAA,aAAa,EAAbA,aANY;AAOZC,QAAAA,cAAc,EAAdA;AAPY,OAAd;AASD,KA/GkB;;AAAA,UAiHnBG,wBAjHmB,GAiHQ,UAACT,gBAAD,EAAsB;AAC/C,YAAKQ,QAAL,CAAc;AACZR,QAAAA,gBAAgB,EAAhBA;AADY,OAAd;AAGD,KArHkB;;AAAA,UAuHnBU,uBAvHmB,GAuHO,UAACT,eAAD,EAAqB;AAC7C,YAAKO,QAAL,CAAc;AACZP,QAAAA,eAAe,EAAfA;AADY,OAAd;AAGD,KA3HkB;;AAAA,UA6HnBU,sBA7HmB,GA6HM,UAACT,cAAD,EAAoB;AAC3C,YAAKM,QAAL,CAAc;AACZN,QAAAA,cAAc,EAAdA;AADY,OAAd;AAGD,KAjIkB;;AAAA,UAmInBU,qBAnImB,GAmIK,UAACT,aAAD,EAAmB;AACzC,YAAKK,QAAL,CAAc;AACZL,QAAAA,aAAa,EAAbA;AADY,OAAd;AAGD,KAvIkB;;AAAA,UAyInBU,kBAzImB,GAyIE,UAACT,UAAD,EAAgB;AACnC,YAAKI,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAVA;AADY,OAAd;AAGD,KA7IkB;;AAAA,UA+InBU,sBA/ImB,GA+IM,UAACC,MAAD,EAAY;AACnC,YAAKP,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAES,MAAM,CAACC;AADX,OAAd;AAGD,KAnJkB;;AAAA,UAqJnBC,qBArJmB,GAqJK,UAACF,MAAD,EAAY;AAClC,YAAKP,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAEU,MAAM,CAACC;AADV,OAAd;AAGD,KAzJkB;;AAAA,UA2JnBE,kBA3JmB,GA2JE,UAACH,MAAD,EAAY;AAC/B,aAAOA,MAAM,CAACI,KAAP,IAAgBC,iBAAKC,SAAL,CAAe,SAAf,EAA0B,MAAKxB,KAAL,CAAWyB,aAArC,CAAvB;AACD,KA7JkB;;AAAA,UAmKnBC,kBAnKmB,GAmKE,UAACC,KAAD,EAAW;AAC9B,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAOJ,iBAAKC,SAAL,CAAe,UAAf,EAA2B,MAAKxB,KAAL,CAAWyB,aAAtC,CAAP;AACD;;AACD,UAAMP,MAAM,GAAG,iBACb,UAAAA,MAAM;AAAA,eAAIA,MAAM,CAACC,QAAP,KAAoBQ,KAAxB;AAAA,OADO,EAEb,MAAK3B,KAAL,CAAW4B,sBAFE,CAAf;AAIA,aAAOV,MAAM,IAAIA,MAAM,CAACI,KAAjB,IAA0BC,iBAAKC,SAAL,CAAe,SAAf,EAA0B,MAAKxB,KAAL,CAAWyB,aAArC,CAAjC;AACD,KA5KkB;;AAAA,UA8KnBI,iBA9KmB,GA8KC,UAACF,KAAD,EAAW;AAC7B,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAOJ,iBAAKC,SAAL,CAAe,UAAf,EAA2B,MAAKxB,KAAL,CAAWyB,aAAtC,CAAP;AACD;;AACD,UAAMP,MAAM,GAAG,iBACb,UAAAA,MAAM;AAAA,eAAIA,MAAM,CAACC,QAAP,KAAoBQ,KAAxB;AAAA,OADO,EAEb,MAAK3B,KAAL,CAAW8B,qBAFE,CAAf;AAIA,aAAOZ,MAAM,IAAIA,MAAM,CAACI,KAAjB,IAA0BC,iBAAKC,SAAL,CAAe,SAAf,EAA0B,MAAKxB,KAAL,CAAWyB,aAArC,CAAjC;AACD,KAvLkB;;AAEjB,UAAKvB,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBADb;AAEXC,MAAAA,eAAe,EAAEJ,KAAK,CAACI,eAFZ;AAGXC,MAAAA,cAAc,EAAEL,KAAK,CAACK,cAHX;AAIXC,MAAAA,aAAa,EAAEN,KAAK,CAACM,aAJV;AAKXC,MAAAA,UAAU,EAAEP,KAAK,CAACO,UALP;AAMXC,MAAAA,aAAa,EAAER,KAAK,CAACQ,aANV;AAOXC,MAAAA,cAAc,EAAET,KAAK,CAACS;AAPX,KAAb;AAFiB;AAWlB;;;;8CAEyBsB,Q,EAAU;AAAA;;AAClC,UAAIA,QAAQ,CAAC5B,gBAAT,KAA8B,KAAKH,KAAL,CAAWG,gBAA7C,EAA+D;AAC7D,aAAKQ,QAAL,CAAc;AACZR,UAAAA,gBAAgB,EAAE4B,QAAQ,CAAC5B;AADf,SAAd;AAGD;;AACD,UAAI4B,QAAQ,CAAC3B,eAAT,KAA6B,KAAKJ,KAAL,CAAWI,eAA5C,EAA6D;AAC3D,aAAKO,QAAL,CAAc;AACZP,UAAAA,eAAe,EAAE2B,QAAQ,CAAC3B;AADd,SAAd;AAGD;;AACD,UAAI2B,QAAQ,CAAC1B,cAAT,KAA4B,KAAKL,KAAL,CAAWK,cAA3C,EAA2D;AACzD,aAAKM,QAAL,CAAc;AACZN,UAAAA,cAAc,EAAE0B,QAAQ,CAAC1B;AADb,SAAd;AAGD;;AACD,UAAI0B,QAAQ,CAACzB,aAAT,KAA2B,KAAKN,KAAL,CAAWM,aAA1C,EAAyD;AACvD,aAAKK,QAAL,CAAc;AACZL,UAAAA,aAAa,EAAEyB,QAAQ,CAACzB;AADZ,SAAd;AAGD;;AACD,UAAIyB,QAAQ,CAACxB,UAAT,KAAwB,KAAKP,KAAL,CAAWO,UAAvC,EAAmD;AACjD,aAAKI,QAAL,CAAc;AACZJ,UAAAA,UAAU,EAAEwB,QAAQ,CAACxB;AADT,SAAd;AAGD;;AACD,UAAIwB,QAAQ,CAACvB,aAAT,KAA2B,KAAKR,KAAL,CAAWQ,aAAtC,IAAuD,gBACzD,UAAAU,MAAM;AAAA,eAAIA,MAAM,CAACC,QAAP,KAAoB,MAAI,CAACjB,KAAL,CAAWM,aAAnC;AAAA,OADmD,EAEzDuB,QAAQ,CAACD,qBAFgD,CAA3D,EAGG;AACD,aAAKnB,QAAL,CAAc;AACZH,UAAAA,aAAa,EAAEuB,QAAQ,CAACvB;AADZ,SAAd;AAGD;;AACD,UAAIuB,QAAQ,CAACtB,cAAT,KAA4B,KAAKT,KAAL,CAAWS,cAAvC,IAAyD,gBAC3D,UAAAS,MAAM;AAAA,eAAIA,MAAM,CAACC,QAAP,KAAoB,MAAI,CAACjB,KAAL,CAAWO,cAAnC;AAAA,OADqD,EAE3DsB,QAAQ,CAACH,sBAFkD,CAA7D,EAGG;AACD,aAAKjB,QAAL,CAAc;AACZF,UAAAA,cAAc,EAAEsB,QAAQ,CAACtB;AADb,SAAd;AAGD;AACF;;;wCAEmB;AAClB,UAAI,CAAC,KAAKT,KAAL,CAAWgC,SAAhB,EAA2B;AACzB;AACD;;AACD,UACE,KAAKhC,KAAL,CAAW8B,qBAAX,CAAiCG,MAAjC,GAA0C,CAA1C,IACA,KAAKjC,KAAL,CAAW8B,qBAAX,CAAiC,CAAjC,EAAoCR,KAApC,KAA8C,EAFhD,EAGE;AACA,aAAKtB,KAAL,CAAWkC,cAAX;AACD;AACF;;;sCA4FiBhB,M,EAAQ;AACxB,aAAOA,MAAM,CAACC,QAAd;AACD;;;gCAwBW;AACV,UAAI,KAAKnB,KAAL,CAAW8B,qBAAX,CAAiCG,MAArC,EAA6C;AAC3C,eAAO,KAAKjC,KAAL,CAAW8B,qBAAX,CAAiC,CAAjC,EAAoCR,KAApC,KAA8C,EAArD;AACD;;AACD,aAAO,KAAP;AACD;;;6BAEQ;AAAA;;AAAA,yBAaH,KAAKtB,KAbF;AAAA,UAELyB,aAFK,gBAELA,aAFK;AAAA,UAGLU,iBAHK,gBAGLA,iBAHK;AAAA,UAILC,SAJK,gBAILA,SAJK;AAAA,UAKLR,sBALK,gBAKLA,sBALK;AAAA,UAMLE,qBANK,gBAMLA,qBANK;AAAA,UAOLO,cAPK,gBAOLA,cAPK;AAAA,UAQLL,SARK,gBAQLA,SARK;AAAA,UASLM,QATK,gBASLA,QATK;AAAA,UAULJ,cAVK,gBAULA,cAVK;AAAA,UAWLK,oBAXK,gBAWLA,oBAXK;AAAA,UAYLC,mBAZK,gBAYLA,mBAZK;AAAA,yBAsBH,KAAKtC,KAtBF;AAAA,UAeLC,gBAfK,gBAeLA,gBAfK;AAAA,UAgBLC,eAhBK,gBAgBLA,eAhBK;AAAA,UAiBLC,cAjBK,gBAiBLA,cAjBK;AAAA,UAkBLC,aAlBK,gBAkBLA,aAlBK;AAAA,UAmBLC,UAnBK,gBAmBLA,UAnBK;AAAA,UAoBLE,cApBK,gBAoBLA,cApBK;AAAA,UAqBLD,aArBK,gBAqBLA,aArBK;AAuBP,UAAMiC,UAAU,GACd,KAAKzC,KAAL,CAAWG,gBAAX,KAAgCA,gBAAhC,IACA,KAAKH,KAAL,CAAWI,eAAX,KAA+BA,eAD/B,IAEA,KAAKJ,KAAL,CAAWK,cAAX,KAA8BA,cAF9B,IAGA,KAAKL,KAAL,CAAWM,aAAX,KAA6BA,aAH7B,IAIA,KAAKN,KAAL,CAAWO,UAAX,KAA0BA,UAJ1B,IAKA,KAAKP,KAAL,CAAWQ,aAAX,KAA6BA,aAL7B,IAMA,KAAKR,KAAL,CAAWS,cAAX,KAA8BA,cAPhC,CAvBO,CAiCP;;AACA,UAAMiC,UAAU,GAAG,CAACV,SAAD,GACjB,gCAAC,oBAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EACF,gCAAC,kBAAD;AAAQ,UAAA,OAAO,EAAEE;AAAjB,WACGX,iBAAKC,SAAL,CAAe,oBAAf,CADH;AAHJ,SAOGD,iBAAKC,SAAL,CAAe,wBAAf,CAPH,CADiB,GAUf,IAVJ,CAlCO,CA8CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMmB,aAAa,GAAGC,gBAAgB,CAACC,SAAjB,CAA2BC,SAA3B,GAAuC,IAAvC,GACpB,gCAAC,UAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ;AADH,SAHT;AAME,QAAA,OAAO,EAAExB,iBAAKC,SAAL,CAAe,iBAAf,EAAkCC,aAAlC,CANX;AAOE,QAAA,YAAY,EAAE;AAAK,UAAA,SAAS,EAAC;AAAf,UAPhB;AAQE,QAAA,mBAAmB,EAAE;AAAA,iBAAM,MAAI,CAACuB,uBAAX;AAAA;AARvB,SAUE,gCAAC,gBAAD;AAAU,QAAA,KAAK,EAAE,EAAjB;AAAqB,QAAA,MAAM,EAAE,EAA7B;AAAiC,QAAA,SAAS,EAAEC,mBAAOC;AAAnD,QAVF,CADF;AAcA,UAAMC,YAAY,GAAGd,cAAc,GACjC,gCAAC,sBAAD;AACE,QAAA,KAAK,EACH,8CACGd,iBAAKC,SAAL,CAAe,cAAf,EAA+BC,aAA/B,CADH,EAEGkB,aAFH,CAFJ;AAOE,QAAA,QAAQ;AAPV,SAQE,gCAAC,0BAAD;AACE,QAAA,SAAS,EAAEM,mBAAOG,MADpB;AAEE,QAAA,QAAQ,EAAEb,oBAFZ;AAGE,QAAA,KAAK,EACHX,sBAAsB,CAACK,MAAvB,GAAgCxB,cAAhC,GAAiD,IAJrD;AAME,QAAA,QAAQ,EAAE,KAAKQ,sBANjB;AAOE,QAAA,OAAO,EAAEW,sBAPX;AAQE,QAAA,aAAa,EAAC,MARhB;AASE,QAAA,cAAc,EAAE,KAAKP,kBATvB;AAUE,QAAA,aAAa,EAAE,KAAKgC,iBAVtB;AAWE,QAAA,WAAW,EAAE,KAAK3B,kBAXpB;AAYE,QAAA,YAAY;AAZd,QARF,EAsBE;AACE,QAAA,SAAS,EAAEuB,mBAAOK,iBADpB;AAEE,QAAA,GAAG,EAAE,aAACA,iBAAD,EAAuB;AAC1B,UAAA,MAAI,CAACN,uBAAL,GAA+BM,iBAA/B;AACD;AAJH,QAtBF,CADiC,GA8B/B,IA9BJ;AA+BA,UAAMC,YAAY,GAAG,KAAKC,SAAL,KACnB,gCAAC,UAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,KAAK,EAAE;AACLT,UAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ;AADH,SAHT;AAME,QAAA,OAAO,EAAExB,iBAAKC,SAAL,CAAe,YAAf,EAA6BC,aAA7B,CANX;AAOE,QAAA,YAAY,EAAE;AAAK,UAAA,SAAS,EAAC;AAAf,UAPhB;AAQE,QAAA,mBAAmB,EAAE;AAAA,iBAAM,MAAI,CAACgC,sBAAX;AAAA;AARvB,SAUE,gCAAC,gBAAD;AAAU,QAAA,KAAK,EAAE,EAAjB;AAAqB,QAAA,MAAM,EAAE,EAA7B;AAAiC,QAAA,SAAS,EAAER,mBAAOC;AAAnD,QAVF,CADmB,GAajB,IAbJ;AAcA,UAAMQ,WAAW,GAAGrB,cAAc,GAChC,gCAAC,sBAAD;AACE,QAAA,KAAK,EACH,8CACGd,iBAAKC,SAAL,CAAe,aAAf,EAA8BC,aAA9B,CADH,EAEG8B,YAFH,CAFJ;AAOE,QAAA,QAAQ;AAPV,SAQE,gCAAC,0BAAD;AACE,QAAA,SAAS,EAAEN,mBAAOG,MADpB;AAEE,QAAA,QAAQ,EAAEZ,mBAFZ;AAGE,QAAA,KAAK,EACHV,qBAAqB,CAACG,MAAtB,GAA+BzB,aAA/B,GAA+C,IAJnD;AAME,QAAA,QAAQ,EAAE,KAAKY,qBANjB;AAOE,QAAA,OAAO,EAAEU,qBAPX;AAQE,QAAA,aAAa,EAAC,MARhB;AASE,QAAA,cAAc,EAAE,KAAKT,kBATvB;AAUE,QAAA,aAAa,EAAE,KAAKgC,iBAVtB;AAWE,QAAA,WAAW,EAAE,KAAKxB,iBAXpB;AAYE,QAAA,YAAY;AAZd,QARF,EAsBE;AACE,QAAA,SAAS,EAAEoB,mBAAOK,iBADpB;AAEE,QAAA,GAAG,EAAE,aAACA,iBAAD,EAAuB;AAC1B,UAAA,MAAI,CAACG,sBAAL,GAA8BH,iBAA9B;AACD;AAJH,QAtBF,CADgC,GA8B9B,IA9BJ;AAgCA,aACE;AAAK,QAAA,SAAS,EAAE,4BAAWL,mBAAOU,IAAlB,EAAwBvB,SAAxB;AAAhB,SACE,gCAAC,sBAAD;AAAY,QAAA,WAAW,EAAED;AAAzB,SACGZ,iBAAKC,SAAL,CAAe,OAAf,EAAwBC,aAAxB,CADH,CADF,EAIE,gCAAC,iBAAD;AAAO,QAAA,SAAS,EAAEwB,mBAAOW;AAAzB,SASGT,YATH,EAUGO,WAVH,EAWGhB,UAXH,EAYE,gCAAC,sBAAD;AACE,QAAA,aAAa,EAAEjB,aADjB;AAEE,QAAA,OAAO,EAAE,KAAKxB,MAFhB;AAGE,QAAA,QAAQ,EAAE,CAACwC;AAHb,QAZF,CAJF,CADF;AAyBD;;;;EAlX6CoB,gB;;;AAqXhD,IAAMC,cAAc,GAAG;AACrB3C,EAAAA,QAAQ,EAAE4C,sBAAUC,MAAV,CAAiBC,UADN;AAErB3C,EAAAA,KAAK,EAAEyC,sBAAUC,MAAV,CAAiBC;AAFH,CAAvB;AAKAlE,kBAAkB,CAACmE,SAAnB,GAA+B;AAC7B9B,EAAAA,SAAS,EAAE2B,sBAAUC,MADQ;AAE7BvC,EAAAA,aAAa,EAAEsC,sBAAUC,MAAV,CAAiBC,UAFH;AAG7B9D,EAAAA,gBAAgB,EAAE4D,sBAAUI,MAAV,CAAiBF,UAHN;AAI7B5D,EAAAA,cAAc,EAAE0D,sBAAUI,MAAV,CAAiBF,UAJJ;AAK7B3D,EAAAA,aAAa,EAAEyD,sBAAUK,IAAV,CAAeH,UALD;AAM7B1D,EAAAA,UAAU,EAAEwD,sBAAUI,MAAV,CAAiBF,UANA;AAO7B7D,EAAAA,eAAe,EAAE2D,sBAAUK,IAAV,CAAeH,UAPH;AAQ7B9B,EAAAA,iBAAiB,EAAE4B,sBAAUM,IAAV,CAAeJ,UARL;AAS7BnC,EAAAA,qBAAqB,EAAEiC,sBAAUO,OAAV,CAAkBP,sBAAUQ,KAAV,CAAgBT,cAAhB,CAAlB,EAAmDG,UAT7C;AAU7BzD,EAAAA,aAAa,EAAEuD,sBAAUC,MAAV,CAAiBC,UAVH;AAW7BrC,EAAAA,sBAAsB,EAAEmC,sBAAUO,OAAV,CAAkBP,sBAAUQ,KAAV,CAAgBT,cAAhB,CAAlB,EAAmDG,UAX9C;AAY7BxD,EAAAA,cAAc,EAAEsD,sBAAUC,MAAV,CAAiBC,UAZJ;AAa7B5B,EAAAA,cAAc,EAAE0B,sBAAUK,IAAV,CAAeH,UAbF;AAc7BhE,EAAAA,MAAM,EAAE8D,sBAAUM,IAAV,CAAeJ,UAdM;AAe7BjC,EAAAA,SAAS,EAAE+B,sBAAUK,IAAV,CAAeH,UAfG;AAgB7B3B,EAAAA,QAAQ,EAAEyB,sBAAUK,IAAV,CAAeH,UAhBI;AAiB7B/B,EAAAA,cAAc,EAAE6B,sBAAUM,IAAV,CAAeJ,UAjBF;AAkB7B1B,EAAAA,oBAAoB,EAAEwB,sBAAUK,IAlBH;AAmB7B5B,EAAAA,mBAAmB,EAAEuB,sBAAUK;AAnBF,CAA/B;AAsBArE,kBAAkB,CAACyE,YAAnB,GAAkC;AAChCpC,EAAAA,SAAS,EAAE,IADqB;AAEhCG,EAAAA,oBAAoB,EAAE,KAFU;AAGhCC,EAAAA,mBAAmB,EAAE;AAHW,CAAlC","sourcesContent":["import { all, find } from 'ramda';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\n\nimport InfoIcon from '../../assets/images/Info.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport InputField from '../InputField';\nimport Select from '../DropdownSelect';\nimport Button from '../Button';\nimport SaveButton from '../SaveButton';\nimport IconLine from '../IconLine';\n\nconst TooltipCom = typeof Tooltip === 'function' ? Tooltip : Tooltip.default;\n\nexport default class AudioSettingsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialButtonVolume: props.dialButtonVolume,\n      dialButtonMuted: props.dialButtonMuted,\n      ringtoneVolume: props.ringtoneVolume,\n      ringtoneMuted: props.ringtoneMuted,\n      callVolume: props.callVolume,\n      inputDeviceId: props.inputDeviceId,\n      outputDeviceId: props.outputDeviceId,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.dialButtonVolume !== this.props.dialButtonVolume) {\n      this.setState({\n        dialButtonVolume: newProps.dialButtonVolume,\n      });\n    }\n    if (newProps.dialButtonMuted !== this.props.dialButtonMuted) {\n      this.setState({\n        dialButtonMuted: newProps.dialButtonMuted,\n      });\n    }\n    if (newProps.ringtoneVolume !== this.props.ringtoneVolume) {\n      this.setState({\n        ringtoneVolume: newProps.ringtoneVolume,\n      });\n    }\n    if (newProps.ringtoneMuted !== this.props.ringtoneMuted) {\n      this.setState({\n        ringtoneMuted: newProps.ringtoneMuted,\n      });\n    }\n    if (newProps.callVolume !== this.props.callVolume) {\n      this.setState({\n        callVolume: newProps.callVolume,\n      });\n    }\n    if (newProps.inputDeviceId !== this.props.inputDeviceId || all(\n      device => device.deviceId !== this.state.inputDeviceId,\n      newProps.availableInputDevices\n    )) {\n      this.setState({\n        inputDeviceId: newProps.inputDeviceId,\n      });\n    }\n    if (newProps.outputDeviceId !== this.props.outputDeviceId || all(\n      device => device.deviceId !== this.state.outputDeviceId,\n      newProps.availableOutputDevices\n    )) {\n      this.setState({\n        outputDeviceId: newProps.outputDeviceId,\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.userMedia) {\n      return;\n    }\n    if (\n      this.props.availableInputDevices.length > 0 &&\n      this.props.availableInputDevices[0].label === ''\n    ) {\n      this.props.checkUserMedia();\n    }\n  }\n\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const {\n        dialButtonVolume,\n        dialButtonMuted,\n        ringtoneVolume,\n        ringtoneMuted,\n        callVolume,\n        inputDeviceId,\n        outputDeviceId,\n      } = this.state;\n      this.props.onSave({\n        dialButtonVolume,\n        dialButtonMuted,\n        ringtoneVolume,\n        ringtoneMuted,\n        callVolume,\n        inputDeviceId,\n        outputDeviceId,\n      });\n    }\n  }\n\n  onReset = () => {\n    const {\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      inputDeviceId,\n      outputDeviceId,\n    } = this.props;\n    this.setState({\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      inputDeviceId,\n      outputDeviceId,\n    });\n  }\n\n  onDialButtonVolumeChange = (dialButtonVolume) => {\n    this.setState({\n      dialButtonVolume,\n    });\n  }\n\n  onDialButtonMutedChange = (dialButtonMuted) => {\n    this.setState({\n      dialButtonMuted,\n    });\n  }\n\n  onRingtoneVolumeChange = (ringtoneVolume) => {\n    this.setState({\n      ringtoneVolume,\n    });\n  }\n\n  onRingtoneMutedChange = (ringtoneMuted) => {\n    this.setState({\n      ringtoneMuted,\n    });\n  }\n\n  onCallVolumeChange = (callVolume) => {\n    this.setState({\n      callVolume,\n    });\n  }\n\n  onOutputDeviceIdChange = (device) => {\n    this.setState({\n      outputDeviceId: device.deviceId,\n    });\n  }\n\n  onInputDeviceIdChange = (device) => {\n    this.setState({\n      inputDeviceId: device.deviceId,\n    });\n  }\n\n  renderDeviceOption = (device) => {\n    return device.label || i18n.getString('noLabel', this.props.currentLocale);\n  }\n\n  renderDeviceValue(device) {\n    return device.deviceId;\n  }\n\n  renderOutputDevice = (value) => {\n    if (value === null) {\n      return i18n.getString('noDevice', this.props.currentLocale);\n    }\n    const device = find(\n      device => device.deviceId === value,\n      this.props.availableOutputDevices\n    );\n    return device && device.label || i18n.getString('noLabel', this.props.currentLocale);\n  }\n\n  renderInputDevice = (value) => {\n    if (value === null) {\n      return i18n.getString('noDevice', this.props.currentLocale);\n    }\n    const device = find(\n      device => device.deviceId === value,\n      this.props.availableInputDevices\n    );\n    return device && device.label || i18n.getString('noLabel', this.props.currentLocale);\n  }\n\n  isNoLabel() {\n    if (this.props.availableInputDevices.length) {\n      return this.props.availableInputDevices[0].label === '';\n    }\n    return false;\n  }\n\n  render() {\n    const {\n      currentLocale,\n      onBackButtonClick,\n      className,\n      availableOutputDevices,\n      availableInputDevices,\n      supportDevices,\n      userMedia,\n      isWebRTC,\n      checkUserMedia,\n      outputDeviceDisabled,\n      inputDeviceDisabled,\n    } = this.props;\n    const {\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    } = this.state;\n    const hasChanges = (\n      this.props.dialButtonVolume !== dialButtonVolume ||\n      this.props.dialButtonMuted !== dialButtonMuted ||\n      this.props.ringtoneVolume !== ringtoneVolume ||\n      this.props.ringtoneMuted !== ringtoneMuted ||\n      this.props.callVolume !== callVolume ||\n      this.props.inputDeviceId !== inputDeviceId ||\n      this.props.outputDeviceId !== outputDeviceId\n    );\n\n    // TODO: improve UI\n    const permission = !userMedia ? (\n      <IconLine\n        noBorder\n        icon={\n          <Button onClick={checkUserMedia}>\n            {i18n.getString('checkMicPermission')}\n          </Button>\n        }>\n        {i18n.getString('micNoPermissionMessage')}\n      </IconLine>\n    ) : null;\n\n    // const webphoneVolume = isWebRTC ?\n    //   (\n    //     <div>\n    //       <InputField\n    //         label={i18n.getString('ringtoneVolume', currentLocale)}\n    //     >\n    //         {`${ringtoneVolume * 100}%`}\n    //       </InputField>\n    //       <InputField\n    //         label={i18n.getString('callVolume', currentLocale)}\n    //     >\n    //         {`${callVolume * 100}%`}\n    //       </InputField>\n    //     </div>\n    //   ) : null;\n    const outputTooltip = HTMLMediaElement.prototype.setSinkId ? null : (\n      <TooltipCom\n        placement=\"bottom\"\n        trigger=\"click\"\n        align={{\n          offset: [0, 47],\n        }}\n        overlay={i18n.getString('notSetSinkIdTip', currentLocale)}\n        arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n        getTooltipContainer={() => this.outputTooltipContainner}\n      >\n        <InfoIcon width={14} height={14} className={styles.infoIcon} />\n      </TooltipCom>\n    );\n    const outputDevice = supportDevices ? (\n      <InputField\n        label={(\n          <span>\n            {i18n.getString('outputDevice', currentLocale)}\n            {outputTooltip}\n          </span>\n        )}\n        noBorder>\n        <Select\n          className={styles.select}\n          disabled={outputDeviceDisabled}\n          value={\n            availableOutputDevices.length ? outputDeviceId : null\n          }\n          onChange={this.onOutputDeviceIdChange}\n          options={availableOutputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderOutputDevice}\n          titleEnabled\n        />\n        <div\n          className={styles.tooltipContainner}\n          ref={(tooltipContainner) => {\n            this.outputTooltipContainner = tooltipContainner;\n          }}\n        />\n      </InputField>\n    ) : null;\n    const inputTooltip = this.isNoLabel() ? (\n      <TooltipCom\n        placement=\"bottom\"\n        trigger=\"click\"\n        align={{\n          offset: [0, 47],\n        }}\n        overlay={i18n.getString('noLabelTip', currentLocale)}\n        arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n        getTooltipContainer={() => this.inputTooltipContainner}\n      >\n        <InfoIcon width={14} height={14} className={styles.infoIcon} />\n      </TooltipCom>\n    ) : null;\n    const inputDevice = supportDevices ? (\n      <InputField\n        label={(\n          <span>\n            {i18n.getString('inputDevice', currentLocale)}\n            {inputTooltip}\n          </span>\n        )}\n        noBorder>\n        <Select\n          className={styles.select}\n          disabled={inputDeviceDisabled}\n          value={\n            availableInputDevices.length ? inputDeviceId : null\n          }\n          onChange={this.onInputDeviceIdChange}\n          options={availableInputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderInputDevice}\n          titleEnabled\n        />\n        <div\n          className={styles.tooltipContainner}\n          ref={(tooltipContainner) => {\n            this.inputTooltipContainner = tooltipContainner;\n          }}\n        />\n      </InputField>\n    ) : null;\n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <BackHeader onBackClick={onBackButtonClick}>\n          {i18n.getString('title', currentLocale)}\n        </BackHeader>\n        <Panel className={styles.content}>\n          {\n            // <InputField\n            //   label={i18n.getString('dialButtonVolume', currentLocale)}\n            // >\n            //   {`${dialButtonVolume * 100}%`}\n            // </InputField>\n            // webphoneVolume\n          }\n          {outputDevice}\n          {inputDevice}\n          {permission}\n          <SaveButton\n            currentLocale={currentLocale}\n            onClick={this.onSave}\n            disabled={!hasChanges}\n          />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst devicePropType = {\n  deviceId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nAudioSettingsPanel.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  dialButtonVolume: PropTypes.number.isRequired,\n  ringtoneVolume: PropTypes.number.isRequired,\n  ringtoneMuted: PropTypes.bool.isRequired,\n  callVolume: PropTypes.number.isRequired,\n  dialButtonMuted: PropTypes.bool.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  availableInputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\n  inputDeviceId: PropTypes.string.isRequired,\n  availableOutputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\n  outputDeviceId: PropTypes.string.isRequired,\n  supportDevices: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  userMedia: PropTypes.bool.isRequired,\n  isWebRTC: PropTypes.bool.isRequired,\n  checkUserMedia: PropTypes.func.isRequired,\n  outputDeviceDisabled: PropTypes.bool,\n  inputDeviceDisabled: PropTypes.bool,\n};\n\nAudioSettingsPanel.defaultProps = {\n  className: null,\n  outputDeviceDisabled: false,\n  inputDeviceDisabled: false,\n};\n"],"file":"index.js"}