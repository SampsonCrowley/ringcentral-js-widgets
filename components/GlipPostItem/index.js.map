{"version":3,"sources":["components/GlipPostItem/index.js"],"names":["GlipPost","PostAvatar","creator","viewProfile","defaultAvatar","id","avatar","propTypes","PropTypes","object","func","isRequired","defaultProps","PostName","showName","styles","name","firstName","lastName","bool","PostStatus","sendStatus","status","creating","string","PostTime","creationTime","time","post","className","atRender","addedPersons","type","addedPersonIds","map","peronName","root","content","title","undefined"],"mappings":";;;;;kBA6FwBA,Q;;AA7FxB;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;AAEA,SAASC,UAAT,OAA8C;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAC5C,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,uCAAK,KAAKE,wBAAV,EAAyB,KAAI,gBAA7B,GADF;AAGD;AACD,SACE;AACE,aAAS;AAAA,aAAMD,YAAYD,QAAQG,EAApB,CAAN;AAAA,KADX;AAEE,SAAKH,QAAQI,MAAR,IAAkBF,wBAFzB;AAGE,SAAKF,QAAQG;AAHf,IADF;AAOD;;AAEDJ,WAAWM,SAAX,GAAuB;AACrBL,WAASM,oBAAUC,MADE;AAErBN,eAAaK,oBAAUE,IAAV,CAAeC;AAFP,CAAvB;;AAKAV,WAAWW,YAAX,GAA0B;AACxBV,WAAS;AADe,CAA1B;;AAIA,SAASW,QAAT,QAAsD;AAAA,MAAlCX,OAAkC,SAAlCA,OAAkC;AAAA,MAAzBY,QAAyB,SAAzBA,QAAyB;AAAA,MAAfX,WAAe,SAAfA,WAAe;;AACpD,MAAI,CAACD,OAAD,IAAY,CAACY,QAAjB,EAA2B;AACzB,WAAO,IAAP;AACD;AACD,SACE;AAAA;AAAA,MAAM,WAAWC,iBAAOC,IAAxB,EAA8B,SAAS;AAAA,eAAMb,YAAYD,QAAQG,EAApB,CAAN;AAAA,OAAvC;AACGH,YAAQe,SADX;AAAA;AACuBf,YAAQgB;AAD/B,GADF;AAKD;;AAEDL,SAASN,SAAT,GAAqB;AACnBL,WAASM,oBAAUC,MADA;AAEnBN,eAAaK,oBAAUE,IAAV,CAAeC,UAFT;AAGnBG,YAAUN,oBAAUW,IAAV,CAAeR;AAHN,CAArB;;AAMAE,SAASD,YAAT,GAAwB;AACtBV,WAAS;AADa,CAAxB;;AAIA,SAASkB,UAAT,QAAoC;AAAA,MAAdC,UAAc,SAAdA,UAAc;;AAClC,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;AACD,SACE;AAAA;AAAA;AAAA;AACIA,mBAAeC,iBAAOC,QAAtB,GAAiC,SAAjC,GAA6C,aADjD;AAAA;AAAA,GADF;AAKD;;AAEDH,WAAWb,SAAX,GAAuB;AACrBc,cAAYb,oBAAUgB;AADD,CAAvB;;AAIAJ,WAAWR,YAAX,GAA0B;AACxBS,cAAY;AADY,CAA1B;;AAIA,SAASI,QAAT,QAAoC;AAAA,MAAhBC,YAAgB,SAAhBA,YAAgB;;AAClC,MAAI,CAACA,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;AACD,SACE;AAAA;AAAA,MAAK,WAAWX,iBAAOY,IAAvB;AACGD;AADH,GADF;AAKD;;AAEDD,SAASlB,SAAT,GAAqB;AACnBmB,gBAAclB,oBAAUgB;AADL,CAArB;;AAIAC,SAASb,YAAT,GAAwB;AACtBc,gBAAc;AADQ,CAAxB;;AAIe,SAAS1B,QAAT,QAOZ;AAAA,MAND4B,IAMC,SANDA,IAMC;AAAA,MALDC,SAKC,SALDA,SAKC;AAAA,MAJDH,YAIC,SAJDA,YAIC;AAAA,MAHDZ,QAGC,SAHDA,QAGC;AAAA,MAFDgB,QAEC,SAFDA,QAEC;AAAA,MADD3B,WACC,SADDA,WACC;;AACD,MAAI4B,eAAe,IAAnB;AACA,MAAIH,KAAKI,IAAL,KAAc,cAAlB,EAAkC;AAChCD,mBAAeH,KAAKK,cAAL,IAAuBL,KAAKK,cAAL,CAAoBC,GAApB,CAAwB,UAAC7B,EAAD,EAAQ;AACpE,UAAM8B,YAAYL,SAAS,EAAEzB,MAAF,EAAM2B,MAAM,QAAZ,EAAT,CAAlB;AACA,aACE;AAAA;AAAA,UAAM,KAAK3B,EAAX;AAAgB8B;AAAhB,OADF;AAGD,KALqC,CAAtC;AAMD;AACD,SACE;AAAA;AAAA;AACE,iBAAW,0BACTpB,iBAAOqB,IADE,EAETP,SAFS;AADb;AAME,kCAAC,QAAD;AACE,oBAAcH;AADhB,MANF;AASE;AAAA;AAAA,QAAK,WAAWX,iBAAOT,MAAvB;AACE,oCAAC,UAAD,IAAY,SAASsB,KAAK1B,OAA1B,EAAmC,aAAaC,WAAhD;AADF,KATF;AAYE;AAAA;AAAA,QAAK,WAAWY,iBAAOsB,OAAvB;AACE;AAAA;AAAA,UAAK,WAAWtB,iBAAOuB,KAAvB;AACE,sCAAC,QAAD;AACE,mBAASV,KAAK1B,OADhB;AAEE,oBAAUY,YAAYc,KAAKI,IAAL,KAAc,aAFtC;AAGE,uBAAa7B;AAHf,UADF;AAMIyB,aAAKI,IAAL,KAAc,cAAd,GAA+B,iBAA/B,GAAmD,IANvD;AAOIJ,aAAKI,IAAL,KAAc,cAAd,GAA+B,QAA/B,GAA0C,IAP9C;AAQID,oBARJ;AASIH,aAAKI,IAAL,KAAc,cAAd,GAA+B,aAA/B,GAA+C,IATnD;AAUE,sCAAC,UAAD,IAAY,YAAYJ,KAAKP,UAA7B;AAVF,OADF;AAcIO,WAAKI,IAAL,KAAc,aAAd,GAA8B,8BAAC,yBAAD,IAAiB,MAAMJ,IAAvB,EAA6B,UAAUE,QAAvC,GAA9B,GAAoF;AAdxF;AAZF,GADF;AAgCD;;AAED9B,SAASO,SAAT,GAAqB;AACnBsB,aAAWrB,oBAAUgB,MADF;AAEnBI,QAAMpB,oBAAUC,MAFG;AAGnBiB,gBAAclB,oBAAUgB,MAHL;AAInBV,YAAUN,oBAAUW,IAJD;AAKnBW,YAAUtB,oBAAUE,IALD;AAMnBP,eAAaK,oBAAUE,IAAV,CAAeC;AANT,CAArB;;AASAX,SAASY,YAAT,GAAwB;AACtBiB,aAAWU,SADW;AAEtBb,gBAAca,SAFQ;AAGtBX,QAAM,EAHgB;AAItBd,YAAU,IAJY;AAKtBgB,YAAUS;AALY,CAAxB","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport status from 'ringcentral-integration/modules/GlipPosts/status';\n\nimport defaultAvatar from '../../assets/images/default_avatar.png';\nimport styles from './styles.scss';\n\nimport GlipPostContent from '../GlipPostContent';\n\nfunction PostAvatar({ creator, viewProfile }) {\n  if (!creator) {\n    return (\n      <img src={defaultAvatar} alt=\"default avatar\" />\n    );\n  }\n  return (\n    <img\n      onClick={() => viewProfile(creator.id)}\n      src={creator.avatar || defaultAvatar}\n      alt={creator.id}\n    />\n  );\n}\n\nPostAvatar.propTypes = {\n  creator: PropTypes.object,\n  viewProfile: PropTypes.func.isRequired,\n};\n\nPostAvatar.defaultProps = {\n  creator: null,\n};\n\nfunction PostName({ creator, showName, viewProfile }) {\n  if (!creator || !showName) {\n    return null;\n  }\n  return (\n    <span className={styles.name} onClick={() => viewProfile(creator.id)}>\n      {creator.firstName} {creator.lastName}\n    </span>\n  );\n}\n\nPostName.propTypes = {\n  creator: PropTypes.object,\n  viewProfile: PropTypes.func.isRequired,\n  showName: PropTypes.bool.isRequired,\n};\n\nPostName.defaultProps = {\n  creator: null,\n};\n\nfunction PostStatus({ sendStatus }) {\n  if (!sendStatus) {\n    return null;\n  }\n  return (\n    <span>\n      ({sendStatus === status.creating ? 'Sending' : 'Send failed'})\n    </span>\n  );\n}\n\nPostStatus.propTypes = {\n  sendStatus: PropTypes.string,\n};\n\nPostStatus.defaultProps = {\n  sendStatus: null,\n};\n\nfunction PostTime({ creationTime }) {\n  if (!creationTime) {\n    return null;\n  }\n  return (\n    <div className={styles.time}>\n      {creationTime}\n    </div>\n  );\n}\n\nPostTime.propTypes = {\n  creationTime: PropTypes.string,\n};\n\nPostTime.defaultProps = {\n  creationTime: null,\n};\n\nexport default function GlipPost({\n  post,\n  className,\n  creationTime,\n  showName,\n  atRender,\n  viewProfile,\n}) {\n  let addedPersons = null;\n  if (post.type === 'PersonsAdded') {\n    addedPersons = post.addedPersonIds && post.addedPersonIds.map((id) => {\n      const peronName = atRender({ id, type: 'Person' });\n      return (\n        <span key={id}>{peronName}</span>\n      );\n    });\n  }\n  return (\n    <div\n      className={classnames(\n        styles.root,\n        className,\n      )}\n    >\n      <PostTime\n        creationTime={creationTime}\n      />\n      <div className={styles.avatar}>\n        <PostAvatar creator={post.creator} viewProfile={viewProfile} />\n      </div>\n      <div className={styles.content}>\n        <div className={styles.title}>\n          <PostName\n            creator={post.creator}\n            showName={showName || post.type !== 'TextMessage'}\n            viewProfile={viewProfile}\n          />\n          { post.type === 'PersonJoined' ? 'joined the team' : null }\n          { post.type === 'PersonsAdded' ? 'added ' : null }\n          { addedPersons }\n          { post.type === 'PersonsAdded' ? 'to the team' : null }\n          <PostStatus sendStatus={post.sendStatus} />\n        </div>\n        {\n          post.type === 'TextMessage' ? <GlipPostContent post={post} atRender={atRender} /> : null\n        }\n      </div>\n    </div>\n  );\n}\n\nGlipPost.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object,\n  creationTime: PropTypes.string,\n  showName: PropTypes.bool,\n  atRender: PropTypes.func,\n  viewProfile: PropTypes.func.isRequired,\n};\n\nGlipPost.defaultProps = {\n  className: undefined,\n  creationTime: undefined,\n  post: {},\n  showName: true,\n  atRender: undefined,\n};\n"]}