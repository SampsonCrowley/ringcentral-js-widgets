{"version":3,"sources":["components/GlipChatForm/index.js"],"names":["isOnMobileDevice","navigator","userAgent","match","GlipChatForm","props","state","defaultValue","textValue","suggestions","_onInputChange","editorState","setState","onTextChange","mentions","map","mention","email","replace","member","members","find","m","matcherId","id","_onSearchChange","value","filter","search","toLowerCase","name","firstName","lastName","indexOf","_getSuggestions","_onSubmit","e","onSubmit","preventDefault","_onTextAreaKeyDown","key","shiftKey","ctrlKey","altKey","_onSelectEmoji","emoji","newText","setTimeout","_metionInput","reset","_onSelectFile","file","target","files","reader","FileReader","onloadend","evt","readyState","DONE","onUploadFile","result","readAsArrayBuffer","_autoFocus","nextProps","groupId","prevProps","length","height","suggestion","_editor","focusEditor","className","placeholder","styles","root","tools","emojisTooltip","width","emojiIcon","uploadIcon","lineHeight","mentionInput","input","submit","Component","propTypes","PropTypes","string","func","isRequired","array","number","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\nimport 'rc-editor-mention/assets/index.css';\nimport Mention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\n\nimport EmojiSelect from '../EmojiSelect';\n\nimport emojiIcon from '../../assets/images/emoji.png';\nimport uploadIcon from '../../assets/images/upload.png';\nimport styles from './styles.scss';\n\nfunction isOnMobileDevice() {\n  if (typeof navigator !== 'undefined') {\n    return (\n      navigator.userAgent.match(/Android/i) ||\n      navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i)\n    );\n  }\n  return false;\n}\n\nexport default class GlipChatForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultValue: toEditorState(props.textValue),\n      suggestions: [],\n    };\n    this._onInputChange = (editorState) => {\n      this.setState({\n        defaultValue: editorState\n      });\n      if (typeof this.props.onTextChange === 'function') {\n        const mentions = getMentions(editorState).map((mention) => {\n          const email = mention.replace('@[', '').replace(']', '');\n          const member = this.props.members.find(m => m.email === email);\n          return {\n            mention,\n            matcherId: (member && member.id),\n          };\n        });\n        this.props.onTextChange(toString(editorState), mentions);\n      }\n    };\n\n    this._onSearchChange = (value) => {\n      const members = this.props.members.filter((m) => {\n        const search = value && value.toLowerCase();\n        if (!search) {\n          return true;\n        }\n        const name = `${m.firstName} ${m.lastName}`.toLowerCase();\n        if (name.indexOf(search) > -1) {\n          return true;\n        }\n        if (m.email && m.email.indexOf(search) > -1) {\n          return true;\n        }\n        return false;\n      });\n      const suggestions = this._getSuggestions(members);\n      this.setState({\n        suggestions,\n      });\n    };\n\n    this._onSubmit = (e) => {\n      this.props.onSubmit();\n      e.preventDefault();\n    };\n\n    this._onTextAreaKeyDown = (e) => {\n      if (\n        e.key === 'Enter' &&\n        !e.shiftKey &&\n        !e.ctrlKey &&\n        !e.altKey\n      ) {\n        this.props.onSubmit();\n        e.preventDefault();\n      }\n    };\n\n    this._onSelectEmoji = (emoji) => {\n      const newText = this.props.textValue ? `${this.props.textValue} ${emoji} ` : `${emoji} `;\n      if (typeof this.props.onTextChange === 'function') {\n        this.props.onTextChange(newText);\n      }\n      this.setState({\n        defaultValue: toEditorState(newText),\n      });\n      setTimeout(() => {\n        if (this._metionInput) {\n          this._metionInput.reset();\n        }\n      }, 10);\n    };\n\n    this._onSelectFile = (e) => {\n      const file = e.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onloadend = (evt) => {\n        if (evt.target.readyState === FileReader.DONE) {\n          this.props.onUploadFile(file.name, evt.target.result);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    };\n  }\n\n  componentDidMount() {\n    this._autoFocus();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.members !== nextProps.members) {\n      const suggestions = this._getSuggestions(nextProps.members);\n      this.setState({\n        suggestions,\n      });\n    }\n    if (\n      nextProps.groupId !== this.props.groupId\n    ) {\n      const suggestions = this._getSuggestions(nextProps.members);\n      this.setState({\n        suggestions,\n        defaultValue: toEditorState(nextProps.textValue)\n      });\n    }\n    if (this.props.textValue !== nextProps.textValue) {\n      this.setState({\n        defaultValue: toEditorState(nextProps.textValue)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.groupId !== this.props.groupId\n    ) {\n      this._autoFocus();\n      if (this._metionInput) {\n        this._metionInput.reset();\n      }\n    }\n    if (this.props.textValue.length === 0 && prevProps.textValue.length > 0) {\n      if (this._metionInput) {\n        this._metionInput.reset();\n      }\n    }\n  }\n\n  _getSuggestions(suggestions) {\n    return suggestions.map(\n      suggestion => (\n        <Nav style={{ height: 34 }} value={`[${suggestion.email}]`} key={suggestion.id} >\n          <span>{suggestion.firstName} {suggestion.lastName}</span>\n        </Nav>\n      )\n    );\n  }\n\n  _autoFocus() {\n    if (isOnMobileDevice()) {\n      return;\n    }\n    if (this._metionInput) {\n      this._metionInput._editor.focusEditor();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      placeholder,\n      height,\n    } = this.props;\n\n    return (\n      <div className={classnames(styles.root, className)} style={{ height }} >\n        <div className={styles.tools}>\n          <Tooltip\n            placement=\"top\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            overlayClassName={styles.emojisTooltip}\n            overlay={(\n              <div style={{ width: 250, height: 200 }}>\n                <EmojiSelect onSelect={this._onSelectEmoji} />\n              </div>\n            )}\n          >\n            <img alt=\"emoji\" src={emojiIcon} className={styles.emoji} />\n          </Tooltip>\n          <label className={styles.file}>\n            <img alt=\"emoji\" src={uploadIcon} />\n            <input type=\"file\" onChange={this._onSelectFile} />\n          </label>\n        </div>\n        <form onSubmit={this._onSubmit}>\n          <Mention\n            style={{ width: '100%', height: (height - 35), lineHeight: '18px' }}\n            className={styles.mentionInput}\n            ref={(input) => { this._metionInput = input; }}\n            placeholder={placeholder}\n            placement=\"bottom\"\n            defaultValue={this.state.defaultValue}\n            onChange={this._onInputChange}\n            onSearchChange={this._onSearchChange}\n            suggestions={this.state.suggestions}\n            prefix=\"@\"\n            notFoundContent=\"No found.\"\n            multiLines\n            mode=\"immutable\"\n            onKeyDown={this._onTextAreaKeyDown}\n          />\n          <input type=\"submit\" className={styles.submit} />\n        </form>\n      </div>\n    );\n  }\n}\n\nGlipChatForm.propTypes = {\n  textValue: PropTypes.string,\n  className: PropTypes.string,\n  onTextChange: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  onUploadFile: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  groupId: PropTypes.string,\n  members: PropTypes.array,\n  height: PropTypes.number,\n};\n\nGlipChatForm.defaultProps = {\n  className: undefined,\n  textValue: '',\n  onTextChange: undefined,\n  placeholder: undefined,\n  groupId: undefined,\n  members: [],\n  height: 120\n};\n"]}