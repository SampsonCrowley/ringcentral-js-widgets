{"version":3,"sources":["lib/DataFetcher/getDataFetcherReducer.js"],"names":["createGetDataReducer","cleanOnReset","types","state","type","data","hasPermission","fetchSuccess","initSuccess","resetSuccess","createGetTimestampReducer","timestamp","getRetryCountReducer","init","reset","retry","getDataFetcherReducer","reducers","status","retryCount"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEO,SAASA,oBAAT,CAA8BC,YAA9B,EAA4C;AACjD,SAAO,UAAAC,KAAK;AAAA,WACV,YAIM;AAAA,UAJLC,KAIK,uEAJG,IAIH;;AAAA;AAAA,UAHJC,IAGI,QAHJA,IAGI;AAAA,UAFJC,IAEI,QAFJA,IAEI;AAAA,oCADJC,aACI;AAAA,UADJA,aACI,mCADY,IACZ;;AACJ,cAAQF,IAAR;AACE,aAAKF,KAAK,CAACK,YAAX;AACE,iBAAOF,IAAP;;AACF,aAAKH,KAAK,CAACM,WAAX;AACE,cAAIF,aAAJ,EAAmB;AACjB,mBAAOH,KAAP;AACD;;AACD,iBAAO,IAAP;;AACF,aAAKD,KAAK,CAACO,YAAX;AACE,cAAIR,YAAJ,EAAkB;AAChB,mBAAO,IAAP;AACD;;AACD,iBAAOE,KAAP;;AACF;AACE,iBAAOA,KAAP;AAdJ;AAgBD,KAtBS;AAAA,GAAZ;AAwBD;;AAEM,SAASO,yBAAT,CAAmCT,YAAnC,EAAiD;AACtD,SAAO,UAAAC,KAAK;AAAA,WACV,YAAuC;AAAA,UAAtCC,KAAsC,uEAA9B,IAA8B;;AAAA;AAAA,UAAtBC,IAAsB,SAAtBA,IAAsB;AAAA,UAAhBO,SAAgB,SAAhBA,SAAgB;;AACrC,cAAQP,IAAR;AACE,aAAKF,KAAK,CAACK,YAAX;AACE,iBAAOI,SAAS,IAAIR,KAApB;;AACF,aAAKD,KAAK,CAACO,YAAX;AACE,cAAIR,YAAJ,EAAkB;AAChB,mBAAO,IAAP;AACD;;AACD,iBAAOE,KAAP;;AACF;AACE,iBAAOA,KAAP;AATJ;AAWD,KAbS;AAAA,GAAZ;AAeD;;AAEM,SAASS,oBAAT,CAA8BV,KAA9B,EAAqC;AAC1C,SAAO,YAAyB;AAAA,QAAxBC,KAAwB,uEAAhB,CAAgB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AAC9B,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACW,IAAX;AACA,WAAKX,KAAK,CAACM,WAAX;AACA,WAAKN,KAAK,CAACY,KAAX;AACA,WAAKZ,KAAK,CAACO,YAAX;AACE,eAAO,CAAP;;AACF,WAAKP,KAAK,CAACa,KAAX;AACE,eAAOZ,KAAK,GAAG,CAAf;;AACF;AACE,eAAOA,KAAP;AATJ;AAWD,GAZD;AAaD;;AAEM,SAASa,qBAAT,CAA+Bd,KAA/B,EAAqD;AAAA,MAAfe,QAAe,uEAAJ,EAAI;AAC1D,SAAO,8CACFA,QADE;AAELC,IAAAA,MAAM,EAAE,qCAAuBhB,KAAvB,CAFH;AAGLiB,IAAAA,UAAU,EAAEP,oBAAoB,CAACV,KAAD;AAH3B,KAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../getModuleStatusReducer';\n\nexport function createGetDataReducer(cleanOnReset) {\n  return types => (\n    (state = null, {\n      type,\n      data,\n      hasPermission = true\n    }) => {\n      switch (type) {\n        case types.fetchSuccess:\n          return data;\n        case types.initSuccess:\n          if (hasPermission) {\n            return state;\n          }\n          return null;\n        case types.resetSuccess:\n          if (cleanOnReset) {\n            return null;\n          }\n          return state;\n        default:\n          return state;\n      }\n    }\n  );\n}\n\nexport function createGetTimestampReducer(cleanOnReset) {\n  return types => (\n    (state = null, { type, timestamp }) => {\n      switch (type) {\n        case types.fetchSuccess:\n          return timestamp || state;\n        case types.resetSuccess:\n          if (cleanOnReset) {\n            return null;\n          }\n          return state;\n        default:\n          return state;\n      }\n    }\n  );\n}\n\nexport function getRetryCountReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.init:\n      case types.initSuccess:\n      case types.reset:\n      case types.resetSuccess:\n        return 0;\n      case types.retry:\n        return state + 1;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getDataFetcherReducer(types, reducers = {}) {\n  return combineReducers({\n    ...reducers,\n    status: getModuleStatusReducer(types),\n    retryCount: getRetryCountReducer(types),\n  });\n}\n"],"file":"getDataFetcherReducer.js"}