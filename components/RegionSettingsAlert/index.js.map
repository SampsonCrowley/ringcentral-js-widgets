{"version":3,"sources":["components/RegionSettingsAlert/index.js"],"names":["RegionSettingsAlert","message","id","currentLocale","onRegionSettingsLinkClick","msg","regionSettingsMessages","dialingPlansChanged","regionSettings","i18n","getString","regionSettingsLink","styles","link","e","preventDefault","alertId","propTypes","PropTypes","shape","string","isRequired","func","defaultProps","undefined","handleMessage","saveSuccess","areaCodeInvalid"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;AAEe,SAASA,mBAAT,OAOZ;AAAA,0BANDC,OAMC;AAAA,MALCC,EAKD,gBALCA,EAKD;AAAA,MAJCD,OAID,gBAJCA,OAID;AAAA,MAFDE,aAEC,QAFDA,aAEC;AAAA,MADDC,yBACC,QADDA,yBACC;AACD,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,gCAAuBC,mBAA5B;AAAiD;AAC/C,YAAMC,cAAc,GAAGC,cAAKC,SAAL,CAAe,gBAAf,EAAiCP,aAAjC,CAAvB;;AACA,YAAMQ,kBAAkB,GAAGP,yBAAyB,GAEhD;AACE,UAAA,SAAS,EAAEQ,gBAAOC,IADpB;AAEE,UAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACAX,YAAAA,yBAAyB,CAAC;AAAEY,cAAAA,OAAO,EAAEd;AAAX,aAAD,CAAzB;AACD;AALH,WAMGM,cANH,CAFgD,GAWlDA,cAXF;AAYAH,QAAAA,GAAG,GACD,6BAAC,yBAAD;AACE,UAAA,OAAO,EAAEI,cAAKC,SAAL,CAAeT,OAAf,EAAwBE,aAAxB,CADX;AAEE,UAAA,MAAM,EAAE;AAAEQ,YAAAA,kBAAkB,EAAlBA;AAAF;AAFV,UADF;AAKD;AACC;;AACF;AACEN,MAAAA,GAAG,GAAGI,cAAKC,SAAL,CAAeT,OAAf,EAAwBE,aAAxB,CAAN;AACA;AAxBJ;;AA0BA,SACE,0CACGE,GADH,CADF;AAKD;;AACDL,mBAAmB,CAACiB,SAApB,GAAgC;AAC9BhB,EAAAA,OAAO,EAAEiB,mBAAUC,KAAV,CAAgB;AACvBlB,IAAAA,OAAO,EAAEiB,mBAAUE,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAH2B;AAI9BlB,EAAAA,aAAa,EAAEe,mBAAUE,MAAV,CAAiBC,UAJF;AAK9BjB,EAAAA,yBAAyB,EAAEc,mBAAUI;AALP,CAAhC;AAOAtB,mBAAmB,CAACuB,YAApB,GAAmC;AACjCnB,EAAAA,yBAAyB,EAAEoB;AADM,CAAnC;;AAGAxB,mBAAmB,CAACyB,aAApB,GAAoC;AAAA,MAAGxB,OAAH,SAAGA,OAAH;AAAA,SAClCA,OAAO,KAAKK,gCAAuBoB,WAAnC,IACAzB,OAAO,KAAKK,gCAAuBC,mBADnC,IAEAN,OAAO,KAAKK,gCAAuBqB,eAHD;AAAA,CAApC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport regionSettingsMessages from\n  'ringcentral-integration/modules/RegionSettings/regionSettingsMessages';\nimport FormattedMessage from '../FormattedMessage';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default function RegionSettingsAlert({\n  message: {\n    id,\n    message,\n  },\n  currentLocale,\n  onRegionSettingsLinkClick,\n}) {\n  let msg;\n  switch (message) {\n    case regionSettingsMessages.dialingPlansChanged: {\n      const regionSettings = i18n.getString('regionSettings', currentLocale);\n      const regionSettingsLink = onRegionSettingsLinkClick ?\n        (\n          <a\n            className={styles.link}\n            onClick={(e) => {\n              e.preventDefault();\n              onRegionSettingsLinkClick({ alertId: id });\n            }}>\n            {regionSettings}\n          </a>\n        ) :\n        regionSettings;\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{ regionSettingsLink }} />\n      );\n    }\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <div>\n      {msg}\n    </div>\n  );\n}\nRegionSettingsAlert.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func,\n};\nRegionSettingsAlert.defaultProps = {\n  onRegionSettingsLinkClick: undefined,\n};\nRegionSettingsAlert.handleMessage = ({ message }) => (\n  message === regionSettingsMessages.saveSuccess ||\n  message === regionSettingsMessages.dialingPlansChanged ||\n  message === regionSettingsMessages.areaCodeInvalid\n);\n"],"file":"index.js"}