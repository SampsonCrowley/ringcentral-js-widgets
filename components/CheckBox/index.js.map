{"version":3,"sources":["components/CheckBox/index.js"],"names":["CheckBox","data","selected","onSelect","valueField","textField","className","props","isListObject","map","item","key","isSelected","checkStyle","styles","selectedCheckButton","onClick","extraInfo","renderExtraInfo","disabled","checkButton","text","propTypes","PropTypes","string","any","isRequired","array","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,SAASA,QAAT,OAUE;AAAA,MAREC,IAQF,QAREA,IAQF;AAAA,MAPEC,QAOF,QAPEA,QAOF;AAAA,MANEC,QAMF,QANEA,QAMF;AAAA,MALEC,UAKF,QALEA,UAKF;AAAA,MAJEC,SAIF,QAJEA,SAIF;AAAA,MAHEC,SAGF,QAHEA,SAGF;AAAA,MAFKC,KAEL;;AACA,MAAMC,YAAY,GAAG,CAAC,EAAEH,SAAS,IAAID,UAAf,CAAtB;AACA,SACE;AAAK,IAAA,SAAS,EAAEE;AAAhB,KAEIL,IAAI,CAACQ,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP,EAAe;AACtB,QAAMC,UAAU,GAAGV,QAAQ,MAAMM,YAAY,GAAGE,IAAI,CAACN,UAAD,CAAP,GAAsBM,IAAxC,CAA3B;AACA,QAAMG,UAAU,GAAGD,UAAU,GAAGE,gBAAOC,mBAAV,GAAgC,IAA7D;;AACA,QAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,aAAMb,QAAQ,CAACO,IAAD,CAAd;AAAA,KAAhB;;AACA,QAAMO,SAAS,GAAG,OAAOP,IAAI,CAACQ,eAAZ,KAAgC,UAAhC,IAA8CN,UAA9C,GAChBF,IAAI,CAACQ,eAAL,mBAA0BX,KAA1B,EADgB,GAEhB,IAFF;AAGA,WACE;AAAK,MAAA,GAAG,EAAEI;AAAV,OACE;AACE,MAAA,OAAO,EAAEK,OADX;AAEE,MAAA,SAAS,EAAE,yBAAWF,gBAAOJ,IAAlB,EAAwBA,IAAI,IAAIA,IAAI,CAACS,QAAb,GAAwBL,gBAAOK,QAA/B,GAA0C,IAAlE;AAFb,OAGE;AAAK,MAAA,SAAS,EAAE,yBAAWL,gBAAOM,WAAlB,EAA+BP,UAA/B;AAAhB,MAHF,EAIE;AAAK,MAAA,SAAS,EAAEC,gBAAOO;AAAvB,OACIb,YAAY,GAAGE,IAAI,CAACL,SAAD,CAAP,GAAqBK,IADrC,CAJF,CADF,EASGO,SATH,CADF;AAaD,GApBD,CAFJ,CADF;AA2BD;;AAEDjB,QAAQ,CAACsB,SAAT,GAAqB;AACnBlB,EAAAA,UAAU,EAAEmB,mBAAUC,MADH;AAEnBnB,EAAAA,SAAS,EAAEkB,mBAAUC,MAFF;AAGnBtB,EAAAA,QAAQ,EAAEqB,mBAAUE,GAAV,CAAcC,UAHL;AAInBzB,EAAAA,IAAI,EAAEsB,mBAAUI,KAAV,CAAgBD,UAJH;AAKnBvB,EAAAA,QAAQ,EAAEoB,mBAAUK,IAAV,CAAeF,UALN;AAMnBpB,EAAAA,SAAS,EAAEiB,mBAAUC;AANF,CAArB;AASAxB,QAAQ,CAAC6B,YAAT,GAAwB;AACtBxB,EAAAA,SAAS,EAAE,IADW;AAEtBD,EAAAA,UAAU,EAAE,IAFU;AAGtBE,EAAAA,SAAS,EAAE;AAHW,CAAxB;eAMeN,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction CheckBox(\n  {\n    data,\n    selected,\n    onSelect,\n    valueField,\n    textField,\n    className,\n    ...props\n  }\n) {\n  const isListObject = !!(textField && valueField);\n  return (\n    <div className={className}>\n      {\n        data.map((item, key) => {\n          const isSelected = selected === (isListObject ? item[valueField] : item);\n          const checkStyle = isSelected ? styles.selectedCheckButton : null;\n          const onClick = () => onSelect(item);\n          const extraInfo = typeof item.renderExtraInfo === 'function' && isSelected ?\n            item.renderExtraInfo({ ...props }) :\n            null;\n          return (\n            <div key={key}>\n              <div\n                onClick={onClick}\n                className={classnames(styles.item, item && item.disabled ? styles.disabled : null)}>\n                <div className={classnames(styles.checkButton, checkStyle)} />\n                <div className={styles.text}>\n                  { isListObject ? item[textField] : item }\n                </div>\n              </div>\n              {extraInfo}\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nCheckBox.propTypes = {\n  valueField: PropTypes.string,\n  textField: PropTypes.string,\n  selected: PropTypes.any.isRequired,\n  data: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  textField: null,\n  valueField: null,\n  className: null,\n};\n\nexport default CheckBox;\n"],"file":"index.js"}