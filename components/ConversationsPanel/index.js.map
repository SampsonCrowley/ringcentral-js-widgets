{"version":3,"sources":["components/ConversationsPanel/index.js"],"names":["TabTitle","type","currentLocale","styles","tabTitle","i18n","getString","propTypes","PropTypes","string","isRequired","ConversationsPanel","props","onTabChanged","updateTypeFilter","onUnmount","tabs","icon","messageTypes","all","label","path","isActive","readVoicemailPermission","voiceMail","noticeCounts","voiceUnreadCounts","readFaxPermission","fax","faxUnreadCounts","readTextPermission","text","textUnreadCounts","filter","x","MessageTabButton","tabBar","typeFilter","showSpinner","showTitle","searchInput","onSearchInputChange","perPage","disableLinks","conversations","brand","showConversationDetail","readMessage","markMessage","dateTimeFormatter","showContactDisplayPlaceholder","sourceIcons","showGroupNumberName","areaCode","countryCode","onLogConversation","onViewContact","onCreateContact","createEntityTypes","onClickToDial","onClickToSms","disableClickToDial","unmarkMessage","autoLog","enableContactFallback","deleteMessage","goToComposeText","composeTextPermission","previewFaxMessages","loadNextPage","loadingNextPage","renderExtraButton","showTextIcon","search","searchContainer","withoutTextIcon","textIcon","hoverTextSVGIcon","textSVGIcon","placeholder","length","content","contentWithHeader","contentWithSearch","showComposeText","buttons","push","composeText","onClick","placement","header","tabsHeader","renderTabs","renderContent","root","Component","bool","object","func","number","array","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport messageTypes from 'ringcentral-integration/enums/messageTypes';\nimport Header from '../Header';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport MessageTabButton from '../MessageTabButton';\nimport NavigationBar from '../NavigationBar';\nimport SearchInput from '../SearchInput';\nimport ComposeText from '../../assets/images/ComposeText.svg';\nimport NewComposeText from '../../assets/images/NewComposeText.svg';\nimport NewComposeTextHover from '../../assets/images/NewComposeTextHover.svg';\nimport ConversationList from '../ConversationList';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nfunction TabTitle({\n  type,\n  currentLocale,\n}) {\n  return (\n    <span className={styles.tabTitle}>\n      {i18n.getString(type, currentLocale)}\n    </span>\n  );\n}\n\nTabTitle.propTypes = {\n  type: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n};\n\nexport default class ConversationsPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTabChanged = (type) => {\n      if (typeof this.props.updateTypeFilter === 'function') {\n        this.props.updateTypeFilter(type);\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    if (typeof this.props.onUnmount === 'function') {\n      this.props.onUnmount();\n    }\n  }\n\n  renderTabs() {\n    const tabs = [\n      {\n        icon: <TabTitle type={messageTypes.all} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.all, this.props.currentLocale),\n        path: messageTypes.all,\n        isActive: path => path === messageTypes.all,\n      },\n      this.props.readVoicemailPermission && {\n        icon: <TabTitle type={messageTypes.voiceMail} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.voiceMail, this.props.currentLocale),\n        path: messageTypes.voiceMail,\n        isActive: path => path === messageTypes.voiceMail,\n        noticeCounts: this.props.voiceUnreadCounts,\n      },\n      this.props.readFaxPermission && {\n        icon: <TabTitle type={messageTypes.fax} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.fax, this.props.currentLocale),\n        path: messageTypes.fax,\n        isActive: path => path === messageTypes.fax,\n        noticeCounts: this.props.faxUnreadCounts,\n      },\n      this.props.readTextPermission && {\n        icon: <TabTitle type={messageTypes.text} currentLocale={this.props.currentLocale} />,\n        label: i18n.getString(messageTypes.text, this.props.currentLocale),\n        path: messageTypes.text,\n        isActive: path => path === messageTypes.text,\n        noticeCounts: this.props.textUnreadCounts,\n      },\n    ].filter(x => !!x);\n    return (\n      <NavigationBar\n        button={MessageTabButton}\n        className={styles.tabBar}\n        currentPath={this.props.typeFilter}\n        goTo={this.onTabChanged}\n        tabs={tabs}\n      />\n    );\n  }\n\n  renderContent() {\n    const {\n      showSpinner,\n      showTitle,\n      searchInput,\n      onSearchInputChange,\n      currentLocale,\n      perPage,\n      disableLinks,\n      conversations,\n      brand,\n      showConversationDetail,\n      readMessage,\n      markMessage,\n      dateTimeFormatter,\n      showContactDisplayPlaceholder,\n      sourceIcons,\n      showGroupNumberName,\n      areaCode,\n      countryCode,\n      onLogConversation,\n      onViewContact,\n      onCreateContact,\n      createEntityTypes,\n      onClickToDial,\n      onClickToSms,\n      disableClickToDial,\n      unmarkMessage,\n      autoLog,\n      enableContactFallback,\n      deleteMessage,\n      typeFilter,\n      goToComposeText,\n      composeTextPermission,\n      previewFaxMessages,\n      loadNextPage,\n      loadingNextPage,\n      renderExtraButton,\n    } = this.props;\n    if (showSpinner) {\n      return (<SpinnerOverlay />);\n    }\n    const showTextIcon =\n      composeTextPermission &&\n      (typeFilter === messageTypes.all || typeFilter === messageTypes.text);\n    const search = onSearchInputChange ?\n      (\n        <div\n          className={\n            classnames(styles.searchContainer, showTextIcon ? null : styles.withoutTextIcon)\n          }\n        >\n          <SearchInput\n            className={styles.searchInput}\n            value={searchInput}\n            onChange={onSearchInputChange}\n            placeholder={i18n.getString('search', currentLocale)}\n            disabled={disableLinks}\n          />\n          <span\n            title={i18n.getString('composeText', currentLocale)}\n            className={styles.textIcon}\n            onClick={goToComposeText}\n          >\n            <NewComposeTextHover className={styles.hoverTextSVGIcon} width={20} height={21} />\n            <NewComposeText className={styles.textSVGIcon} width={20} height={21} />\n          </span>\n        </div>\n      ) :\n      null;\n    const placeholder = onSearchInputChange && searchInput.length > 0 ?\n      i18n.getString('noSearchResults', currentLocale) :\n      i18n.getString('noMessages', currentLocale);\n    return (\n      <div\n        className={classnames(\n          styles.content,\n          showTitle && styles.contentWithHeader\n        )}\n      >\n        {search}\n        <ConversationList\n          className={onSearchInputChange ? styles.contentWithSearch : null}\n          currentLocale={currentLocale}\n          perPage={perPage}\n          disableLinks={disableLinks}\n          conversations={conversations}\n          brand={brand}\n          showConversationDetail={showConversationDetail}\n          readMessage={readMessage}\n          markMessage={markMessage}\n          dateTimeFormatter={dateTimeFormatter}\n          showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n          sourceIcons={sourceIcons}\n          showGroupNumberName={showGroupNumberName}\n          placeholder={placeholder}\n          areaCode={areaCode}\n          countryCode={countryCode}\n          onLogConversation={onLogConversation}\n          onViewContact={onViewContact}\n          onCreateContact={onCreateContact}\n          createEntityTypes={createEntityTypes}\n          onClickToDial={onClickToDial}\n          onClickToSms={onClickToSms}\n          disableClickToDial={disableClickToDial}\n          unmarkMessage={unmarkMessage}\n          autoLog={autoLog}\n          enableContactFallback={enableContactFallback}\n          deleteMessage={deleteMessage}\n          previewFaxMessages={previewFaxMessages}\n          loadNextPage={loadNextPage}\n          loadingNextPage={loadingNextPage}\n          typeFilter={typeFilter}\n          renderExtraButton={renderExtraButton}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      currentLocale,\n      showTitle,\n      showComposeText,\n      goToComposeText,\n    } = this.props;\n    const buttons = [];\n    if (showComposeText) {\n      buttons.push({\n        label: <ComposeText className={styles.composeText} />,\n        onClick: goToComposeText,\n        placement: 'right',\n      });\n    }\n    const header = showTitle ?\n      (\n        <Header buttons={buttons}>\n          {i18n.getString('title', currentLocale)}\n        </Header>\n      ) :\n      null;\n    const tabsHeader = this.renderTabs();\n    const content = this.renderContent();\n    return (\n      <div className={styles.root}>\n        {header}\n        {tabsHeader}\n        {content}\n      </div>\n    );\n  }\n}\n\nConversationsPanel.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  showComposeText: PropTypes.bool,\n  goToComposeText: PropTypes.func.isRequired,\n  typeFilter: PropTypes.string,\n  updateTypeFilter: PropTypes.func,\n  showConversationDetail: PropTypes.func.isRequired,\n  textUnreadCounts: PropTypes.number.isRequired,\n  voiceUnreadCounts: PropTypes.number.isRequired,\n  faxUnreadCounts: PropTypes.number.isRequired,\n  showGroupNumberName: PropTypes.bool,\n  onClickToDial: PropTypes.func,\n  onClickToSms: PropTypes.func,\n  markMessage: PropTypes.func.isRequired,\n  readMessage: PropTypes.func.isRequired,\n  readTextPermission: PropTypes.bool,\n  readVoicemailPermission: PropTypes.bool,\n  readFaxPermission: PropTypes.bool,\n  onSearchInputChange: PropTypes.func,\n  searchInput: PropTypes.string,\n  perPage: PropTypes.number,\n  disableLinks: PropTypes.bool,\n  conversations: PropTypes.array.isRequired,\n  brand: PropTypes.string.isRequired,\n  dateTimeFormatter: PropTypes.func,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  onLogConversation: PropTypes.func,\n  onViewContact: PropTypes.func,\n  onCreateContact: PropTypes.func,\n  createEntityTypes: PropTypes.array,\n  disableClickToDial: PropTypes.bool,\n  unmarkMessage: PropTypes.func.isRequired,\n  autoLog: PropTypes.bool,\n  enableContactFallback: PropTypes.bool,\n  deleteMessage: PropTypes.func,\n  composeTextPermission: PropTypes.bool,\n  previewFaxMessages: PropTypes.func,\n  loadNextPage: PropTypes.func.isRequired,\n  loadingNextPage: PropTypes.bool,\n  onUnmount: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n};\n\nConversationsPanel.defaultProps = {\n  showSpinner: false,\n  showTitle: false,\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  showComposeText: false,\n  typeFilter: messageTypes.all,\n  updateTypeFilter: undefined,\n  showGroupNumberName: false,\n  onClickToDial: undefined,\n  onClickToSms: undefined,\n  readTextPermission: true,\n  readVoicemailPermission: true,\n  readFaxPermission: true,\n  onSearchInputChange: undefined,\n  searchInput: '',\n  perPage: 20,\n  disableLinks: false,\n  dateTimeFormatter: undefined,\n  onLogConversation: undefined,\n  onViewContact: undefined,\n  onCreateContact: undefined,\n  createEntityTypes: undefined,\n  disableClickToDial: false,\n  autoLog: false,\n  enableContactFallback: undefined,\n  deleteMessage: undefined,\n  composeTextPermission: true,\n  previewFaxMessages: undefined,\n  loadingNextPage: false,\n  onUnmount: undefined,\n  renderExtraButton: undefined,\n};\n"]}