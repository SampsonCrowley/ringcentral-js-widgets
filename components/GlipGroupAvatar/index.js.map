{"version":3,"sources":["components/GlipGroupAvatar/index.js"],"names":["GroupAvatar","persons","className","unread","image","length","personsWithoutMe","filter","p","isMe","person","styles","big","avatar","defaultAvatar","id","images","slice","map","small","unreadEl","root","propTypes","PropTypes","string","array","number","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,WAAT,OAAqD;AAAA,MAA9BC,OAA8B,QAA9BA,OAA8B;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACnD,MAAIC,KAAJ;;AACA,MAAIH,OAAO,CAACI,MAAR,IAAkB,CAAtB,EAAyB;AACvB,QAAMC,gBAAgB,GAAGL,OAAO,CAACM,MAAR,CAAe,UAAAC,CAAC;AAAA,aAAI,CAACA,CAAC,CAACC,IAAP;AAAA,KAAhB,CAAzB;AACA,QAAMC,MAAM,GAAGJ,gBAAgB,IAAIA,gBAAgB,CAAC,CAAD,CAAnD;AACAF,IAAAA,KAAK,GAED;AACE,MAAA,SAAS,EAAEO,mBAAOC,GADpB;AAEE,MAAA,GAAG,EAAGF,MAAM,IAAIA,MAAM,CAACG,MAAlB,IAA6BC,0BAFpC;AAGE,MAAA,GAAG,EAAEJ,MAAM,IAAIA,MAAM,CAACK;AAHxB,MAFJ;AAQD,GAXD,MAWO;AACLX,IAAAA,KAAK,GACH;AAAK,MAAA,SAAS,EAAEO,mBAAOK;AAAvB,OAEIf,OAAO,CAACgB,KAAR,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,GAApB,CACE,UAAAR,MAAM;AAAA,aACJ;AACE,QAAA,GAAG,EAAEA,MAAM,CAACK,EADd;AAEE,QAAA,SAAS,EAAEJ,mBAAOQ,KAFpB;AAGE,QAAA,GAAG,EAAGT,MAAM,IAAIA,MAAM,CAACG,MAAlB,IAA6BC,0BAHpC;AAIE,QAAA,GAAG,EAAEJ,MAAM,IAAIA,MAAM,CAACK;AAJxB,QADI;AAAA,KADR,CAFJ,CADF;AAgBD;;AACD,MAAIK,QAAJ;;AACA,MAAIjB,MAAM,GAAG,CAAb,EAAgB;AACdiB,IAAAA,QAAQ,GACN;AAAM,MAAA,SAAS,EAAET,mBAAOR;AAAxB,OACGA,MAAM,GAAG,EAAT,GAAc,KAAd,GAAsBA,MADzB,CADF;AAKD;;AACD,SACE;AAAK,IAAA,SAAS,EAAE,4BAAWQ,mBAAOU,IAAlB,EAAwBnB,SAAxB;AAAhB,KACGE,KADH,EAEGgB,QAFH,CADF;AAMD;;AAEDpB,WAAW,CAACsB,SAAZ,GAAwB;AACtBpB,EAAAA,SAAS,EAAEqB,sBAAUC,MADC;AAEtBvB,EAAAA,OAAO,EAAEsB,sBAAUE,KAFG;AAGtBtB,EAAAA,MAAM,EAAEoB,sBAAUG;AAHI,CAAxB;AAMA1B,WAAW,CAAC2B,YAAZ,GAA2B;AACzBzB,EAAAA,SAAS,EAAE0B,SADc;AAEzBzB,EAAAA,MAAM,EAAE,CAFiB;AAGzBF,EAAAA,OAAO,EAAE;AAHgB,CAA3B;eAMeD,W","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport defaultAvatar from '../../assets/images/default_avatar.png';\nimport styles from './styles.scss';\n\nfunction GroupAvatar({ persons, className, unread }) {\n  let image;\n  if (persons.length <= 2) {\n    const personsWithoutMe = persons.filter(p => !p.isMe);\n    const person = personsWithoutMe && personsWithoutMe[0];\n    image =\n      (\n        <img\n          className={styles.big}\n          src={(person && person.avatar) || defaultAvatar}\n          alt={person && person.id}\n        />\n      );\n  } else {\n    image = (\n      <div className={styles.images}>\n        {\n          persons.slice(0, 9).map(\n            person => (\n              <img\n                key={person.id}\n                className={styles.small}\n                src={(person && person.avatar) || defaultAvatar}\n                alt={person && person.id}\n              />\n            )\n          )\n        }\n      </div>\n    );\n  }\n  let unreadEl;\n  if (unread > 0) {\n    unreadEl = (\n      <span className={styles.unread}>\n        {unread > 99 ? '99+' : unread}\n      </span>\n    );\n  }\n  return (\n    <div className={classnames(styles.root, className)}>\n      {image}\n      {unreadEl}\n    </div>\n  );\n}\n\nGroupAvatar.propTypes = {\n  className: PropTypes.string,\n  persons: PropTypes.array,\n  unread: PropTypes.number,\n};\n\nGroupAvatar.defaultProps = {\n  className: undefined,\n  unread: 0,\n  persons: [],\n};\n\nexport default GroupAvatar;\n"],"file":"index.js"}