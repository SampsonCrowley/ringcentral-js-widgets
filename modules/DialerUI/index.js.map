{"version":3,"sources":["modules/DialerUI/index.js"],"names":["DialerUI","name","deps","dep","optional","call","alert","subActionTypes","actionTypes","options","_call","ensureExist","_alert","_reducer","_callHooks","pending","ready","store","dispatch","type","init","initSuccess","reset","resetSuccess","clearToNumberField","phoneNumber","toNumberField","setToNumberField","recipient","shouldClean","setRecipient","clearRecipient","fromNumber","hook","callSuccess","callError","error","beforeCall","trim","length","lastRecipient","lastPhoneNumber","warning","message","callErrors","noToNumber","loadLastCallState","state","status","RcModule","proxify"],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from 'ringcentral-integration/lib/RcModule';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport ensureExist from 'ringcentral-integration/lib/ensureExist';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\nimport actionTypes from './actionTypes';\nimport getReducer from './getReducer';\n\n@Module({\n  name: 'DialerUI',\n  deps: [\n    'Call',\n    'Alert',\n    { dep: 'DialerUIOptions', optional: true },\n  ],\n})\nexport default class DialerUI extends RcModule {\n  constructor({\n    call,\n    alert,\n    actionTypes: subActionTypes,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: (subActionTypes || actionTypes),\n    });\n\n    this._call = this:: ensureExist(call, 'call');\n    this._alert = this:: ensureExist(alert, 'alert');\n    this._reducer = getReducer(this.actionTypes);\n    this._callHooks = [];\n  }\n\n  async _onStateChange() {\n    if (\n      this.pending &&\n      this._call.ready\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.init,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (\n      this.ready &&\n      (\n        !this._call.ready\n      )\n    ) {\n      this.store.dispatch({\n        type: this.actionTypes.reset,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  @proxify\n  async clearToNumberField() {\n    this.store.dispatch({\n      type: this.actionTypes.clearToNumberField,\n    });\n  }\n\n  @proxify\n  async setToNumberField(phoneNumber) {\n    if (this.toNumberField !== phoneNumber) {\n      this.store.dispatch({\n        type: this.actionTypes.setToNumberField,\n        phoneNumber,\n      });\n    }\n  }\n\n  @proxify\n  async setRecipient(recipient, shouldClean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.setRecipient,\n      recipient,\n    });\n    if (shouldClean) {\n      await this.clearToNumberField();\n    }\n  }\n  @proxify\n  async clearRecipient() {\n    this.store.dispatch({\n      type: this.actionTypes.clearRecipient,\n    });\n  }\n\n  @proxify\n  async call({\n    phoneNumber = '',\n    recipient = null,\n    fromNumber = null,\n  }) {\n    if (phoneNumber || recipient) {\n      this.store.dispatch({\n        type: this.actionTypes.call,\n        phoneNumber,\n        recipient,\n      });\n      for (const hook of this._callHooks) {\n        await hook({\n          phoneNumber,\n          recipient,\n          fromNumber,\n        });\n      }\n      try {\n        await this._call.call({\n          phoneNumber: this.toNumberField,\n          recipient: this.recipient,\n          fromNumber,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.callSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actionTypes.callError,\n          error,\n        });\n      }\n    }\n  }\n\n  @proxify\n  async onCallButtonClick({ fromNumber, beforeCall } = {}) {\n    if (\n      `${this.toNumberField}`.trim().length === 0 &&\n      !this.recipient\n    ) {\n      if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\n        this._alert.warning({\n          message: callErrors.noToNumber,\n        });\n      } else {\n        this.store.dispatch({\n          type: this.actionTypes.loadLastCallState,\n          phoneNumber: this._call.lastPhoneNumber,\n          recipient: this._call.lastRecipient,\n        });\n      }\n    } else {\n      if (typeof beforeCall === 'function') {\n        beforeCall();\n      }\n      await this.call({\n        phoneNumber: this.toNumberField,\n        recipient: this.recipient,\n        fromNumber,\n      });\n    }\n  }\n\n  get toNumberField() {\n    return this.state.toNumberField;\n  }\n\n  get recipient() {\n    return this.state.recipient;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"]}