{"version":3,"sources":["modules/RCVideo/index.ts"],"names":["RCVideo","deps","client","reducers","options","actionTypes","_client","_reducer","store","subscribe","_onStateChange","_shouldInit","_init","pending","dispatch","type","initSuccess","params","console","log","service","platform","post","meetingResult","state","status","RcModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqBA,O,WALpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI;AADA,CAAP,C;;;;;AAOC,yBAIG;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,QAEC,QAFDA,QAEC;AAAA,QADEC,OACF;;AAAA;;AACD,mGACKA,OADL;AAEEC,MAAAA,WAAW,EAAED,OAAO,CAACC,WAAR,IAAuBA;AAFtC;AADC,UALHC,OAKG;AAKD,UAAKA,OAAL,GAAeJ,MAAf;AACA,UAAKK,QAAL,GAAgB,iCAAgB,MAAKF,WAArB,EAAkCF,QAAlC,CAAhB;AANC;AAOF;;;;iCAEY;AAAA;;AACX,WAAKK,KAAL,CAAWC,SAAX,CAAqB;AAAA,eAAM,MAAI,CAACC,cAAL,EAAN;AAAA,OAArB;AACD;;;qCAEgB;AACf,UAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,aAAKC,KAAL;AACD;AACF;;;kCAEa;AACZ,aAAO,KAAKC,OAAZ;AACD;;;4BAEO;AACN,WAAKL,KAAL,CAAWM,QAAX,CAAoB;AAClBC,QAAAA,IAAI,EAAE,KAAKV,WAAL,CAAiBW;AADL,OAApB;AAGD;;;;;;+CAEmBd,M,EAAQe,M;;;;;;AAC1BC,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;uBAC4Bf,MAAM,CAACkB,OAAP,CAAeC,QAAf,GAA0BC,IAA1B,CAA+B,qBAA/B,EAAsDL,MAAtD,C;;;AAAtBM,gBAAAA,a;AACNL,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,aAAtB;;;;;;;;;;;;;;;;;;wBAGW;AACX,aAAO,KAAKC,KAAL,CAAWC,MAAlB;AACD;;;;EA3CkCC,qB","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport getVideoReducer from './getVideoReducer';\n\n@Module({\n  deps: [\n    'Client',\n  ]\n})\nexport default class RCVideo extends RcModule {\n  _client: any;\n  constructor({\n    client,\n    reducers,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._client = client;\n    this._reducer = getVideoReducer(this.actionTypes, reducers);\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    }\n  }\n\n  _shouldInit() {\n    return this.pending;\n  }\n\n  _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess\n    });\n  }\n\n  async createMeeting(client, params) {\n    console.log('params', params);\n    const meetingResult = await client.service.platform().post('/rcvideo/v1/bridges', params);\n    console.log('result', meetingResult);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}