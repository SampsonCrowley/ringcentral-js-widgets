{"version":3,"sources":["components/EntityButton/index.js"],"names":["EntityButton","className","onViewEntity","onCreateEntity","hasEntity","isCreating","disableLinks","viewEntityTitle","createEntityTitle","spinner","styles","spinnerContainer","icon","dynamicsFont","record","addEntity","onClick","title","entity","propTypes","PropTypes","string","func","bool","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,YAAT,OASZ;AAAA,MARDC,SAQC,QARDA,SAQC;AAAA,MAPDC,YAOC,QAPDA,YAOC;AAAA,MANDC,cAMC,QANDA,cAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,eAEC,QAFDA,eAEC;AAAA,MADDC,iBACC,QADDA,iBACC;AACD;AACA,MAAMC,OAAO,GAAGJ,UAAU,GAEtB;AAAK,IAAA,SAAS,EAAEK,gBAAOC;AAAvB,KACE,6BAAC,gBAAD;AAAS,IAAA,SAAS,EAAE;AAApB,IADF,CAFsB,GAMxB,IANF;AAOA,MAAMC,IAAI,GAAGR,SAAS,GAAGS,sBAAaC,MAAhB,GAAyBD,sBAAaE,SAA5D;AACA,MAAMC,OAAO,GAAGZ,SAAS,GAAGF,YAAH,GAAkBC,cAA3C;AACA,MAAMc,KAAK,GAAGb,SAAS,GAAGG,eAAH,GAAqBC,iBAA5C;AACA,SACE,6BAAC,eAAD;AACE,IAAA,SAAS,EAAE,yBAAWE,gBAAOQ,MAAlB,EAA0BjB,SAA1B,CADb;AAEE,IAAA,OAAO,EAAEe,OAFX;AAGE,IAAA,QAAQ,EAAEV;AAHZ,KAKE;AACE,IAAA,SAAS,EAAEM,IADb;AAEE,IAAA,KAAK,EAAEK;AAFT,IALF,EASGR,OATH,CADF;AAaD;;AAEDT,YAAY,CAACmB,SAAb,GAAyB;AACvBlB,EAAAA,SAAS,EAAEmB,mBAAUC,MADE;AAEvBnB,EAAAA,YAAY,EAAEkB,mBAAUE,IAFD;AAGvBnB,EAAAA,cAAc,EAAEiB,mBAAUE,IAHH;AAIvBlB,EAAAA,SAAS,EAAEgB,mBAAUG,IAJE;AAKvBlB,EAAAA,UAAU,EAAEe,mBAAUG,IALC;AAMvBjB,EAAAA,YAAY,EAAEc,mBAAUG,IAND;AAOvBhB,EAAAA,eAAe,EAAEa,mBAAUC,MAPJ;AAQvBb,EAAAA,iBAAiB,EAAEY,mBAAUC;AARN,CAAzB;AAWArB,YAAY,CAACwB,YAAb,GAA4B;AAC1BvB,EAAAA,SAAS,EAAEwB,SADe;AAE1BvB,EAAAA,YAAY,EAAEuB,SAFY;AAG1BrB,EAAAA,SAAS,EAAE,KAHe;AAI1BD,EAAAA,cAAc,EAAEsB,SAJU;AAK1BpB,EAAAA,UAAU,EAAE,KALc;AAM1BC,EAAAA,YAAY,EAAE,KANY;AAO1BC,EAAAA,eAAe,EAAEkB,SAPS;AAQ1BjB,EAAAA,iBAAiB,EAAEiB;AARO,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Spinner from '../Spinner';\nimport Button from '../Button';\nimport styles from './styles.scss';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\n\nexport default function EntityButton({\n  className,\n  onViewEntity,\n  onCreateEntity,\n  hasEntity,\n  isCreating,\n  disableLinks,\n  viewEntityTitle,\n  createEntityTitle,\n}) {\n  // console.debug('isCreating', isCreating);\n  const spinner = isCreating ?\n    (\n      <div className={styles.spinnerContainer}>\n        <Spinner ringWidth={2} />\n      </div>\n    ) :\n    null;\n  const icon = hasEntity ? dynamicsFont.record : dynamicsFont.addEntity;\n  const onClick = hasEntity ? onViewEntity : onCreateEntity;\n  const title = hasEntity ? viewEntityTitle : createEntityTitle;\n  return (\n    <Button\n      className={classnames(styles.entity, className)}\n      onClick={onClick}\n      disabled={disableLinks} >\n\n      <span\n        className={icon}\n        title={title}\n      />\n      {spinner}\n    </Button>\n  );\n}\n\nEntityButton.propTypes = {\n  className: PropTypes.string,\n  onViewEntity: PropTypes.func,\n  onCreateEntity: PropTypes.func,\n  hasEntity: PropTypes.bool,\n  isCreating: PropTypes.bool,\n  disableLinks: PropTypes.bool,\n  viewEntityTitle: PropTypes.string,\n  createEntityTitle: PropTypes.string,\n};\n\nEntityButton.defaultProps = {\n  className: undefined,\n  onViewEntity: undefined,\n  hasEntity: false,\n  onCreateEntity: undefined,\n  isCreating: false,\n  disableLinks: false,\n  viewEntityTitle: undefined,\n  createEntityTitle: undefined,\n};\n"],"file":"index.js"}