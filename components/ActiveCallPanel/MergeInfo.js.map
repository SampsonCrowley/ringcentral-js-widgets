{"version":3,"sources":["components/ActiveCallPanel/MergeInfo.js"],"names":["MergeInfo","props","state","lastCallAvatar","lastCallInfoTimeout","mounted","timeout_clock","clearTimeout","lastCallInfo","getAvatarUrl","avatarUrl","lastCallContact","then","setState","calleeType","calleeTypes","conference","isSimplifiedCallAndLastCallInfoNotReady","name","phoneNumber","setTimeout","checkLastCallInfoTimeout","currentLocale","timeCounter","currentCallTitle","currentCallAvatarUrl","formatPhone","styles","userInfo","isLastCallInfoReady","isLastCallEnded","status","sessionStatus","finished","statusClasses","callee_status","callee_status_disconnected","isOnConferenceCall","isContacts","contacts","calleeName","loadingText","i18n","getString","loadingTimeoutText","showSpinner","mergeInfo","merge_item","callee_avatar","extraNum","callee_name","last_call_info_load_timeout","merge_item_active","callee_avatar_active","callee_name_active","callee_status_active","Component","propTypes","PropTypes","string","isRequired","element","object","func","number","defaultProps","unknown","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport styles from './styles.scss';\nimport i18n from './i18n';\nimport CallAvatar from '../CallAvatar';\n\nclass MergeInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastCallAvatar: null,\n      lastCallInfoTimeout: false\n    };\n    this.mounted = false;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    if (this.timeout_clock) {\n      clearTimeout(this.timeout_clock);\n    }\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    const { lastCallInfo, getAvatarUrl } = this.props;\n    if (lastCallInfo && !lastCallInfo.avatarUrl && lastCallInfo.lastCallContact) {\n      getAvatarUrl(lastCallInfo.lastCallContact).then((lastCallAvatar) => {\n        if (this.mounted) {\n          this.setState({\n            lastCallAvatar,\n          });\n        }\n      });\n    }\n    if (\n      lastCallInfo && lastCallInfo.calleeType !== calleeTypes.conference\n    ) {\n      const isSimplifiedCallAndLastCallInfoNotReady = (\n        !lastCallInfo.name || !lastCallInfo.phoneNumber\n      );\n\n      if (isSimplifiedCallAndLastCallInfoNotReady) {\n        this.timeout_clock = setTimeout(() => {\n          if (this.mounted) {\n            this.setState({\n              lastCallInfoTimeout: true\n            });\n          }\n        }, this.props.checkLastCallInfoTimeout);\n      } else if (this.timeout_clock) {\n        clearTimeout(this.timeout_clock);\n      }\n    }\n  }\n\n  render() {\n    const {\n      currentLocale,\n      timeCounter,\n      lastCallInfo,\n      currentCallTitle,\n      currentCallAvatarUrl,\n      formatPhone,\n    } = this.props;\n    if (!lastCallInfo) {\n      return <div className={styles.userInfo} />;\n    }\n    const { lastCallAvatar, lastCallInfoTimeout } = this.state;\n    const isLastCallInfoReady = (\n      !!lastCallInfo && (!!lastCallInfo.name || !!lastCallInfo.phoneNumber)\n    );\n    const isLastCallEnded = lastCallInfo && lastCallInfo.status === sessionStatus.finished;\n    const statusClasses = classnames({\n      [styles.callee_status]: true,\n      [styles.callee_status_disconnected]: !!isLastCallEnded,\n    });\n\n    const isOnConferenceCall = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.conference\n    );\n    const isContacts = !!(\n      lastCallInfo && lastCallInfo.calleeType === calleeTypes.contacts\n    );\n    const calleeName = isContacts ? lastCallInfo.name : formatPhone(lastCallInfo.phoneNumber);\n    const loadingText = i18n.getString('loading');\n    const loadingTimeoutText = i18n.getString('loadingTimeout');\n    const showSpinner = !lastCallInfoTimeout && !isLastCallInfoReady && !isOnConferenceCall;\n    return (\n      <div className={styles.mergeInfo}>\n        <div className={styles.merge_item}>\n          <div className={styles.callee_avatar}>\n            <CallAvatar\n              avatarUrl={isContacts && !lastCallInfo.avatarUrl ?\n                lastCallAvatar :\n                lastCallInfo.avatarUrl}\n              extraNum={isOnConferenceCall ? lastCallInfo.extraNum : 0}\n              isOnConferenceCall={isOnConferenceCall}\n              spinnerMode={showSpinner}\n            />\n          </div>\n          {\n            (isLastCallInfoReady || (!isLastCallInfoReady && isOnConferenceCall)) && (\n              <div className={styles.callee_name}>\n                {\n                  isOnConferenceCall ?\n                    (\n                      <span title={i18n.getString('conferenceCall', currentLocale)}>\n                        {i18n.getString('conferenceCall', currentLocale)}\n                      </span>\n                    ) :\n                    (\n                      <span title={calleeName}>{calleeName}</span>\n                    )\n                }\n              </div>\n            )\n          }\n          {\n            (!isLastCallInfoReady && !isOnConferenceCall) && (\n              lastCallInfoTimeout ? (\n                <div className={styles.last_call_info_load_timeout}>\n                  <span title={loadingTimeoutText}>{loadingTimeoutText}</span>\n                </div>\n              ) : (\n                <div className={styles.callee_name}>\n                  <span title={loadingText}>{loadingText}</span>\n                </div>\n              )\n            )\n          }\n\n          {\n            (isLastCallInfoReady || (!isLastCallInfoReady && isOnConferenceCall)) && (\n              <div className={statusClasses}>\n                {\n                  lastCallInfo.status === sessionStatus.finished ?\n                    i18n.getString('disconnected', currentLocale) :\n                    i18n.getString('onHold', currentLocale)\n                }\n              </div>\n            )\n          }\n\n        </div>\n        <div className={styles.merge_item_active}>\n          <div className={styles.callee_avatar_active}>\n            {\n              currentCallAvatarUrl ?\n                <CallAvatar avatarUrl={currentCallAvatarUrl} /> :\n                <CallAvatar avatarUrl={null} />\n            }\n          </div>\n          <div className={styles.callee_name_active}>\n            <span title={currentCallTitle}>{currentCallTitle}</span>\n          </div>\n          <div className={styles.callee_status_active}>\n            {timeCounter}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMergeInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  timeCounter: PropTypes.element.isRequired,\n  lastCallInfo: PropTypes.object,\n  currentCallTitle: PropTypes.string,\n  currentCallAvatarUrl: PropTypes.string,\n  formatPhone: PropTypes.func,\n  getAvatarUrl: PropTypes.func,\n  checkLastCallInfoTimeout: PropTypes.number,\n};\n\nMergeInfo.defaultProps = {\n  lastCallInfo: { calleeType: calleeTypes.unknown },\n  currentCallTitle: undefined,\n  currentCallAvatarUrl: undefined,\n  formatPhone: () => null,\n  getAvatarUrl: () => null,\n\n  /**\n   * The timeout seconds to check if the last call info is received.\n   */\n  checkLastCallInfoTimeout: 30 * 1000,\n};\n\nexport default MergeInfo;\n"],"file":"MergeInfo.js"}