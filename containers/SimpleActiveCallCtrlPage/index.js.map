{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/index.js"],"names":["mapToProps","_","phone","activeCallControl","regionSettings","callMonitor","locale","brand","params","renderContactName","sessionId","activeSession","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","currentLocale","fallBackNameFromThirdParty","fallBackNumber","areaCode","countryCode","otherDeviceCalls","fullName","controlBusy","busy","mapToFunctions","routerInteraction","onBackButtonClick","goBack","setActiveSessionId","onTransfer","push","muteCtrl","ACTIONS_CTRL_MAP","transferCtrl","holdCtrl","ActiveCallControlPanel","props","state","selectedMatcherIndex","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unhold","onHangup","hangUp","formatPhone","onSelectMatcherName","option","findIndex","match","id","setState","loadActCall","nextProps","callCtrlLayouts","normalCtrl","startTime","actions","isOnMute","isOnHold","showContactDisplayPlaceholder","Component","propTypes","PropTypes","func","string","isRequired","object","array","bool","defaultProps"],"mappings":"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","sourcesContent":["/**\n * @file simplify active call control page\n * detail: https://jira.ringcentral.com/browse/RCINT-8256\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../../components/ActiveCallPad';\nimport i18n from './i18n';\nimport { pickFallBackInfo } from './utils';\n\nfunction mapToProps(_, {\n  phone: {\n    activeCallControl,\n    regionSettings,\n    callMonitor,\n    locale,\n    brand,\n  },\n  params,\n  renderContactName,\n}) {\n  const { sessionId } = params;\n  const { activeSession } = activeCallControl;\n  let nameMatches = [];\n  if (activeSession && !renderContactName) {\n    nameMatches =\n      activeSession.direction === callDirections.outbound ?\n        activeSession.toMatches : activeSession.fromMatches;\n  }\n  let phoneNumber;\n  if (activeSession) {\n    phoneNumber = activeSession.direction === callDirections.outbound ?\n      activeSession.to : activeSession.from;\n  }\n  let fallBackName = i18n.getString('Unknown', locale.currentLocale);\n  if (renderContactName) {\n    const { fallBackName: fallBackNameFromThirdParty, fallBackNumber } = pickFallBackInfo(\n      activeSession,\n      renderContactName({ sessionId }),\n      locale.currentLocale\n    );\n    phoneNumber = fallBackNumber;\n    fallBackName = fallBackNameFromThirdParty;\n  }\n  return {\n    currentLocale: locale.currentLocale,\n    activeSession,\n    sessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    otherDeviceCalls: callMonitor.otherDeviceCalls,\n    nameMatches,\n    phoneNumber,\n    fallBackName,\n    brand: brand.fullName,\n    activeCallControl,\n    controlBusy: activeCallControl.busy,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n    activeCallControl\n  },\n}) {\n  return {\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    setActiveSessionId(sessionId) {\n      activeCallControl.setActiveSessionId(sessionId);\n    },\n    onTransfer(sessionId) {\n      routerInteraction.push(`/transfer/${sessionId}/active`);\n    }\n  };\n}\n\nconst { muteCtrl, transferCtrl, holdCtrl } = ACTIONS_CTRL_MAP;\n// const actions = [muteCtrl, transferCtrl, holdCtrl]\nclass ActiveCallControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMatcherIndex: 0,\n    };\n\n    this.onMute = () => this.props.activeCallControl.mute(this.props.sessionId);\n    this.onUnmute = () => this.props.activeCallControl.unmute(this.props.sessionId);\n    this.onHold = () => this.props.activeCallControl.hold(this.props.sessionId);\n    this.onUnhold = () => this.props.activeCallControl.unhold(this.props.sessionId);\n    this.onHangup = () => this.props.activeCallControl.hangUp(this.props.sessionId);\n\n    this.formatPhone = phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: this.props.areaCode,\n      countryCode: this.props.countryCode,\n    });\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadActCall();\n  }\n  loadActCall() {\n    this.props.setActiveSessionId(this.props.sessionId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.activeSession) {\n      this.props.onBackButtonClick();\n    }\n  }\n\n  render() {\n    if (!this.props.activeSession) {\n      // or using skeleton screen here\n      return null;\n    }\n\n\n    return (\n      <CallCtrlPanel\n        sessionId={this.props.sessionId}\n        currentLocale={this.props.currentLocale}\n        fallBackName={this.props.fallBackName}\n        phoneNumber={this.props.phoneNumber}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onHangup={this.onHangup}\n        onTransfer={this.props.onTransfer}\n        showBackButton\n        backButtonLabel={i18n.getString('allCalls', this.props.currentLocale)}\n        onBackButtonClick={this.props.onBackButtonClick}\n        formatPhone={this.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        layout={callCtrlLayouts.normalCtrl}\n        startTime={this.props.activeSession.startTime}\n        actions={this.props.actions}\n        isOnMute={this.props.activeSession.isOnMute}\n        isOnHold={this.props.activeSession.isOnHold}\n        nameMatches={this.props.nameMatches}\n        onSelectMatcherName={this.onSelectMatcherName}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        controlBusy={this.props.controlBusy}\n      />\n    );\n  }\n}\n\nActiveCallControlPanel.propTypes = {\n  setActiveSessionId: PropTypes.func,\n  currentLocale: PropTypes.string,\n  sessionId: PropTypes.string,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  activeSession: PropTypes.object,\n  onBackButtonClick: PropTypes.func.isRequired,\n  activeCallControl: PropTypes.object,\n  nameMatches: PropTypes.array,\n  fallBackName: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  brand: PropTypes.string.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  controlBusy: PropTypes.bool,\n  actions: PropTypes.array,\n};\n\nActiveCallControlPanel.defaultProps = {\n  setActiveSessionId() {},\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSession: null,\n  sessionId: null,\n  nameMatches: [],\n  fallBackName: '',\n  phoneNumber: '',\n  showContactDisplayPlaceholder: false,\n  controlBusy: false,\n  actions: [muteCtrl, transferCtrl, holdCtrl],\n};\n\nexport default withPhone(connect(mapToProps, mapToFunctions)(ActiveCallControlPanel));\n"],"file":"index.js"}