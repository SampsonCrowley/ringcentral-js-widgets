{"version":3,"sources":["lib/selector/index.js"],"names":["WRAPPER","Symbol","selector","prototype","property","initializer","configurable","enumerable","get","targetSymbol","createSelector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,MAAM,CAAC,SAAD,CAAtB;AAEA;;;;;AAIO,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,QAA7B,QAAwD;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC7D,SAAO;AACLC,IAAAA,YAAY,EAAE,IADT;AAELC,IAAAA,UAAU,EAAE,IAFP;AAGLC,IAAAA,GAHK,iBAGC;AAAA;;AACJ,UAAI,CAAC,KAAKR,OAAL,CAAL,EAAoB;AAClB,aAAKA,OAAL,IAAgB,EAAhB;AACD;;AACD,UAAI,CAAC,KAAKA,OAAL,EAAcI,QAAd,CAAL,EAA8B;AAC5B,YAAMK,YAAY,GAAGR,MAAM,WAAIG,QAAJ,aAA3B;AAEA,aAAKK,YAAL,IAAqBC,0DAAwBL,WAAN,WAAlB,EAArB;;AAEA,aAAKL,OAAL,EAAcI,QAAd,IAA0B;AAAA,iBAAM,KAAI,CAACK,YAAD,CAAJ,EAAN;AAAA,SAA1B;AACD;;AACD,aAAO,KAAKT,OAAL,EAAcI,QAAd,GAAP;AACD;AAfI,GAAP;AAiBD","sourcesContent":["import { createSelector } from 'reselect';\n\nconst WRAPPER = Symbol('wrapper');\n\n/**\n * @function\n * @description Decorator function that convert a class method to a getter\n */\nexport function selector(prototype, property, { initializer }) {\n  return {\n    configurable: true,\n    enumerable: true,\n    get() {\n      if (!this[WRAPPER]) {\n        this[WRAPPER] = {};\n      }\n      if (!this[WRAPPER][property]) {\n        const targetSymbol = Symbol(`${property}-target`);\n\n        this[targetSymbol] = createSelector(...this::initializer());\n\n        this[WRAPPER][property] = () => this[targetSymbol]();\n      }\n      return this[WRAPPER][property]();\n    }\n  };\n}\n"],"file":"index.js"}