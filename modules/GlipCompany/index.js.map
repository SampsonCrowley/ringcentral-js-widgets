{"version":3,"sources":["modules/GlipCompany/index.js"],"names":["GlipCompany","deps","dep","optional","client","rolesAndPermissions","options","name","fetchFunction","_client","glip","companies","get","response","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","ensureExist","info","domain","id","hasGlipPermission","DataFetcher","selector","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaqBA,W;AAXrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAHI;AADA,CAAP,C;;;;;AAQC;;;;;AAKA,6BAIG;AAAA;;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,mBAEC,QAFDA,mBAEC;AAAA,QADEC,OACF;;AAAA;;AACD;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEH,MAAAA,MAAM,EAANA,MAFF;AAGEI,MAAAA,aAAa;AAAA;AAAA;AAAA,gCAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACU,MAAKC,OAAL,CAAaC,IAAb,GAAoBC,SAApB,CAA8B,GAA9B,EAAmCC,GAAnC,EADV;;AAAA;AACPC,kBAAAA,QADO;AAAA,mDAENA,QAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAOEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA,OAPhB;AAQEC,MAAAA,YAAY,EAAE;AARhB,OASKX,OATL;;AADC;;AAYD,UAAKS,oBAAL,GAA4B,oEAAMG,oBAAN,kBAAkBb,mBAAlB,EAAuC,qBAAvC,CAA5B;AAZC;AAaF;;;;wBAQU;AACT,aAAO,KAAKc,IAAL,CAAUZ,IAAjB;AACD;;;wBAEY;AACX,aAAO,KAAKY,IAAL,CAAUC,MAAjB;AACD;;;wBAEQ;AACP,aAAO,KAAKD,IAAL,CAAUE,EAAjB;AACD;;;wBAEoB;AACnB,aAAO,CAAC,CAAC,KAAKN,oBAAL,CAA0BO,iBAAnC;AACD;;;;EA7CsCC,qB,gFAyBtCC,kB;;;;;;;WACM,CACL;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KADK,EAEL,UAAAA,IAAI;AAAA,aAAIA,IAAI,IAAI,EAAZ;AAAA,KAFC,C","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport { selector } from '../../lib/selector';\nimport ensureExist from '../../lib/ensureExist';\n\n/**\n * @class\n * @description Glip Company managing module.\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'GLipCompanyOptions', optional: true }\n  ]\n})\nexport default class GlipCompany extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      name: 'glipCompany',\n      client,\n      fetchFunction: async () => {\n        const response = await this._client.glip().companies('~').get();\n        return response;\n      },\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n  }\n\n  @selector\n  info = [\n    () => this.data,\n    data => data || {},\n  ]\n\n  get name() {\n    return this.info.name;\n  }\n\n  get domain() {\n    return this.info.domain;\n  }\n\n  get id() {\n    return this.info.id;\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.hasGlipPermission;\n  }\n}\n"],"file":"index.js"}