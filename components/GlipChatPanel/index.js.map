{"version":3,"sources":["components/GlipChatPanel/index.js"],"names":["GlipChatPage","props","state","inputHeight","mobile","headerHeight","loadGroup","groupId","nextProps","group","className","posts","updateText","createPost","textValue","dateTimeFormatter","showSpinner","atRender","uploadFile","viewProfile","loadNextPage","onBackClick","spinner","backIcon","leftArrow","styles","root","header","height","lineHeight","content","id","members","length","inputArea","detailMembers","Component","propTypes","PropTypes","string","object","array","bool","func","isRequired","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SpinnerOverlay from 'ringcentral-widgets/components/SpinnerOverlay';\n\nimport styles from './styles.scss';\nimport leftArrow from '../../assets/images/left_arrow.png';\n\nimport GlipPostList from '../GlipPostList';\nimport GlipChatForm from '../GlipChatForm';\nimport GlipGroupName from '../GlipGroupName';\n\nexport default class GlipChatPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputHeight: props.mobile ? 80 : 110,\n      headerHeight: props.mobile ? 38 : 50,\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadGroup(this.props.groupId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.groupId !== nextProps.groupId) {\n      this.props.loadGroup(nextProps.groupId);\n    }\n  }\n\n  render() {\n    const {\n      group,\n      className,\n      posts,\n      updateText,\n      createPost,\n      textValue,\n      dateTimeFormatter,\n      showSpinner,\n      atRender,\n      uploadFile,\n      viewProfile,\n      loadNextPage,\n      onBackClick,\n      mobile,\n    } = this.props;\n    const spinner = showSpinner ? (<SpinnerOverlay />) : null;\n    // TODO: update alt with i18n\n    const backIcon =\n      onBackClick ? (\n        <img src={leftArrow} alt=\"Back\" className={styles.backIcon} onClick={onBackClick} />\n      ) : null;\n    return (\n      <div\n        className={classnames(\n          styles.root,\n          className,\n        )}\n      >\n        <div\n          className={styles.header}\n          style={{\n            height: this.state.headerHeight,\n            lineHeight: `${this.state.headerHeight}px`\n          }}\n        >\n          {backIcon}\n          <GlipGroupName group={group} showNumber />\n        </div>\n        <div\n          className={styles.content}\n          style={{ height: `calc(100% - ${this.state.inputHeight + this.state.headerHeight}px)` }}\n        >\n          <GlipPostList\n            posts={posts}\n            atRender={atRender}\n            groupId={group.id}\n            showName={group.members && (group.members.length > 2)}\n            dateTimeFormatter={dateTimeFormatter}\n            viewProfile={viewProfile}\n            loadNextPage={loadNextPage}\n          />\n        </div>\n        <GlipChatForm\n          className={styles.inputArea}\n          height={this.state.inputHeight}\n          textValue={textValue}\n          onTextChange={updateText}\n          groupId={group.id}\n          onSubmit={createPost}\n          onUploadFile={uploadFile}\n          members={group.detailMembers}\n          mobile={mobile}\n        />\n        {spinner}\n      </div>\n    );\n  }\n}\n\nGlipChatPage.propTypes = {\n  className: PropTypes.string,\n  group: PropTypes.object,\n  posts: PropTypes.array,\n  groupId: PropTypes.string,\n  textValue: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  loadGroup: PropTypes.func.isRequired,\n  updateText: PropTypes.func.isRequired,\n  createPost: PropTypes.func.isRequired,\n  uploadFile: PropTypes.func.isRequired,\n  dateTimeFormatter: PropTypes.func.isRequired,\n  atRender: PropTypes.func,\n  onBackClick: PropTypes.func,\n  viewProfile: PropTypes.func.isRequired,\n  loadNextPage: PropTypes.func.isRequired,\n  mobile: PropTypes.bool,\n};\n\nGlipChatPage.defaultProps = {\n  className: undefined,\n  groupId: null,\n  group: {},\n  posts: [],\n  textValue: '',\n  showSpinner: false,\n  atRender: undefined,\n  onBackClick: undefined,\n  mobile: false\n};\n"]}