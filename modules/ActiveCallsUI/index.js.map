{"version":3,"sources":["modules/ActiveCallsUI/index.js"],"names":["ActiveCallsUI","name","deps","dep","optional","brand","callLogger","callMonitor","locale","regionSettings","rolesAndPermissions","conferenceCall","callingSettings","connectivityMonitor","rateLimiter","activeCallControl","webphone","routerInteraction","composeText","contactSearch","contactMatcher","options","_brand","_callLogger","_callMonitor","_locale","_regionSettings","_rolesAndPermissions","_conferenceCall","_callingSettings","_connectivityMonitor","_rateLimiter","_activeCallControl","_webphone","_routerInteraction","_composeText","_contactSearch","_contactMatcher","showContactDisplayPlaceholder","showRingoutCallControl","useV2","isWebRTC","callingMode","callingModes","controlBusy","busy","currentLocale","activeRingCalls","activeOnHoldCalls","activeCurrentCalls","otherDeviceCalls","areaCode","countryCode","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","showSpinner","isMerging","fullName","autoLog","conferenceCallParties","partyProfiles","disableLinks","connectivity","throttling","composeTextRoute","callCtrlRoute","onCreateContact","onLogCall","isLoggedContact","onCallsEmpty","onViewContact","showViewContact","getAvatarUrl","formatPhone","phoneNumber","webphoneAnswer","sessionId","session","sessions","find","id","direction","callDirections","inbound","closeMergingPair","answer","webphoneToVoicemail","toVoiceMail","webphoneReject","reject","webphoneHangup","allCallsClickHangupTrack","hangup","webphoneResume","resume","currentPath","push","webphoneHold","allCallsClickHoldTrack","hold","ringoutHangup","hangUp","ringoutTransfer","ringoutReject","allCallsClickRejectTrack","contact","type","onClickToSms","isDummyContact","clean","updateTypingToNumber","search","searchString","addToRecipients","undefined","entityType","hasMatchNumber","ignoreCache","forceMatchNumber","call","redirect","logCall","length","isSessionAConferenceCall","isConferenceSession","onCallItemClick","webphoneSession","callItemClickTrack","toggleMinimized","updateSessionMatchedContact","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuBqBA,a,WArBpB,gBAAO;AACNC,EAAAA,IAAI,EAAE,eADA;AAENC,EAAAA,IAAI,EAAE,CACJ,OADI,EAEJ;AAAEC,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAFI,EAGJ,aAHI,EAIJ,QAJI,EAKJ,gBALI,EAMJ,qBANI,EAOJ;AAAED,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GAPI,EAQJ,iBARI,EASJ,qBATI,EAUJ,aAVI,EAWJ;AAAED,IAAAA,GAAG,EAAE,mBAAP;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GAXI,EAYJ;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAZI,EAaJ,mBAbI,EAcJ;AAAED,IAAAA,GAAG,EAAE,aAAP;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAdI,EAeJ,eAfI,EAgBJ,gBAhBI;AAFA,CAAP,C;;;;;AAsBC,+BAkBG;AAAA;;AAAA,QAjBDC,KAiBC,QAjBDA,KAiBC;AAAA,QAhBDC,UAgBC,QAhBDA,UAgBC;AAAA,QAfDC,WAeC,QAfDA,WAeC;AAAA,QAdDC,MAcC,QAdDA,MAcC;AAAA,QAbDC,cAaC,QAbDA,cAaC;AAAA,QAZDC,mBAYC,QAZDA,mBAYC;AAAA,QAXDC,cAWC,QAXDA,cAWC;AAAA,QAVDC,eAUC,QAVDA,eAUC;AAAA,QATDC,mBASC,QATDA,mBASC;AAAA,QARDC,WAQC,QARDA,WAQC;AAAA,QAPDC,iBAOC,QAPDA,iBAOC;AAAA,QANDC,QAMC,QANDA,QAMC;AAAA,QALDC,iBAKC,QALDA,iBAKC;AAAA,QAJDC,WAIC,QAJDA,WAIC;AAAA,QAHDC,aAGC,QAHDA,aAGC;AAAA,QAFDC,cAEC,QAFDA,cAEC;AAAA,QADEC,OACF;;AAAA;;AACD,yGACKA,OADL;AAGA,UAAKC,MAAL,GAAcjB,KAAd;AACA,UAAKkB,WAAL,GAAmBjB,UAAnB;AACA,UAAKkB,YAAL,GAAoBjB,WAApB;AACA,UAAKkB,OAAL,GAAejB,MAAf;AACA,UAAKkB,eAAL,GAAuBjB,cAAvB;AACA,UAAKkB,oBAAL,GAA4BjB,mBAA5B;AACA,UAAKkB,eAAL,GAAuBjB,cAAvB;AACA,UAAKkB,gBAAL,GAAwBjB,eAAxB;AACA,UAAKkB,oBAAL,GAA4BjB,mBAA5B;AACA,UAAKkB,YAAL,GAAoBjB,WAApB;AACA,UAAKkB,kBAAL,GAA0BjB,iBAA1B;AACA,UAAKkB,SAAL,GAAiBjB,QAAjB;AACA,UAAKkB,kBAAL,GAA0BjB,iBAA1B;AACA,UAAKkB,YAAL,GAAoBjB,WAApB;AACA,UAAKkB,cAAL,GAAsBjB,aAAtB;AACA,UAAKkB,eAAL,GAAuBjB,cAAvB;AAnBC;AAoBF;;;;sCAME;AAAA,wCAHDkB,6BAGC;AAAA,UAHDA,6BAGC,sCAH+B,KAG/B;AAAA,wCAFDC,sBAEC;AAAA,UAFDA,sBAEC,sCAFwB,KAExB;AAAA,UADDC,KACC,SADDA,KACC;AACD,UAAMC,QAAQ,GAAG,KAAKZ,gBAAL,CAAsBa,WAAtB,KAAsCC,yBAAa3B,QAApE;AACA,UAAM4B,WAAW,GAAG,KAAKZ,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBa,IAAnD,IAA2D,KAA/E;AAEA,aAAO;AACLC,QAAAA,aAAa,EAAE,KAAKrB,OAAL,CAAaqB,aADvB;AAELC,QAAAA,eAAe,EAAE,KAAKvB,YAAL,CAAkBuB,eAF9B;AAGLC,QAAAA,iBAAiB,EAAE,KAAKxB,YAAL,CAAkBwB,iBAHhC;AAILC,QAAAA,kBAAkB,EAAE,KAAKzB,YAAL,CAAkByB,kBAJjC;AAKLC,QAAAA,gBAAgB,EAAE,KAAK1B,YAAL,CAAkB0B,gBAL/B;AAMLC,QAAAA,QAAQ,EAAE,KAAKzB,eAAL,CAAqByB,QAN1B;AAOLC,QAAAA,WAAW,EAAE,KAAK1B,eAAL,CAAqB0B,WAP7B;AAQLC,QAAAA,qBAAqB,EAAE,CAAC,EACtB,KAAK1B,oBAAL,CAA0B2B,WAA1B,IACA,KAAK3B,oBAAL,CAA0B2B,WAA1B,CAAsCC,WAFhB,CARnB;AAYLC,QAAAA,qBAAqB,EAAE,CAAC,EACtB,KAAK7B,oBAAL,CAA0B2B,WAA1B,IACA,KAAK3B,oBAAL,CAA0B2B,WAA1B,CAAsCG,WAFhB,CAZnB;AAgBLC,QAAAA,WAAW,EAAE,CAAC,EAAE,KAAK9B,eAAL,IAAwB,KAAKA,eAAL,CAAqB+B,SAA/C,CAhBT;AAiBLtD,QAAAA,KAAK,EAAE,KAAKiB,MAAL,CAAYsC,QAjBd;AAkBLtB,QAAAA,6BAA6B,EAA7BA,6BAlBK;AAmBLC,QAAAA,sBAAsB,EAAtBA,sBAnBK;AAoBLsB,QAAAA,OAAO,EAAE,CAAC,EAAE,KAAKtC,WAAL,IAAoB,KAAKA,WAAL,CAAiBsC,OAAvC,CApBL;AAqBLpB,QAAAA,QAAQ,EAARA,QArBK;AAsBLqB,QAAAA,qBAAqB,EAAE,KAAKlC,eAAL,GAAuB,KAAKA,eAAL,CAAqBmC,aAA5C,GAA4D,IAtB9E;AAuBLvB,QAAAA,KAAK,EAALA,KAvBK;AAwBLwB,QAAAA,YAAY,EACV,CAAC,KAAKlC,oBAAL,CAA0BmC,YAA3B,IACA,KAAKlC,YAAL,CAAkBmC,UADlB,IAEAtB;AA3BG,OAAP;AA8BD;;;0CAaE;AAAA;;AAAA,wCAVDuB,gBAUC;AAAA,UAVDA,gBAUC,sCAVkB,cAUlB;AAAA,sCATDC,aASC;AAAA,UATDA,aASC,oCATe,eASf;AAAA,UARDC,eAQC,SARDA,eAQC;AAAA,UAPDC,SAOC,SAPDA,SAOC;AAAA,UANDC,eAMC,SANDA,eAMC;AAAA,UALDC,YAKC,SALDA,YAKC;AAAA,UAJDC,aAIC,SAJDA,aAIC;AAAA,wCAHDC,eAGC;AAAA,UAHDA,eAGC,sCAHiB,IAGjB;AAAA,UAFDC,YAEC,SAFDA,YAEC;AAAA,UADDnC,KACC,SADDA,KACC;AACD,aAAO;AACLoC,QAAAA,WAAW,EAAE,qBAAAC,WAAW;AAAA,iBAAI,8BAAa;AACvCA,YAAAA,WAAW,EAAXA,WADuC;AAEvC1B,YAAAA,QAAQ,EAAE,MAAI,CAACzB,eAAL,CAAqByB,QAFQ;AAGvCC,YAAAA,WAAW,EAAE,MAAI,CAAC1B,eAAL,CAAqB0B;AAHK,WAAb,CAAJ;AAAA,SADnB;AAML0B,QAAAA,cAAc;AAAA;AAAA;AAAA,kCAAE,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACT,MAAI,CAAC9C,SADI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKR+C,oBAAAA,OALQ,GAKE,MAAI,CAAC/C,SAAL,CAAegD,QAAf,CAAwBC,IAAxB,CAA6B,UAAAF,OAAO;AAAA,6BAAIA,OAAO,CAACG,EAAR,KAAeJ,SAAnB;AAAA,qBAApC,CALF;;AAMd,wBACE,MAAI,CAACnD,eAAL,IACAoD,OADA,IAEAA,OAAO,CAACI,SAAR,KAAsBC,2BAAeC,OAHvC,EAIE;AACA,sBAAA,MAAI,CAAC1D,eAAL,CAAqB2D,gBAArB;AACD;;AAED,oBAAA,MAAI,CAACtD,SAAL,CAAeuD,MAAf,CAAsBT,SAAtB;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WANT;AAsBLU,QAAAA,mBAAmB;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACnB,MAAI,CAACxD,SAAL,IAAkB,oBAAA,MAAI,CAACA,SAAL,EAAeyD,WAAf,gCADC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAtBd;AAyBLC,QAAAA,cAAc;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAoB,MAAI,CAAC1D,SAAL,IAAkB,qBAAA,MAAI,CAACA,SAAL,EAAe2D,MAAf,iCAAtC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAzBT;AA0BLC,QAAAA,cAAc;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACd;AACA,oBAAA,MAAI,CAACrE,YAAL,CAAkBsE,wBAAlB;;AAFc,sDAGN,MAAI,CAAC7D,SAAL,IAAkB,qBAAA,MAAI,CAACA,SAAL,EAAe8D,MAAf,iCAHZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WA1BT;AA+BLC,QAAAA,cAAc;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACT,MAAI,CAAC/D,SADI;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,2BAIR,qBAAA,MAAI,CAACA,SAAL,EAAegE,MAAf,iCAJQ;;AAAA;AAKd,wBAAI,MAAI,CAAC/D,kBAAL,CAAwBgE,WAAxB,KAAwC9B,aAAxC,IAAyD,CAAC5B,KAA9D,EAAqE;AACnE,sBAAA,MAAI,CAACN,kBAAL,CAAwBiE,IAAxB,CAA6B/B,aAA7B;AACD;;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WA/BT;AAwCLgC,QAAAA,YAAY;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ;AACA,oBAAA,MAAI,CAAC5E,YAAL,CAAkB6E,sBAAlB;;AAFY,sDAGJ,MAAI,CAACpE,SAAL,IAAkB,qBAAA,MAAI,CAACA,SAAL,EAAeqE,IAAf,iCAHd;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAxCP;AA6CLC,QAAAA,aAAa;AAAA;AAAA;AAAA,kCAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACb;AACA,oBAAA,MAAI,CAAC/E,YAAL,CAAkBsE,wBAAlB;;AAFa,sDAGL,MAAI,CAAC9D,kBAAL,IAA2B,yBAAA,MAAI,CAACA,kBAAL,EAAwBwE,MAAxB,qCAHtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WA7CR;AAkDLC,QAAAA,eAAe;AAAA;AAAA;AAAA,kCAAE,kBAAO1B,SAAP;AAAA;AAAA;AAAA;AAAA;AACf,oBAAA,MAAI,CAAC7C,kBAAL,CAAwBiE,IAAxB,qBAA0CpB,SAA1C;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WAlDV;AAqDL2B,QAAAA,aAAa;AAAA;AAAA;AAAA,kCAAE,kBAAO3B,SAAP;AAAA;AAAA;AAAA;AAAA;AACb;AACA,oBAAA,MAAI,CAACvD,YAAL,CAAkBmF,wBAAlB;;AAFa,sDAGL,MAAI,CAAC3E,kBAAL,IAA2B,MAAI,CAACA,kBAAL,CAAwB4D,MAAxB,CAA+Bb,SAA/B,CAHtB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WArDR;AA0DLN,QAAAA,aAAa,EAAEC,eAAe,GAC3BD,aAAa,IAAK,iBAAiB;AAAA,cAAdmC,OAAc,SAAdA,OAAc;AAAA,cAC1BzB,EAD0B,GACbyB,OADa,CAC1BzB,EAD0B;AAAA,cACtB0B,IADsB,GACbD,OADa,CACtBC,IADsB;;AAElC,UAAA,MAAI,CAAC3E,kBAAL,CAAwBiE,IAAxB,qBAA0CU,IAA1C,cAAkD1B,EAAlD;AACD,SAJ2B,GAItB,IA9DH;AA+DL2B,QAAAA,YAAY,EAAE,KAAK3E,YAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kCACZ,mBAAOyE,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBG,oBAAAA,cAAhB,iEAAiC,KAAjC;;AACE,wBAAI,MAAI,CAAC7E,kBAAT,EAA6B;AAC3B,sBAAA,MAAI,CAACA,kBAAL,CAAwBiE,IAAxB,CAA6BhC,gBAA7B;AACD;;AACD,oBAAA,MAAI,CAAChC,YAAL,CAAkB6E,KAAlB;;AACA,wBAAIJ,OAAO,CAAC3G,IAAR,IAAgB2G,OAAO,CAAC/B,WAAxB,IAAuCkC,cAA3C,EAA2D;AACzD,sBAAA,MAAI,CAAC5E,YAAL,CAAkB8E,oBAAlB,CAAuCL,OAAO,CAAC3G,IAA/C;;AACA,sBAAA,MAAI,CAACmC,cAAL,CAAoB8E,MAApB,CAA2B;AAAEC,wBAAAA,YAAY,EAAEP,OAAO,CAAC3G;AAAxB,uBAA3B;AACD,qBAHD,MAGO;AACL,sBAAA,MAAI,CAACkC,YAAL,CAAkBiF,eAAlB,CAAkCR,OAAlC;AACD;;AAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;;AAAA;AAAA;AAAA;AAAA,cAaZS,SA5EG;AA6ELhD,QAAAA,eAAe,EAAEA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASQ,oBAAAA,WAAT,SAASA,WAAT,EAAsB5E,IAAtB,SAAsBA,IAAtB,EAA4BqH,UAA5B,SAA4BA,UAA5B;AAAA;AAAA,2BAC+B,MAAI,CAACjF,eAAL,CAAqBkF,cAArB,CAAoC;AAC/D1C,sBAAAA,WAAW,EAAXA,WAD+D;AAE/D2C,sBAAAA,WAAW,EAAE;AAFkD,qBAApC,CAD/B;;AAAA;AACQD,oBAAAA,cADR;;AAAA,wBAKOA,cALP;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAMUlD,eAAe,CAAC;AAAEQ,sBAAAA,WAAW,EAAXA,WAAF;AAAe5E,sBAAAA,IAAI,EAAJA,IAAf;AAAqBqH,sBAAAA,UAAU,EAAVA;AAArB,qBAAD,CANzB;;AAAA;AAAA;AAAA,2BAOU,MAAI,CAACjF,eAAL,CAAqBoF,gBAArB,CAAsC;AAAE5C,sBAAAA,WAAW,EAAXA;AAAF,qBAAtC,CAPV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD8B;;AAAA;AAAA;AAAA;AAAA,cAW9BwC,SAxFG;AAyFL9C,QAAAA,eAAe,EAAfA,eAzFK;AA0FLD,QAAAA,SAAS,EAAEA,SAAS,IACjB,KAAK/C,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAqB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASmG,oBAAAA,IAAT,SAASA,IAAT,EAAed,OAAf,SAAeA,OAAf,yBAAwBe,QAAxB,EAAwBA,QAAxB,+BAAmC,IAAnC;AAAA;AAAA,2BACd,MAAI,CAACpG,WAAL,CAAiBqG,OAAjB,CAAyB;AAC7BF,sBAAAA,IAAI,EAAJA,IAD6B;AAE7Bd,sBAAAA,OAAO,EAAPA,OAF6B;AAG7Be,sBAAAA,QAAQ,EAARA;AAH6B,qBAAzB,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArB;;AAAA;AAAA;AAAA;AAAA,WA3FE;AAkGLnD,QAAAA,YAAY,EAAEA,YAAY,IAAK,YAAM;AACnC,cAAM/B,QAAQ,GAAG,MAAI,CAACZ,gBAAL,CAAsBa,WAAtB,KAAsCC,yBAAa3B,QAApE;;AAEA,cAAIyB,QAAQ,IAAI,CAAC,MAAI,CAACR,SAAL,CAAegD,QAAf,CAAwB4C,MAAzC,EAAiD;AAC/C,YAAA,MAAI,CAAC3F,kBAAL,CAAwBiE,IAAxB,CAA6B,SAA7B;AACD;AACF,SAxGI;AAyGL2B,QAAAA,wBAAwB,EAAE,kCAAA/C,SAAS;AAAA,iBAAI,CAAC,EACtC,MAAI,CAACnD,eAAL,IAAwB,MAAI,CAACA,eAAL,CAAqBmG,mBAArB,CAAyChD,SAAzC,CADc,CAAL;AAAA,SAzG9B;AA4GLiD,QAAAA,eAAe,EAAE,yBAACN,IAAD,EAAU;AACzB,cAAI,CAACA,IAAI,CAACO,eAAV,EAA2B;AACzB;AACA,gBAAI,0CAAqBP,IAArB,CAAJ,EAAgC;AAC9B;AACD;;AAJwB,gBAMjB3C,SANiB,GAMH2C,IANG,CAMjB3C,SANiB,EAOzB;;AACA,YAAA,MAAI,CAACvD,YAAL,CAAkB0G,kBAAlB;;AACA,YAAA,MAAI,CAAChG,kBAAL,CAAwBiE,IAAxB,6BAAkDpB,SAAlD;AACD,WAVD,MAUO;AACL;AACA;AACA,gBAAI,0CAAqB2C,IAArB,CAAJ,EAAgC;AAC9B,cAAA,MAAI,CAACzF,SAAL,CAAekG,eAAf,CAA+BT,IAAI,CAACO,eAAL,CAAqB9C,EAApD;;AACA;AACD;;AACD,gBAAIuC,IAAI,CAACO,eAAL,IAAwBP,IAAI,CAACO,eAAL,CAAqB9C,EAAjD,EAAqD;AACnD;AACA,cAAA,MAAI,CAAC3D,YAAL,CAAkB0G,kBAAlB;;AACA,cAAA,MAAI,CAAChG,kBAAL,CAAwBiE,IAAxB,WAAgC/B,aAAhC,cAAiDsD,IAAI,CAACO,eAAL,CAAqB9C,EAAtE;AACD;AACF;AACF,SApII;AAqILR,QAAAA,YAAY,EAAZA,YArIK;AAsILyD,QAAAA,2BAA2B,EAAE,qCAACrD,SAAD,EAAY6B,OAAZ;AAAA,iBAC3B,MAAI,CAAC3E,SAAL,CAAemG,2BAAf,CAA2CrD,SAA3C,EAAsD6B,OAAtD,CAD2B;AAAA;AAtIxB,OAAP;AA0ID;;;;EAvOwCyB,uB","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport { isRingingInboundCall } from 'ringcentral-integration/lib/callLogHelpers';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ActiveCallsUI',\n  deps: [\n    'Brand',\n    { dep: 'CallLogger', optional: true },\n    'CallMonitor',\n    'Locale',\n    'RegionSettings',\n    'RolesAndPermissions',\n    { dep: 'ConferenceCall', optional: true },\n    'CallingSettings',\n    'ConnectivityMonitor',\n    'RateLimiter',\n    { dep: 'ActiveCallControl', optional: true },\n    { dep: 'Webphone', optional: true },\n    'RouterInteraction',\n    { dep: 'ComposeText', optional: true },\n    'ContactSearch',\n    'ContactMatcher'\n  ]\n})\nexport default class ActiveCallsUI extends RcUIModule {\n  constructor({\n    brand,\n    callLogger,\n    callMonitor,\n    locale,\n    regionSettings,\n    rolesAndPermissions,\n    conferenceCall,\n    callingSettings,\n    connectivityMonitor,\n    rateLimiter,\n    activeCallControl,\n    webphone,\n    routerInteraction,\n    composeText,\n    contactSearch,\n    contactMatcher,\n    ...options\n  }) {\n    super({\n      ...options\n    });\n    this._brand = brand;\n    this._callLogger = callLogger;\n    this._callMonitor = callMonitor;\n    this._locale = locale;\n    this._regionSettings = regionSettings;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._conferenceCall = conferenceCall;\n    this._callingSettings = callingSettings;\n    this._connectivityMonitor = connectivityMonitor;\n    this._rateLimiter = rateLimiter;\n    this._activeCallControl = activeCallControl;\n    this._webphone = webphone;\n    this._routerInteraction = routerInteraction;\n    this._composeText = composeText;\n    this._contactSearch = contactSearch;\n    this._contactMatcher = contactMatcher;\n  }\n\n  getUIProps({\n    showContactDisplayPlaceholder = false,\n    showRingoutCallControl = false,\n    useV2\n  }) {\n    const isWebRTC = this._callingSettings.callingMode === callingModes.webphone;\n    const controlBusy = this._activeCallControl && this._activeCallControl.busy || false;\n\n    return {\n      currentLocale: this._locale.currentLocale,\n      activeRingCalls: this._callMonitor.activeRingCalls,\n      activeOnHoldCalls: this._callMonitor.activeOnHoldCalls,\n      activeCurrentCalls: this._callMonitor.activeCurrentCalls,\n      otherDeviceCalls: this._callMonitor.otherDeviceCalls,\n      areaCode: this._regionSettings.areaCode,\n      countryCode: this._regionSettings.countryCode,\n      outboundSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.OutboundSMS\n      ),\n      internalSmsPermission: !!(\n        this._rolesAndPermissions.permissions &&\n        this._rolesAndPermissions.permissions.InternalSMS\n      ),\n      showSpinner: !!(this._conferenceCall && this._conferenceCall.isMerging),\n      brand: this._brand.fullName,\n      showContactDisplayPlaceholder,\n      showRingoutCallControl,\n      autoLog: !!(this._callLogger && this._callLogger.autoLog),\n      isWebRTC,\n      conferenceCallParties: this._conferenceCall ? this._conferenceCall.partyProfiles : null,\n      useV2,\n      disableLinks: (\n        !this._connectivityMonitor.connectivity ||\n        this._rateLimiter.throttling ||\n        controlBusy\n      ),\n    };\n  }\n\n  getUIFunctions({\n    composeTextRoute = '/composeText',\n    callCtrlRoute = '/calls/active',\n    onCreateContact,\n    onLogCall,\n    isLoggedContact,\n    onCallsEmpty,\n    onViewContact,\n    showViewContact = true,\n    getAvatarUrl,\n    useV2,\n  }) {\n    return {\n      formatPhone: phoneNumber => formatNumber({\n        phoneNumber,\n        areaCode: this._regionSettings.areaCode,\n        countryCode: this._regionSettings.countryCode,\n      }),\n      webphoneAnswer: async (sessionId) => {\n        if (!this._webphone) {\n          return;\n        }\n\n        const session = this._webphone.sessions.find(session => session.id === sessionId);\n        if (\n          this._conferenceCall &&\n          session &&\n          session.direction === callDirections.inbound\n        ) {\n          this._conferenceCall.closeMergingPair();\n        }\n\n        this._webphone.answer(sessionId);\n      },\n      webphoneToVoicemail: async (...args) => (\n        this._webphone && this._webphone.toVoiceMail(...args)\n      ),\n      webphoneReject: async (...args) => (this._webphone && this._webphone.reject(...args)),\n      webphoneHangup: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        return (this._webphone && this._webphone.hangup(...args));\n      },\n      webphoneResume: async (...args) => {\n        if (!this._webphone) {\n          return;\n        }\n        await this._webphone.resume(...args);\n        if (this._routerInteraction.currentPath !== callCtrlRoute && !useV2) {\n          this._routerInteraction.push(callCtrlRoute);\n        }\n      },\n      webphoneHold: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHoldTrack();\n        return (this._webphone && this._webphone.hold(...args));\n      },\n      ringoutHangup: async (...args) => {\n        // user action track\n        this._callMonitor.allCallsClickHangupTrack();\n        return (this._activeCallControl && this._activeCallControl.hangUp(...args));\n      },\n      ringoutTransfer: async (sessionId) => {\n        this._routerInteraction.push(`/transfer/${sessionId}/active`);\n      },\n      ringoutReject: async (sessionId) => {\n        // user action track\n        this._callMonitor.allCallsClickRejectTrack();\n        return (this._activeCallControl && this._activeCallControl.reject(sessionId));\n      },\n      onViewContact: showViewContact ?\n        (onViewContact || (({ contact }) => {\n          const { id, type } = contact;\n          this._routerInteraction.push(`/contacts/${type}/${id}?direct=true`);\n        })) : null,\n      onClickToSms: this._composeText ?\n        async (contact, isDummyContact = false) => {\n          if (this._routerInteraction) {\n            this._routerInteraction.push(composeTextRoute);\n          }\n          this._composeText.clean();\n          if (contact.name && contact.phoneNumber && isDummyContact) {\n            this._composeText.updateTypingToNumber(contact.name);\n            this._contactSearch.search({ searchString: contact.name });\n          } else {\n            this._composeText.addToRecipients(contact);\n          }\n        } :\n        undefined,\n      onCreateContact: onCreateContact ?\n        async ({ phoneNumber, name, entityType }) => {\n          const hasMatchNumber = await this._contactMatcher.hasMatchNumber({\n            phoneNumber,\n            ignoreCache: true\n          });\n          if (!hasMatchNumber) {\n            await onCreateContact({ phoneNumber, name, entityType });\n            await this._contactMatcher.forceMatchNumber({ phoneNumber });\n          }\n        } :\n        undefined,\n      isLoggedContact,\n      onLogCall: onLogCall ||\n        (this._callLogger && (async ({ call, contact, redirect = true }) => {\n          await this._callLogger.logCall({\n            call,\n            contact,\n            redirect,\n          });\n        })),\n      onCallsEmpty: onCallsEmpty || (() => {\n        const isWebRTC = this._callingSettings.callingMode === callingModes.webphone;\n\n        if (isWebRTC && !this._webphone.sessions.length) {\n          this._routerInteraction.push('/dialer');\n        }\n      }),\n      isSessionAConferenceCall: sessionId => !!(\n        this._conferenceCall && this._conferenceCall.isConferenceSession(sessionId)\n      ),\n      onCallItemClick: (call) => {\n        if (!call.webphoneSession) {\n          // For ringout call\n          if (isRingingInboundCall(call)) {\n            return;\n          }\n\n          const { sessionId } = call;\n          // to track the call item be clicked.\n          this._callMonitor.callItemClickTrack();\n          this._routerInteraction.push(`/simplifycallctrl/${sessionId}`);\n        } else {\n          // For webphone call\n          // show the ring call modal when click a ringing call.\n          if (isRingingInboundCall(call)) {\n            this._webphone.toggleMinimized(call.webphoneSession.id);\n            return;\n          }\n          if (call.webphoneSession && call.webphoneSession.id) {\n            // to track the call item be clicked.\n            this._callMonitor.callItemClickTrack();\n            this._routerInteraction.push(`${callCtrlRoute}/${call.webphoneSession.id}`);\n          }\n        }\n      },\n      getAvatarUrl,\n      updateSessionMatchedContact: (sessionId, contact) => (\n        this._webphone.updateSessionMatchedContact(sessionId, contact)\n      ),\n    };\n  }\n}\n"],"file":"index.js"}