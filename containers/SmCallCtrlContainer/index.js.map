{"version":3,"sources":["containers/SmCallCtrlContainer/index.js"],"names":["mapToProps","_","phone","activeCallControl","activeSessions","mapToFunctions","mute","bind","unmute","hangUp","reject","getActiveSession","SmCallCtrlContainer","props","currentLocale","sessionId","currentSession","onMute","onUnmute","onHangup","onReject","isOnMute","callStatus","callDirection","direction","Component","propTypes","PropTypes","string","object","status","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * @file small call contrl\n * detail: https://jira.ringcentral.com/browse/RCINT-8248\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport SmCallContrl from '../../components/SmCallControl';\nimport withPhone from '../../lib/withPhone';\n\nfunction mapToProps(_, { phone }) {\n  const {\n    activeCallControl,\n  } = phone;\n  const { activeSessions } = activeCallControl;\n  return {\n    activeCallControl,\n    activeSessions\n  };\n}\n\nfunction mapToFunctions(_, { phone }) {\n  const { activeCallControl } = phone;\n  return {\n    mute: activeCallControl.mute.bind(activeCallControl),\n    unmute: activeCallControl.unmute.bind(activeCallControl),\n    hangUp: activeCallControl.hangUp.bind(activeCallControl),\n    reject: activeCallControl.reject.bind(activeCallControl),\n    getActiveSession: activeCallControl.getActiveSession.bind(activeCallControl)\n  };\n}\n\n/* eslint-disable react/prefer-stateless-function */\nclass SmCallCtrlContainer extends Component {\n  render() {\n    const {\n      currentLocale,\n      sessionId,\n    } = this.props;\n    const currentSession = this.props.getActiveSession(sessionId);\n    if (!currentSession) {\n      return null;\n    }\n    const props = {\n      onMute: async () => this.props.mute(sessionId),\n      onUnmute: async () => this.props.unmute(sessionId),\n      onHangup: async () => this.props.hangUp(sessionId),\n      onReject: async () => this.props.reject(sessionId),\n      isOnMute: currentSession.isOnMute,\n      callStatus: currentSession.callStatus,\n      callDirection: currentSession.direction,\n      currentLocale\n    };\n    return <SmCallContrl {...props} />;\n  }\n}\nSmCallCtrlContainer.propTypes = {\n  currentLocale: PropTypes.string,\n  activeCallControl: PropTypes.object,\n  activeSessions: PropTypes.object,\n  sessionId: PropTypes.string,\n  status: PropTypes.string,\n  mute: PropTypes.func.isRequired,\n  unmute: PropTypes.func.isRequired,\n  hangUp: PropTypes.func.isRequired,\n  reject: PropTypes.func.isRequired,\n  getActiveSession: PropTypes.func,\n};\n\nSmCallCtrlContainer.defaultProps = {\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSessions: {},\n  sessionId: '',\n  status: '',\n  getActiveSession: () => null\n};\nexport default withPhone(connect(mapToProps, mapToFunctions)(SmCallCtrlContainer));\n"],"file":"index.js"}