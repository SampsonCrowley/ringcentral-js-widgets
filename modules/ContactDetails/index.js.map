{"version":3,"sources":["modules/ContactDetails/index.js"],"names":["ContactDetails","deps","dep","optional","contacts","options","actionTypes","_contacts","_reducer","addSelector","condition","allContacts","find","currentContact","phoneNumbers","rawPhoneNumbers","length","phoneMaps","acc","phoneNumberElm","phoneType","push","schema","key","phoneTypes","Array","isArray","phoneTypeOrder","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","_shouldReset","resetSuccess","ready","pending","id","updateCondition","resetCondition","contact","getProfileImage","getPresence","clickToSMS","clickToCall","_selectors","currentSortedContact","state","status","RcModule","background","proxify"],"mappings":"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","sourcesContent":["import { filter, reduce } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport getContactDetailsReducer from './getContactDetailsReducer';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport phoneTypes from '../../enums/phoneTypes';\nimport { phoneTypeOrder } from '../../lib/phoneTypeHelper';\n\n@Module({\n  deps: [\n    'Contacts',\n    { dep: 'ContactDetailsOptions', optional: true }\n  ]\n})\nexport default class ContactDetails extends RcModule {\n  constructor({ contacts, ...options }) {\n    super({ ...options, actionTypes });\n\n    this._contacts = contacts;\n    this._reducer = getContactDetailsReducer(this.actionTypes);\n\n    this.addSelector(\n      'currentContact',\n      () => this.condition,\n      () => this._contacts.allContacts,\n      (condition) => {\n        if (condition) { return this._contacts.find(condition); }\n        return null;\n      }\n    );\n\n    this.addSelector(\n      'currentSortedContact',\n      () => this.currentContact,\n      (currentContact) => {\n        if (!currentContact) return null;\n        let phoneNumbers;\n        if (currentContact.rawPhoneNumbers && currentContact.rawPhoneNumbers.length > 0) {\n          phoneNumbers = currentContact.rawPhoneNumbers;\n        } else {\n          phoneNumbers = currentContact.phoneNumbers;\n        }\n        const phoneMaps = reduce((acc, phoneNumberElm) => {\n          acc[phoneNumberElm.phoneType] = acc[phoneNumberElm.phoneType] || [];\n          acc[phoneNumberElm.phoneType].push(phoneNumberElm);\n          return acc;\n        }, {}, phoneNumbers);\n\n        const schema = filter(\n          key => (!!phoneTypes[key] && Array.isArray(phoneMaps[key])),\n          phoneTypeOrder,\n        );\n        return { ...currentContact, schema, phoneMaps };\n      }\n    );\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._contacts.ready &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      !this._contacts.ready &&\n      this.ready\n    );\n  }\n\n  /**\n   * Find contact from all contacts by given conditions.\n   * Stores search conditions to reducers.\n   */\n  @background\n  find({ id, type }) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCondition,\n      condition: {\n        id,\n        type\n      }\n    });\n  }\n\n  @background\n  clear() {\n    this.store.dispatch({\n      type: this.actionTypes.resetCondition\n    });\n  }\n\n  @background\n  getProfileImage(contact) {\n    return this._contacts.getProfileImage(contact, false);\n  }\n\n  @background\n  getPresence(contact) {\n    return this._contacts.getPresence(contact, false);\n  }\n\n  // for track click to sms in contact detail\n  @proxify\n  onClickToSMS() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n\n  // for track click to call in contact detail\n  @proxify\n  onClickToCall() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToCall,\n    });\n  }\n\n  get currentContact() {\n    return this._selectors.currentContact();\n  }\n\n  get contact() {\n    return this._selectors.currentSortedContact();\n  }\n\n  get condition() {\n    return this.state.condition;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}