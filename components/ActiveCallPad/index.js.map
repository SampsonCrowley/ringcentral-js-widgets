{"version":3,"sources":["components/ActiveCallPad/index.js"],"names":["MoreActionItem","DisplayButtonNumber","title","Icon","icon","disabled","onClick","iconClassName","styles","buttonIcon","buttonDisabled","buttonActive","buttonItem","buttonName","propTypes","PropTypes","string","isRequired","func","bool","ActiveCallPad","props","moreButton","dropdown","toggleMore","state","expandMore","current","e","dom","contains","target","setState","prevState","document","body","addEventListener","removeEventListener","nextProps","showUpdate","p","Object","prototype","hasOwnProperty","val","buttons","push","isOnMute","MuteIcon","i18n","getString","currentLocale","isOnHold","onUnmute","UnmuteIcon","onMute","KeypadIcon","onShowKeyPad","layout","callCtrlLayouts","conferenceCtrl","HoldIcon","iconWidth","iconHeight","iconX","iconY","active","onUnhold","onHold","conferenceCallEquipped","showMerge","mergeCtrl","normalCtrl","hasConferenceCall","MergeIcon","mergeDisabled","onMerge","showRipple","CombineIcon","addDisabled","onAdd","RecordIcon","recordStatus","recording","pending","noAccess","onStopRecord","onRecord","disabledTransfer","TransferIcon","onToggleTransferPanel","disabledFlip","flipNumbers","length","FlipIcon","onShowFlipPanel","moreActions","moreButtonContainer","callButton","MoreIcon","buttonPopup","slice","map","opts","root","className","callCtrlButtonGroup","buttonRow","stopButtonGroup","button","stopButton","onHangup","EndIcon","Component","array","defaultProps","undefined"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport recordStatus from 'ringcentral-integration/modules/Webphone/recordStatus';\nimport { isObject } from 'ringcentral-integration/lib/di/utils/is_type';\n\nimport CircleButton from '../CircleButton';\nimport Tooltip from '../Tooltip';\nimport ActiveCallButton from '../ActiveCallButton';\nimport MuteIcon from '../../assets/images/Mute.svg';\nimport UnmuteIcon from '../../assets/images/Unmute.svg';\nimport KeypadIcon from '../../assets/images/Dialpad.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\n// import ParkIcon from '../../assets/images/Park.svg';\nimport RecordIcon from '../../assets/images/Record.svg';\n// import AddIcon from '../../assets/images/AddCall.svg';\nimport MoreIcon from '../../assets/images/MoreIcon.svg';\nimport TransferIcon from '../../assets/images/Transfer.svg';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport CombineIcon from '../../assets/images/Combine.svg';\nimport MergeIcon from '../../assets/images/MergeIntoConferenceIcon.svg';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst DisplayButtonNumber = 6;\n\nexport function MoreActionItem({\n  title,\n  icon: Icon,\n  disabled,\n  onClick,\n}) {\n  const iconClassName = classnames(\n    styles.buttonIcon,\n    disabled ? styles.buttonDisabled : styles.buttonActive\n  );\n  return (\n    <div\n      className={styles.buttonItem}\n      onClick={disabled ? null : onClick}>\n      <div className={iconClassName}>\n        {<Icon />}\n      </div>\n      <div className={styles.buttonName}>\n        {title}\n      </div>\n    </div>\n  );\n}\n\nMoreActionItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nclass ActiveCallPad extends Component {\n  constructor(props) {\n    super(props);\n    this.moreButton = createRef();\n    this.dropdown = createRef();\n    this.onClick = this:: this.onClick;\n    this.toggleMore = this:: this.toggleMore;\n    this.state = {\n      expandMore: props.expandMore,\n      moreButton: this.moreButton && this.moreButton.current,\n    };\n  }\n\n  onClick(e) {\n    if (isObject(this.dropdown) && isObject(this.dropdown.current)) {\n      const { dom: { current } } = this.dropdown.current;\n\n      if (\n        !current.contains(e.target)\n        && !this.moreButton.current.contains(e.target)\n        && this.state.expandMore\n      ) {\n        this.setState({\n          expandMore: false,\n        });\n      }\n    }\n  }\n\n  toggleMore() {\n    this.setState(prevState => ({\n      expandMore: !prevState.expandMore\n    }));\n  }\n\n  componentDidMount() {\n    document.body.addEventListener('click', this.onClick);\n    this.setState({\n      moreButton: this.moreButton && this.moreButton.current,\n    });\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      moreButton: this.moreButton && this.moreButton.current,\n    });\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener('click', this.onClick);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    let showUpdate = false;\n\n    for (const p in nextProps) {\n      if (nextProps::Object.prototype.hasOwnProperty(p)) {\n        const val = nextProps[p];\n\n        if (\n          val !== this.props[p] &&\n            (typeof val !== 'function')\n        ) {\n          showUpdate = true;\n          break;\n        }\n      }\n    }\n    return showUpdate;\n  }\n\n  render() {\n    const buttons = [];\n    /* --------------------- Mute/Unmute --------------------------- */\n    buttons.push(this.props.isOnMute\n      ? {\n        icon: MuteIcon,\n        title: i18n.getString('unmute', this.props.currentLocale),\n        disabled: this.props.isOnHold,\n        onClick: this.props.onUnmute,\n      }\n      : {\n        icon: UnmuteIcon,\n        title: i18n.getString('mute', this.props.currentLocale),\n        disabled: this.props.isOnHold,\n        onClick: this.props.onMute,\n      }\n    );\n\n    /* --------------------- keyPad --------------------------- */\n    buttons.push(\n      {\n        icon: KeypadIcon,\n        title: i18n.getString('keypad', this.props.currentLocale),\n        onClick: this.props.onShowKeyPad,\n        disabled: this.props.layout === callCtrlLayouts.conferenceCtrl,\n      }\n    );\n\n    /* --------------------- Hold/Unhold --------------------------- */\n    buttons.push(\n      {\n        icon: HoldIcon,\n        iconWidth: 120,\n        iconHeight: 160,\n        iconX: 190,\n        iconY: 165,\n        title: this.props.isOnHold\n          ? i18n.getString('onHold', this.props.currentLocale)\n          : i18n.getString('hold', this.props.currentLocale),\n        active: this.props.isOnHold,\n        onClick: this.props.isOnHold\n          ? this.props.onUnhold\n          : this.props.onHold,\n      }\n    );\n\n    /* --------------------- Add/Merge --------------------------- */\n    if (this.props.conferenceCallEquipped) {\n      const showMerge = (\n        this.props.layout === callCtrlLayouts.mergeCtrl ||\n        (this.props.layout === callCtrlLayouts.normalCtrl && this.props.hasConferenceCall)\n      );\n      buttons.push(showMerge\n        ? {\n          icon: MergeIcon,\n          title: i18n.getString('mergeToConference', this.props.currentLocale),\n          disabled: this.props.mergeDisabled,\n          onClick: this.props.onMerge,\n          showRipple: !this.props.mergeDisabled,\n        }\n        : {\n          icon: CombineIcon,\n          title: i18n.getString('add', this.props.currentLocale),\n          disabled: this.props.addDisabled,\n          onClick: this.props.onAdd,\n        }\n      );\n    }\n\n    /* --------------------- Record/Stop --------------------------- */\n    buttons.push(\n      {\n        icon: RecordIcon,\n        title: this.props.recordStatus === recordStatus.recording\n          ? i18n.getString('stopRecord', this.props.currentLocale)\n          : i18n.getString('record', this.props.currentLocale),\n        active: this.props.recordStatus === recordStatus.recording,\n        disabled: (\n          this.props.isOnHold\n          || this.props.recordStatus === recordStatus.pending\n          || this.props.layout === callCtrlLayouts.mergeCtrl\n          || this.props.recordStatus === recordStatus.noAccess\n        ),\n        onClick: this.props.recordStatus === recordStatus.recording\n          ? this.props.onStopRecord\n          : this.props.onRecord,\n      }\n    );\n\n    /* --------------------- Transfer --------------------------- */\n    const disabledTransfer = (\n      this.props.layout !== callCtrlLayouts.normalCtrl\n    );\n    buttons.push(\n      {\n        icon: TransferIcon,\n        title: i18n.getString('transfer', this.props.currentLocale),\n        disabled: disabledTransfer,\n        onClick: this.props.onToggleTransferPanel,\n      }\n    );\n\n    /* --------------------- Flip --------------------------- */\n    const disabledFlip = (\n      this.props.flipNumbers.length === 0\n      || this.props.isOnHold\n      || this.props.layout !== callCtrlLayouts.normalCtrl\n    );\n    buttons.push(\n      {\n        icon: FlipIcon,\n        title: i18n.getString('flip', this.props.currentLocale),\n        disabled: disabledFlip,\n        onClick: this.props.onShowFlipPanel,\n      }\n    );\n\n    /* --------------------- More Actions --------------------------- */\n    let moreActions = null;\n    if (buttons.length > DisplayButtonNumber) {\n      moreActions = (\n        <span\n          className={styles.moreButtonContainer}\n          ref={this.moreButton}\n        >\n          <ActiveCallButton\n            onClick={this.toggleMore}\n            title={i18n.getString('more', this.props.currentLocale)}\n            active={this.state.expandMore}\n            className={classnames(styles.moreButton, styles.callButton)}\n            disabled={disabledFlip && disabledTransfer}\n            icon={MoreIcon} />\n          <Tooltip\n            fixed={false}\n            open={this.state.expandMore}\n            direction=\"top\"\n            ref={this.dropdown}\n            triggerElm={this.state.moreButton}>\n            <div className={styles.buttonPopup}>\n              {\n                buttons.slice(DisplayButtonNumber - 1).map(({\n                  title,\n                  ...opts\n                }) => (<MoreActionItem\n                  key={title}\n                  title={title}\n                  {...opts}\n                />))\n              }\n            </div>\n          </Tooltip>\n        </span>\n      );\n    }\n\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        <div className={styles.callCtrlButtonGroup}>\n          <div className={styles.buttonRow}>\n            {\n              buttons.slice(0, DisplayButtonNumber - (moreActions ? 1 : 0)).map(opts => (\n                <ActiveCallButton\n                  key={opts.title}\n                  className={styles.callButton}\n                  {...opts}\n                />\n              ))\n            }\n            {moreActions}\n          </div>\n        </div>\n        <div className={classnames(styles.buttonRow, styles.stopButtonGroup)}>\n          <div className={styles.button}>\n            <CircleButton\n              className={styles.stopButton}\n              onClick={this.props.onHangup}\n              icon={EndIcon}\n              showBorder={false}\n              iconWidth={250}\n              iconX={125}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nActiveCallPad.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  recordStatus: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  // onPark: PropTypes.func.isRequired,\n  onShowKeyPad: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onShowFlipPanel: PropTypes.func.isRequired,\n  onToggleTransferPanel: PropTypes.func.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  layout: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  expandMore: PropTypes.bool,\n};\n\nActiveCallPad.defaultProps = {\n  className: null,\n  isOnMute: false,\n  isOnHold: false,\n  layout: callCtrlLayouts.normalCtrl,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  onAdd: undefined,\n  onMerge: undefined,\n  expandMore: false,\n};\n\nexport default ActiveCallPad;\n"]}