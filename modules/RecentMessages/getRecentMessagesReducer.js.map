{"version":3,"sources":["modules/RecentMessages/getRecentMessagesReducer.js"],"names":["getContactsReducer","types","state","type","contact","sessionId","contactId","String","id","loadSuccess","loadReset","_","rest","getMessagesReducer","messages","getMessageStatusReducer","initLoad","messageStatus","loading","loaded","getRecentMessagesReducer","status","contacts"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO,YAA8C;AAAA,QAA7CC,KAA6C,uEAArC,EAAqC;;AAAA;AAAA,QAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,QAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,QAAhBC,SAAgB,QAAhBA,SAAgB;;AACnD,QAAMC,SAAS,GAAGC,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACI,EAApB,CAAxB;;AACA,QAAIL,IAAI,KAAKF,KAAK,CAACQ,WAAnB,EAAgC;AAC9B,+BACKP,KADL,sBAEGG,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SAF7C,EAEyDF,OAFzD;AAID,KALD,MAKO,IAAID,IAAI,KAAKF,KAAK,CAACS,SAAnB,EAA8B;AAAA,kBAC1BL,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SADhB;AAAA,UAC4BK,CAD5B,GAC2CT,KAD3C;AAAA,UACkCU,IADlC,4BAC2CV,KAD3C;;AAEnC,aAAOU,IAAP;AACD;;AACD,WAAOV,KAAP;AACD,GAZD;AAaD;;AAEM,SAASW,kBAAT,CAA4BZ,KAA5B,EAAmC;AACxC,SAAO,YAED;AAAA,QAFEC,KAEF,uEAFU,EAEV;;AAAA;AAAA,QADJC,IACI,SADJA,IACI;AAAA,QADEC,OACF,SADEA,OACF;AAAA,QADWU,QACX,SADWA,QACX;AAAA,QADqBT,SACrB,SADqBA,SACrB;;AACJ,QAAMC,SAAS,GAAGC,MAAM,CAACH,OAAO,IAAIA,OAAO,CAACI,EAApB,CAAxB;;AACA,QAAIL,IAAI,KAAKF,KAAK,CAACQ,WAAnB,EAAgC;AAC9B,+BACKP,KADL,sBAEGG,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SAF7C,EAEyDQ,QAFzD;AAID,KALD,MAKO,IAAIX,IAAI,KAAKF,KAAK,CAACS,SAAnB,EAA8B;AAAA,kBAC1BL,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SADhB;AAAA,UAC4BK,CAD5B,GAC2CT,KAD3C;AAAA,UACkCU,IADlC,4BAC2CV,KAD3C;;AAEnC,aAAOU,IAAP;AACD;;AACD,WAAOV,KAAP;AACD,GAdD;AAeD;;AAEM,SAASa,uBAAT,CAAiCd,KAAjC,EAAwC;AAC7C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACe,QAAX;AACE,eAAOC,0BAAcC,OAArB;;AACF,WAAKjB,KAAK,CAACS,SAAX;AACA,WAAKT,KAAK,CAACQ,WAAX;AACE,eAAOQ,0BAAcE,MAArB;;AACF;AACE,eAAOjB,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASkB,wBAAT,CAAkCnB,KAAlC,EAAyC;AACtD,SAAO,4BAAgB;AACrBoB,IAAAA,MAAM,EAAE,wCAAuBpB,KAAvB,CADa;AAErBqB,IAAAA,QAAQ,EAAEtB,kBAAkB,CAACC,KAAD,CAFP;AAGrBa,IAAAA,QAAQ,EAAED,kBAAkB,CAACZ,KAAD,CAHP;AAIrBgB,IAAAA,aAAa,EAAEF,uBAAuB,CAACd,KAAD;AAJjB,GAAhB,CAAP;AAMD","sourcesContent":["import { combineReducers } from 'redux';\nimport messageStatus from './messageStatus';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\n\nexport function getContactsReducer(types) {\n  return (state = {}, { type, contact, sessionId }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: contact\n      };\n    } else if (type === types.loadReset) {\n      const { [sessionId ? `${contactId}-${sessionId}` : contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessagesReducer(types) {\n  return (state = {}, {\n    type, contact, messages, sessionId\n  }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: messages\n      };\n    } else if (type === types.loadReset) {\n      const { [sessionId ? `${contactId}-${sessionId}` : contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getMessageStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return messageStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return messageStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentMessagesReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    contacts: getContactsReducer(types),\n    messages: getMessagesReducer(types),\n    messageStatus: getMessageStatusReducer(types)\n  });\n}\n"],"file":"getRecentMessagesReducer.js"}