{"version":3,"sources":["modules/AvailabilityMonitor/availabilityMonitorHelper.js"],"names":["HA_ERROR_CODE","HA_ERROR_STATUS","PRESENCE_REG_EXP","extractUrl","url","filteredUrl","match","splitUrl","split","isHAError","error","status","errorCode","isHAErrorIn","generateRandomNumber","Math","floor","random","isHAEnabledAPI","method","condition","highAvailabilityAPI","test","availability","HIGH","LIMITED","console"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;;;AALA;;;AAOO,IAAMA,aAAa,GAAG,SAAtB;;AACA,IAAMC,eAAe,GAAG,GAAxB;;AACA,IAAMC,gBAAgB,GAAG,yDAAzB;;;AAEA,SAASC,UAAT,OAA6B;AAAA,MAAPC,GAAO,QAAPA,GAAO;AAClC,MAAMC,WAAW,GAAID,GAAG,CAACE,KAAJ,CAAU,iBAAV,KAAiCF,GAAG,CAACE,KAAJ,CAAU,iBAAV,EAA6B,CAA7B,CAAlC,IAAuE,EAA3F;AACA,MAAMC,QAAQ,GAAGF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,KAA6B,EAA9C;AACA,SAAOD,QAAP;AACD,C,CAED;;;AACO,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,MAAMC,MAAM,GAAG,mBAAO,CAAC,CAAR,EAAW,CAAC,aAAD,EAAgB,WAAhB,EAA6B,QAA7B,CAAX,EAAmDD,KAAnD,CAAf;AACA,MAAME,SAAS,GAAG,mBAAO,KAAP,EAAc,CAAC,aAAD,EAAgB,OAAhB,EAAyB,WAAzB,CAAd,EAAqDF,KAArD,CAAlB;AACA,MAAMG,WAAW,GAAG,oBAAQb,aAAR,EAAuB,mBAAO,EAAP,EAAW,CAAC,aAAD,EAAgB,OAAhB,EAAyB,QAAzB,CAAX,EAA+CU,KAA/C,CAAvB,IAAgF,CAAC,CAArG;AAEA,SACEC,MAAM,KAAKV,eAAX,KACIW,SAAS,KAAKZ,aAAd,IAA+Ba,WADnC,CADF;AAID;AAED;;;;;;;;AAMO,SAASC,oBAAT,GAAgC;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAP;AACD;AAED;;;;;;;;;AAOO,SAASC,cAAT,QAAyC;AAAA,MAAfd,GAAe,SAAfA,GAAe;AAAA,MAAVe,MAAU,SAAVA,MAAU;AAC9C,MAAMd,WAAW,GAAGF,UAAU,CAAC;AAAEC,IAAAA,GAAG,EAAHA;AAAF,GAAD,CAA9B;AACA,MAAMgB,SAAS,GAAG,mBAAO,KAAP,EAAc,CAACf,WAAD,EAAcc,MAAd,CAAd,EAAqCE,4BAArC,CAAlB;;AAEA,MAAInB,gBAAgB,CAACoB,IAAjB,CAAsBjB,WAAtB,KAAsCe,SAAS,KAAKG,4BAAaC,IAArE,EAA2E;AACzE,WAAO,IAAP;AACD,GAFD,MAEO,IAAIJ,SAAS,KAAKG,4BAAaE,OAA/B,EAAwC;AAC7C,WAAO,KAAP;AACD;;AAEDC,EAAAA,OAAO,CAAChB,KAAR,gBACUN,GADV,sBACyBe,MADzB;AAIA,SAAO,KAAP;AACD","sourcesContent":["/**\n * Created by Sophie, edited by Bruce\n */\nimport { pathOr, indexOf } from 'ramda';\nimport highAvailabilityAPI from './highAvailabilityAPI';\nimport availability from './availabilityStatus';\n\nexport const HA_ERROR_CODE = 'CMN-211';\nexport const HA_ERROR_STATUS = 503;\nexport const PRESENCE_REG_EXP = /\\/restapi\\/v1.0\\/account\\/~\\/extension\\/\\d*\\/presence/gi;\n\nexport function extractUrl({ url }) {\n  const filteredUrl = (url.match(/\\/restapi(.*)/gi) && (url.match(/\\/restapi(.*)/gi)[0])) || '';\n  const splitUrl = filteredUrl.split('?')[0] || '';\n  return splitUrl;\n}\n\n// Check if this damn error is HA error.\nexport function isHAError(error) {\n  const status = pathOr(-1, ['apiResponse', '_response', 'status'], error);\n  const errorCode = pathOr('N/A', ['apiResponse', '_json', 'errorCode'], error);\n  const isHAErrorIn = indexOf(HA_ERROR_CODE, pathOr([], ['apiResponse', '_json', 'errors'], error)) > -1;\n\n  return (\n    status === HA_ERROR_STATUS\n    && (errorCode === HA_ERROR_CODE || isHAErrorIn)\n  );\n}\n\n/**\n * Generate 0 ~ 3000 seconds\n *\n * @export\n * @returns 0 ~ 3000 seconds\n */\nexport function generateRandomNumber() {\n  return Math.floor(Math.random() * 3000);\n}\n\n/**\n * Check if an api is *High* or *Limited*\n *\n * @export\n * @param {*} { url, method }\n * @returns boolean\n */\nexport function isHAEnabledAPI({ url, method }) {\n  const filteredUrl = extractUrl({ url });\n  const condition = pathOr('N/A', [filteredUrl, method], highAvailabilityAPI);\n\n  if (PRESENCE_REG_EXP.test(filteredUrl) || condition === availability.HIGH) {\n    return true;\n  } else if (condition === availability.LIMITED) {\n    return false;\n  }\n\n  console.error(\n    `url: ${url} method: ${method} is not set in high or limited available API`\n  );\n\n  return false;\n}\n"],"file":"availabilityMonitorHelper.js"}