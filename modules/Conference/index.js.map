{"version":3,"sources":["modules/Conference/index.js"],"names":["DEFAULT_MASK","Conference","deps","dep","optional","alert","client","regionSettings","storage","rolesAndPermissions","availabilityMonitor","showSaveAsDefault","extensionInfo","locale","options","fetchFunction","mask","_alert","_dialInNumberStorageKey","_additionalNumbersStorageKey","_savedStorageKey","_regionSettings","_rolesAndPermissions","_availabilityMonitor","_lastCountryCode","_showSaveAsDefault","_extensionInfo","_locale","_storage","registerReducer","key","reducer","actionTypes","updateDialInNumber","updateAdditionalNumbers","updateSaveCurrentSettings","data","ready","countryCode","matchedPhoneNumber","phoneNumbers","find","e","country","isoCode","phoneNumber","dialInNumber","allowJoinBeforeHost","_client","_store","dispatch","type","fetchSuccess","checkIfHAError","warning","message","callControlError","generalError","additionalNumbers","_saved","store","inviteWithText","joinAsHost","countryNames","console","log","dialInNumbers","currentLocale","areaCode","participantCode","extensionName","info","name","getItem","permissions","OrganizeConference","DataFetcher","proxify"],"mappings":"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","sourcesContent":["import mask from 'json-mask';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport createSimpleReducer from '../../lib/createSimpleReducer';\nimport callControlError from '../ActiveCallControl/callControlError';\nimport actionTypes from './actionTypes';\nimport proxify from '../../lib/proxy/proxify';\nimport { updateJoinBeforeHost, getConferenceInfo, formatDialInNumbers } from './conferenceHelper';\n\nconst DEFAULT_MASK = 'phoneNumber,hostCode,participantCode,phoneNumbers(country(callingCode,id,isoCode,name),phoneNumber,location),allowJoinBeforeHost';\n\n/**\n * @class\n * @description Conference managing module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'Storage',\n    'RegionSettings',\n    'RolesAndPermissions',\n    'ExtensionInfo',\n    'Locale',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'ConferenceOptions', optional: true }\n  ]\n})\nexport default class Conference extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {RegionSettings} params.regionSettings - regionSettings module instance\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    alert,\n    client,\n    regionSettings,\n    storage,\n    rolesAndPermissions,\n    availabilityMonitor,\n    showSaveAsDefault,\n    extensionInfo,\n    locale,\n    ...options\n  }) {\n    super({\n      client,\n      fetchFunction: async () => mask(\n        await getConferenceInfo(client),\n        DEFAULT_MASK,\n      ),\n      storage,\n      ...options,\n    });\n    this._alert = alert;\n    this._dialInNumberStorageKey = 'conferenceDialInNumber';\n    this._additionalNumbersStorageKey = 'conferenceAdditionalNumbers';\n    this._savedStorageKey = 'conferenceSaveCurrentSettings';\n    this._regionSettings = regionSettings;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._availabilityMonitor = availabilityMonitor;\n    this._lastCountryCode = null;\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._extensionInfo = extensionInfo;\n    this._locale = locale;\n    this._storage.registerReducer({\n      key: this._dialInNumberStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateDialInNumber, 'dialInNumber'),\n    });\n    this._storage.registerReducer({\n      key: this._additionalNumbersStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateAdditionalNumbers, 'additionalNumbers'),\n    });\n    this._storage.registerReducer({\n      key: this._savedStorageKey,\n      reducer: createSimpleReducer(this.actionTypes.updateSaveCurrentSettings, '_saved'),\n    });\n  }\n\n  get _name() {\n    return 'conference';\n  }\n\n  get _actionTypes() {\n    return actionTypes;\n  }\n\n  async _onStateChange() {\n    super._onStateChange();\n    if (\n      !this.data ||\n      !this._regionSettings.ready ||\n      this._lastCountryCode === this._regionSettings.countryCode) {\n      return;\n    }\n    this._lastCountryCode = this._regionSettings.countryCode;\n    const matchedPhoneNumber = this.data.phoneNumbers.find(\n      e => e.country.isoCode === this._lastCountryCode\n    );\n    if (matchedPhoneNumber && matchedPhoneNumber.phoneNumber !== this.dialInNumber) {\n      this.updateDialInNumber(matchedPhoneNumber.phoneNumber);\n    }\n  }\n\n  _shouldInit() {\n    return super._shouldInit() &&\n      this._rolesAndPermissions.ready &&\n      this._alert.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      this._extensionInfo.ready &&\n      this._locale.ready &&\n      this._regionSettings.ready;\n  }\n\n  @proxify\n  async updateEnableJoinBeforeHost(allowJoinBeforeHost) {\n    try {\n      const data = await updateJoinBeforeHost(this._client, allowJoinBeforeHost);\n      this._store.dispatch({ type: this.actionTypes.fetchSuccess, data });\n      return data;\n    } catch (error) {\n      if (!this._availabilityMonitor || !this._availabilityMonitor.checkIfHAError(error)) {\n        this._alert.warning({ message: callControlError.generalError });\n      }\n\n      return null;\n    }\n  }\n\n  @proxify\n  updateDialInNumber(dialInNumber) {\n    this._store.dispatch({ type: this.actionTypes.updateDialInNumber, dialInNumber });\n  }\n\n  @proxify\n  updateAdditionalNumbers(additionalNumbers) {\n    this._store.dispatch({ type: this.actionTypes.updateAdditionalNumbers, additionalNumbers });\n  }\n\n  @proxify\n  updateSaveCurrentSettings(_saved) {\n    this._store.dispatch({ type: this.actionTypes.updateSaveCurrentSettings, _saved });\n  }\n\n  // for track invite with text\n  @proxify\n  onInviteWithText() {\n    this.store.dispatch({\n      type: this.actionTypes.inviteWithText\n    });\n  }\n\n  // for track join as host\n  @proxify\n  onJoinAsHost() {\n    this.store.dispatch({\n      type: this.actionTypes.joinAsHost\n    });\n  }\n\n  @proxify\n  getDefaultSettings(countryNames) {\n    if (!countryNames || typeof countryNames !== 'object') {\n      console.log('please privide the countryNames I18n object');\n      return;\n    }\n    const dialInNumbers = formatDialInNumbers({\n      currentLocale: this._locale.currentLocale,\n      areaCode: this._regionSettings.areaCode,\n      countryCode: this._regionSettings.countryCode,\n      phoneNumbers: this.data.phoneNumbers,\n      countryNames,\n    });\n    return {\n      dialInNumbers,\n      phoneNumber: this.data.phoneNumber,\n      dialInNumber: this.dialInNumber || '',\n      _saved: this._saved || false,\n      additionalNumbers: this.additionalNumbers,\n      allowJoinBeforeHost: this.data.allowJoinBeforeHost,\n      currentLocale: this._locale.currentLocale,\n      participantCode: this.data.participantCode,\n      extensionName: this._extensionInfo.info.name || '',\n    };\n  }\n\n  get additionalNumbers() {\n    return this._storage.getItem(this._additionalNumbersStorageKey) || [];\n  }\n\n  get _saved() {\n    return this._storage.getItem(this._savedStorageKey) || false;\n  }\n\n  get dialInNumber() {\n    return this._storage.getItem(this._dialInNumberStorageKey) ||\n      (this.data && this.data.phoneNumber);\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.OrganizeConference;\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault || false;\n  }\n}\n"],"file":"index.js"}