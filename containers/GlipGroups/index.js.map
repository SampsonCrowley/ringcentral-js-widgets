{"version":3,"sources":["containers/GlipGroups/index.js"],"names":["mapToProps","_","phone","glipGroups","contacts","hiddenCurrentGroup","groups","groupsWithUnread","currentGroupId","searchFilter","currentPage","pageNumber","filteredContacts","contactSearchFilter","mapToFunctions","onSelectGroup","updateSearchFilter","updateFilter","onNextPage","updateContactSearchFilter","createTeam","teamName","selectedContacts","map","sc","email","groupId","GlipGroupsPage","GlipGroupsPanel"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AAEA;;;;;;AAEA,SAASA,UAAT,CAAoBC,CAApB,QAMG;AAAA,wBALDC,KAKC;AAAA,MAJCC,UAID,cAJCA,UAID;AAAA,MAHCC,QAGD,cAHCA,QAGD;AAAA,mCADDC,kBACC;AAAA,MADDA,kBACC,yCADoB,KACpB;;AACD,SAAO;AACLC,YAAQH,WAAWI,gBADd;AAELC,oBAAgBH,qBAAqB,IAArB,GAA4BF,WAAWK,cAFlD;AAGLC,kBAAcN,WAAWM,YAHpB;AAILC,iBAAaP,WAAWQ,UAJnB;AAKLC,sBAAkBR,SAASQ,gBALtB;AAMLC,yBAAqBT,SAASK;AANzB,GAAP;AAQD;;AAED,SAASK,cAAT,CAAwBb,CAAxB,SAMG;AAAA,0BALDC,KAKC;AAAA,MAJCC,UAID,eAJCA,UAID;AAAA,MAHCC,QAGD,eAHCA,QAGD;AAAA,MADDW,aACC,SADDA,aACC;;AACD,SAAO;AACLA,gCADK;AAELC,sBAFK,8BAEcP,YAFd,EAE4B;AAC/BN,iBAAWc,YAAX,CAAwB,EAAER,0BAAF,EAAxB;AACD,KAJI;AAKLS,cALK,sBAKMP,UALN,EAKkB;AACrBR,iBAAWc,YAAX,CAAwB,EAAEN,sBAAF,EAAxB;AACD,KAPI;AAQLQ,6BARK,qCAQqBV,YARrB,EAQmC;AACtCL,eAASa,YAAT,CAAsB,EAAER,0BAAF,EAAtB;AACD,KAVI;AAWCW,cAXD;AAAA;AAAA,YAWcC,QAXd,SAWcA,QAXd;AAAA,YAWwBC,gBAXxB,SAWwBA,gBAXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAYmBnB,WAAWiB,UAAX,CAAsBC,QAAtB,EAAgCC,iBAAiBC,GAAjB,CAAqB;AAAA,yBAAMC,GAAGC,KAAT;AAAA,iBAArB,CAAhC,CAZnB;;AAAA;AAYGC,uBAZH;;AAaHX,8BAAcW,OAAd;;AAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAAP;AAgBD;;AAED,IAAMC,iBAAiB,yBAAU,yBAC/B3B,UAD+B,EAE/Bc,cAF+B,EAG/Bc,yBAH+B,CAAV,CAAvB;;kBAKeD,c","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport withPhone from 'ringcentral-widgets/lib/withPhone';\n\nimport GlipGroupsPanel from '../../components/GlipGroupsPanel';\n\nfunction mapToProps(_, {\n  phone: {\n    glipGroups,\n    contacts,\n  },\n  hiddenCurrentGroup = false,\n}) {\n  return {\n    groups: glipGroups.groupsWithUnread,\n    currentGroupId: hiddenCurrentGroup ? null : glipGroups.currentGroupId,\n    searchFilter: glipGroups.searchFilter,\n    currentPage: glipGroups.pageNumber,\n    filteredContacts: contacts.filteredContacts,\n    contactSearchFilter: contacts.searchFilter,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    glipGroups,\n    contacts,\n  },\n  onSelectGroup,\n}) {\n  return {\n    onSelectGroup,\n    updateSearchFilter(searchFilter) {\n      glipGroups.updateFilter({ searchFilter });\n    },\n    onNextPage(pageNumber) {\n      glipGroups.updateFilter({ pageNumber });\n    },\n    updateContactSearchFilter(searchFilter) {\n      contacts.updateFilter({ searchFilter });\n    },\n    async createTeam({ teamName, selectedContacts }) {\n      const groupId = await glipGroups.createTeam(teamName, selectedContacts.map(sc => sc.email));\n      onSelectGroup(groupId);\n    }\n  };\n}\n\nconst GlipGroupsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(GlipGroupsPanel));\n\nexport default GlipGroupsPage;\n"]}