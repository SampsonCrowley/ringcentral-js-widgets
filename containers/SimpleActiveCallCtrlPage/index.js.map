{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/index.js"],"names":["mapToProps","_","phone","activeCallControl","regionSettings","callMonitor","locale","brand","params","renderContactName","sessionId","activeSession","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","currentLocale","fallBackNameFromThirdParty","fallBackNumber","areaCode","countryCode","otherDeviceCalls","fullName","mapToFunctions","routerInteraction","onBackButtonClick","goBack","setActiveSessionId","onTransfer","push","ActiveCallControlPanel","props","state","selectedMatcherIndex","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unHold","onHangup","hangUp","formatPhone","onSelectMatcherName","option","findIndex","match","id","setState","loadActCall","nextProps","muteCtrl","ACTIONS_CTRL_MAP","transferCtrl","holdCtrl","callCtrlLayouts","normalCtrl","startTime","isOnMute","isOnHold","showContactDisplayPlaceholder","Component","propTypes","PropTypes","func","string","isRequired","object","array","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file simplify active call control page\n * detail: https://jira.ringcentral.com/browse/RCINT-8256\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../../components/ActiveCallPad';\nimport i18n from './i18n';\nimport { pickFallBackInfo } from './utils';\n\nfunction mapToProps(_, {\n  phone: {\n    activeCallControl,\n    regionSettings,\n    callMonitor,\n    locale,\n    brand,\n  },\n  params,\n  renderContactName,\n}) {\n  const { sessionId } = params;\n  const { activeSession } = activeCallControl;\n  let nameMatches = [];\n  if (activeSession && !renderContactName) {\n    nameMatches =\n      activeSession.direction === callDirections.outbound ?\n        activeSession.toMatches : activeSession.fromMatches;\n  }\n  let phoneNumber;\n  if (activeSession) {\n    phoneNumber = activeSession.direction === callDirections.outbound ?\n      activeSession.to : activeSession.from;\n  }\n  let fallBackName = i18n.getString('Unknown', locale.currentLocale);\n  if (renderContactName) {\n    const { fallBackName: fallBackNameFromThirdParty, fallBackNumber } = pickFallBackInfo(\n      activeSession,\n      renderContactName({ sessionId }),\n      locale.currentLocale\n    );\n    phoneNumber = fallBackNumber;\n    fallBackName = fallBackNameFromThirdParty;\n  }\n  return {\n    currentLocale: locale.currentLocale,\n    activeSession,\n    sessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    otherDeviceCalls: callMonitor.otherDeviceCalls,\n    nameMatches,\n    phoneNumber,\n    fallBackName,\n    brand: brand.fullName,\n    activeCallControl,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n    activeCallControl\n  },\n}) {\n  return {\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    setActiveSessionId(sessionId) {\n      activeCallControl.setActiveSessionId(sessionId);\n    },\n    onTransfer(sessionId) {\n      routerInteraction.push(`/transfer/${sessionId}/active`);\n    }\n  };\n}\n\nclass ActiveCallControlPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMatcherIndex: 0,\n    };\n\n    this.onMute = () => this.props.activeCallControl.mute(this.props.sessionId);\n    this.onUnmute = () => this.props.activeCallControl.unmute(this.props.sessionId);\n    this.onHold = () => this.props.activeCallControl.hold(this.props.sessionId);\n    this.onUnhold = () => this.props.activeCallControl.unHold(this.props.sessionId);\n    this.onHangup = () => this.props.activeCallControl.hangUp(this.props.sessionId);\n\n    this.formatPhone = phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: this.props.areaCode,\n      countryCode: this.props.countryCode,\n    });\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadActCall();\n  }\n  loadActCall() {\n    this.props.setActiveSessionId(this.props.sessionId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.activeSession) {\n      this.props.onBackButtonClick();\n    }\n  }\n\n  render() {\n    if (!this.props.activeSession) {\n      // or using skeleton screen here\n      return null;\n    }\n    const { muteCtrl, transferCtrl, holdCtrl } = ACTIONS_CTRL_MAP;\n\n    return (\n      <CallCtrlPanel\n        sessionId={this.props.sessionId}\n        currentLocale={this.props.currentLocale}\n        fallBackName={this.props.fallBackName}\n        phoneNumber={this.props.phoneNumber}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onHangup={this.onHangup}\n        onTransfer={this.props.onTransfer}\n        showBackButton\n        backButtonLabel={i18n.getString('allCalls', this.props.currentLocale)}\n        onBackButtonClick={this.props.onBackButtonClick}\n        formatPhone={this.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        layout={callCtrlLayouts.normalCtrl}\n        startTime={this.props.activeSession.startTime}\n        actions={[muteCtrl, transferCtrl, holdCtrl]}\n        isOnMute={this.props.activeSession.isOnMute}\n        isOnHold={this.props.activeSession.isOnHold}\n        nameMatches={this.props.nameMatches}\n        onSelectMatcherName={this.onSelectMatcherName}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n      />\n    );\n  }\n}\n\nActiveCallControlPanel.propTypes = {\n  setActiveSessionId: PropTypes.func,\n  currentLocale: PropTypes.string,\n  sessionId: PropTypes.string,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  activeSession: PropTypes.object,\n  onBackButtonClick: PropTypes.func.isRequired,\n  activeCallControl: PropTypes.object,\n  nameMatches: PropTypes.array,\n  fallBackName: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  brand: PropTypes.string.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n};\n\nActiveCallControlPanel.defaultProps = {\n  setActiveSessionId() {},\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  activeSession: null,\n  sessionId: null,\n  nameMatches: [],\n  fallBackName: '',\n  phoneNumber: '',\n  showContactDisplayPlaceholder: false,\n};\n\nexport default withPhone(connect(mapToProps, mapToFunctions)(ActiveCallControlPanel));\n"]}