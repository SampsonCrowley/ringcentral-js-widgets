{"version":3,"sources":["containers/CallCtrlPage/CallCtrlPage.js"],"names":["CallCtrlPage","props","layout","getInitialLayout","mergeDisabled","disableMerge","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","sendDTMF","value","onFlip","onTransfer","onPark","onAdd","onMerge","onBeforeMerge","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","phoneNumber","direction","callDirections","outbound","to","from","fallbackUserName","inbound","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","showBackButton","onBackButtonClick","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","sourceIcons","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","addDisabled","conferenceCallEquipped","hasConferenceCall","gotoParticipantsCtrl","children","Component","propTypes","PropTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknow","i"],"mappings":"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","file":"CallCtrlPage.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const mergeDisabled = this.disableMerge(this.props, layout);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n    };\n\n    this.onLastMergingCallEnded = this::this.onLastMergingCallEnded;\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onTransfer = value =>\n      this.props.onTransfer(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n    this.onAdd = () =>\n      this.props.onAdd(this.props.session.id);\n    this.onMerge = () =>\n      this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () =>\n      this.props.onBeforeMerge(this.props.session.id);\n  }\n\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(\n      lastCallInfo && lastCallInfo.status === sessionStatus.finished\n    );\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n\n    if (CallCtrlPage.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n\n  disableMerge(nextProps, layout) {\n    const {\n      lastCallInfo\n    } = nextProps;\n\n    let mergeDisabled = false;\n    if (\n      layout === callCtrlLayouts.mergeCtrl\n    && (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n\n    return mergeDisabled;\n  }\n\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl\n        });\n      }\n\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n\n    if (nextProps.session.id !== this.props.session.id) {\n      const layout = this.getLayout(this.props, nextProps);\n      const mergeDisabled = this.disableMerge(nextProps, layout);\n\n      this.setState({\n        layout,\n        mergeDisabled\n      });\n\n      if (\n        layout === callCtrlLayouts.normalCtrl\n      ) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      this.state.layout === callCtrlLayouts.mergeCtrl\n      && CallCtrlPage.isLastCallEnded(this.props) === false\n      && CallCtrlPage.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (this.state.layout === callCtrlLayouts.conferenceCtrl &&\n      this.props.conferenceCallParties !== nextProps.conferenceCallParties) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl\n      && props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n\n  _updateMergingPairToSessionId(nextProps = this.props, nextState = this.state) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.onFlip}\n        onTransfer={this.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        searchContactList={this.props.searchContactList}\n        searchContact={this.props.searchContact}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n        recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.props.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.props.gotoParticipantsCtrl}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n  getInitialLayout: PropTypes.func,\n  closeMergingPair: PropTypes.func,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  conferenceCallId: null,\n  gotoParticipantsCtrl: i => i,\n  loadConference: i => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  layout: callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n};\n\n\nexport default CallCtrlPage;\n"]}