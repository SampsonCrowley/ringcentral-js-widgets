{"version":3,"sources":["lib/Subscribable/index.js"],"names":["Subscribable","_handlers","Set","handler","add","unsubscribe","delete","forEach","e"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAIqBA,Y;;;AACnB,0BAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;AACD;AACD;;;;;;;;;8BAKUC,O,EAAS;AAAA;;AACjB,WAAKF,SAAL,CAAeG,GAAf,CAAmBD,OAAnB;;AACA,aAAO,YAAM;AACX,QAAA,KAAI,CAACE,WAAL,CAAiBF,OAAjB;AACD,OAFD;AAGD;AACD;;;;;;;gCAIYA,O,EAAS;AACnB,WAAKF,SAAL,CAAeK,MAAf,CAAsBH,OAAtB;AACD;AACD;;;;;;8BAGU;AACR,yBAAI,KAAKF,SAAT,EAAoBM,OAApB,CAA4B,UAACJ,OAAD,EAAa;AACvC,YAAI;AACFA,UAAAA,OAAO;AACR,SAFD,CAEE,OAAOK,CAAP,EAAU;AACV;AACD;AACF,OAND;AAOD","sourcesContent":["/**\n * @class Subscribable\n * @description Simple subscribable base class\n */\nexport default class Subscribable {\n  constructor() {\n    this._handlers = new Set();\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   * @return {Function} unsubscriber\n   */\n  subscribe(handler) {\n    this._handlers.add(handler);\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n  /**\n   * @function\n   * @param {Function} handler\n   */\n  unsubscribe(handler) {\n    this._handlers.delete(handler);\n  }\n  /**\n   * @function\n   */\n  trigger() {\n    [...this._handlers].forEach((handler) => {\n      try {\n        handler();\n      } catch (e) {\n        /* ignore error */\n      }\n    });\n  }\n}\n"],"file":"index.js"}