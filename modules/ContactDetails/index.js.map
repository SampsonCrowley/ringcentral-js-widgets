{"version":3,"sources":["modules/ContactDetails/index.js"],"names":["ContactDetails","deps","dep","optional","contacts","options","actionTypes","_contacts","_reducer","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","_shouldReset","resetSuccess","ready","pending","id","updateCondition","condition","resetCondition","contact","getProfileImage","getPresence","clickToSMS","clickToCall","state","status","RcModule","background","proxify","selector","allContacts","find","currentContact","phoneNumbers","rawPhoneNumbers","length","phoneMaps","acc","phoneNumberElm","phoneType","push","schema","key","phoneTypes","Array","isArray","phoneTypeOrder"],"mappings":"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","sourcesContent":["import { filter, reduce } from 'ramda';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport { selector } from '../../lib/selector';\nimport actionTypes from './actionTypes';\nimport getContactDetailsReducer from './getContactDetailsReducer';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport phoneTypes from '../../enums/phoneTypes';\nimport { phoneTypeOrder } from '../../lib/phoneTypeHelper';\n\n@Module({\n  deps: ['Contacts', { dep: 'ContactDetailsOptions', optional: true }],\n})\nexport default class ContactDetails extends RcModule {\n  constructor({ contacts, ...options }) {\n    super({ ...options, actionTypes });\n\n    this._contacts = contacts;\n    this._reducer = getContactDetailsReducer(this.actionTypes);\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n    }\n  }\n\n  _shouldInit() {\n    return this._contacts.ready && this.pending;\n  }\n\n  _shouldReset() {\n    return !this._contacts.ready && this.ready;\n  }\n\n  /**\n   * Find contact from all contacts by given conditions.\n   * Stores search conditions to reducers.\n   */\n  @background\n  find({ id, type }) {\n    this.store.dispatch({\n      type: this.actionTypes.updateCondition,\n      condition: {\n        id,\n        type,\n      },\n    });\n  }\n\n  @background\n  clear() {\n    this.store.dispatch({\n      type: this.actionTypes.resetCondition,\n    });\n  }\n\n  @background\n  getProfileImage(contact) {\n    return this._contacts.getProfileImage(contact, false);\n  }\n\n  @background\n  getPresence(contact) {\n    return this._contacts.getPresence(contact, false);\n  }\n\n  // for track click to sms in contact detail\n  @proxify\n  onClickToSMS() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToSMS,\n    });\n  }\n\n  // for track click to call in contact detail\n  @proxify\n  onClickToCall() {\n    this.store.dispatch({\n      type: this.actionTypes.clickToCall,\n    });\n  }\n\n  @selector\n  currentContact = [\n    () => this.condition,\n    () => this._contacts.allContacts,\n    (condition) => {\n      if (condition) {\n        return this._contacts.find(condition);\n      }\n      return null;\n    },\n  ];\n\n  @selector\n  contact = [\n    () => this.currentContact,\n    (currentContact) => {\n      if (!currentContact) return null;\n      let phoneNumbers;\n      if (\n        currentContact.rawPhoneNumbers &&\n        currentContact.rawPhoneNumbers.length > 0\n      ) {\n        phoneNumbers = currentContact.rawPhoneNumbers;\n      } else {\n        phoneNumbers = currentContact.phoneNumbers;\n      }\n      const phoneMaps = reduce(\n        (acc, phoneNumberElm) => {\n          acc[phoneNumberElm.phoneType] = acc[phoneNumberElm.phoneType] || [];\n          acc[phoneNumberElm.phoneType].push(phoneNumberElm);\n          return acc;\n        },\n        {},\n        phoneNumbers,\n      );\n\n      const schema = filter(\n        (key) => !!phoneTypes[key] && Array.isArray(phoneMaps[key]),\n        phoneTypeOrder,\n      );\n      return { ...currentContact, schema, phoneMaps };\n    },\n  ];\n\n  get condition() {\n    return this.state.condition;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}