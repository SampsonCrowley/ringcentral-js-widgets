{"version":3,"sources":["modules/ExtensionPhoneNumber/index.js"],"names":["ExtensionPhoneNumber","deps","dep","optional","client","rolesAndPermissions","options","fetchFunction","params","account","extension","phoneNumber","list","number","country","map","readyCheckFn","_rolesAndPermissions","ready","cleanOnReset","ensureExist","permissions","ReadUserPhoneNumbers","DataFetcher","selector","data","numbers","phoneNumbers","filter","p","usageType","features","indexOf","status"],"mappings":"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","sourcesContent":["import { find } from 'ramda';\nimport { Module } from '../../lib/di';\nimport fetchList from '../../lib/fetchList';\nimport removeUri from '../../lib/removeUri';\nimport DataFetcher from '../../lib/DataFetcher';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n\n\n/**\n * @class\n * @description Extension phone number list module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'ExtensionPhoneNumberOptions', optional: true }\n  ]\n})\nexport default class ExtensionPhoneNumber extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ...options\n  }) {\n    super({\n      client,\n      fetchFunction: async () => (await fetchList(params => (\n        client.account().extension().phoneNumber().list(params)\n      ))).map(number => ({\n        ...number,\n        country: removeUri(number.country),\n      })),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      cleanOnReset: true,\n      ...options,\n    });\n\n    this._rolesAndPermissions = this::ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n  }\n\n  get _name() {\n    return 'extensionPhoneNumber';\n  }\n\n  @selector\n  numbers = [\n    () => this.data,\n    data => data || [],\n  ]\n\n  @selector\n  companyNumbers = [\n    () => this.numbers,\n    phoneNumbers => phoneNumbers.filter(p => p.usageType === 'CompanyNumber'),\n  ]\n\n  @selector\n  mainCompanyNumber = [\n    () => this.numbers,\n    phoneNumbers => find(p => p.usageType === 'MainCompanyNumber', phoneNumbers),\n  ]\n\n  @selector\n  directNumbers = [\n    () => this.numbers,\n    phoneNumbers => phoneNumbers.filter(p => p.usageType === 'DirectNumber'),\n  ]\n\n  @selector\n  callerIdNumbers = [\n    () => this.numbers,\n    phoneNumbers => phoneNumbers.filter(p => (\n      (p.features && p.features.indexOf('CallerId') !== -1) ||\n      (p.usageType === 'ForwardedNumber' && p.status === 'PortedIn')\n    )),\n  ]\n\n  @selector\n  smsSenderNumbers = [\n    () => this.numbers,\n    phoneNumbers =>\n      phoneNumbers.filter(\n        p => (p.features && p.features.indexOf('SmsSender') !== -1)\n      ),\n  ]\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadUserPhoneNumbers;\n  }\n}\n"],"file":"index.js"}