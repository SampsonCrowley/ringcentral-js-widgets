{"version":3,"sources":["components/PresenceSettingSection/index.js"],"names":["PresenceSettingSection","props","state","showSelects","showPresenceSettings","toggleShow","setState","preState","onCallQueueChange","dndStatus","doNotAcceptAnyCalls","takeAllCalls","doNotAcceptDepartmentCalls","toggleAcceptCallQueueCalls","sectionClass","styles","section","showDropdown","acceptQueueCalls","isCallQueueMember","i18n","getString","currentLocale","currentStatus","userStatus","dropdownIcon","dynamicsFont","arrow","iconLine","title","subTitle","statusIcon","presenceList","presenceStatus","available","setAvailable","busy","setBusy","setDoNotDisturb","offline","setInvisible","Component","propTypes","PropTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport dndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\n\nimport IconLine from '../IconLine';\nimport Line from '../Line';\nimport Switch from '../Switch';\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport PresenceItem, { getPresenceStatusName } from '../PresenceItem';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class PresenceSettingSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelects: props.showPresenceSettings,\n    };\n\n    this.toggleShow = () => {\n      this.setState(preState => ({\n        showSelects: !preState.showSelects,\n      }));\n    };\n\n    this.onCallQueueChange = () => {\n      if (this.state.dndStatus === dndStatus.doNotAcceptAnyCalls) {\n        return;\n      }\n      this.setState(preState => ({\n        dndStatus: (\n          preState.dndStatus === dndStatus.takeAllCalls ?\n            dndStatus.doNotAcceptDepartmentCalls :\n            dndStatus.takeAllCalls\n        ),\n      }));\n      this.props.toggleAcceptCallQueueCalls();\n    };\n  }\n\n  render() {\n    const sectionClass = classnames(\n      styles.section,\n      this.state.showSelects ? styles.showDropdown : null,\n    );\n    const acceptQueueCalls = this.props.isCallQueueMember ? (\n      <IconLine\n        icon={\n          <Switch\n            checked={this.props.dndStatus === dndStatus.takeAllCalls}\n            onChange={this.onCallQueueChange}\n          />\n        }\n      >\n        {i18n.getString('acceptQueueCalls', this.props.currentLocale)}\n      </IconLine>\n    ) : null;\n    const currentStatus = getPresenceStatusName(\n      this.props.userStatus,\n      this.props.dndStatus,\n      this.props.currentLocale\n    );\n    return (\n      <section className={sectionClass}>\n        <IconLine\n          icon={\n            <span className={styles.dropdownIcon} >\n              <i className={dynamicsFont.arrow} />\n            </span>\n          }\n          onClick={this.toggleShow}\n          className={styles.iconLine}\n        >\n          <div className={styles.title}>\n            {i18n.getString('status', this.props.currentLocale)}\n          </div>\n          <div className={styles.subTitle}>\n            <PresenceStatusIcon\n              className={styles.statusIcon}\n              userStatus={this.props.userStatus}\n              dndStatus={this.props.dndStatus}\n            />\n            <span>\n              {currentStatus}\n            </span>\n          </div>\n        </IconLine>\n        <Line className={styles.presenceList}>\n          <PresenceItem\n            userStatus={presenceStatus.available}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setAvailable}\n            selected={\n              this.props.userStatus === presenceStatus.available &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setBusy}\n            selected={\n              this.props.userStatus === presenceStatus.busy &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.busy}\n            dndStatus={dndStatus.doNotAcceptAnyCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setDoNotDisturb}\n            selected={\n              this.props.dndStatus === dndStatus.doNotAcceptAnyCalls\n            }\n          />\n          <PresenceItem\n            userStatus={presenceStatus.offline}\n            dndStatus={dndStatus.takeAllCalls}\n            currentLocale={this.props.currentLocale}\n            onClick={this.props.setInvisible}\n            selected={\n              this.props.userStatus === presenceStatus.offline &&\n              this.props.dndStatus !== dndStatus.doNotAcceptAnyCalls\n            }\n          />\n        </Line>\n        {acceptQueueCalls}\n      </section>\n    );\n  }\n}\n\nPresenceSettingSection.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  dndStatus: PropTypes.string.isRequired,\n  userStatus: PropTypes.string.isRequired,\n  isCallQueueMember: PropTypes.bool.isRequired,\n  setAvailable: PropTypes.func.isRequired,\n  setBusy: PropTypes.func.isRequired,\n  setDoNotDisturb: PropTypes.func.isRequired,\n  setInvisible: PropTypes.func.isRequired,\n  toggleAcceptCallQueueCalls: PropTypes.func.isRequired,\n  showPresenceSettings: PropTypes.bool.isRequired,\n};\n"],"file":"index.js"}