{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/utils.js"],"names":["pickEleByProps","props","list","keys","result","filter","item","shouldPicked","every","key","pickFallBackInfo","call","contactMatchMap","currentLocale","direction","callFrom","from","callTo","to","fallBackName","i18n","getString","fallBackNumber","getName","target","name","extensionNumber","phoneNumber","number","matchList","length","getNumber","callDirection","inbound","outbound"],"mappings":";;;;;;;;;;;AAGA;;;;AACA;;;;;;AAJA;;;AAMO,IAAMA,0CAAiB,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,EAAkB;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AACvD,MAAMC,OAAO,oBAAYF,KAAZ,CAAb;AACA,MAAMG,SAASF,KAAKG,MAAL,CAAY,UAACC,IAAD,EAAU;AACnC,QAAMC,eAAeJ,KAAKK,KAAL,CAAW;AAAA,aAAOP,MAAMQ,GAAN,MAAeH,KAAKG,GAAL,CAAtB;AAAA,KAAX,CAArB;AACA,WAAOF,YAAP;AACD,GAHc,CAAf;AAIA,SAAOH,MAAP;AACD,CAPM;;AASA,IAAMM,8CAAmB,SAAnBA,gBAAmB,GAAoD;AAAA,MAAnDC,IAAmD,uEAA5C,EAA4C;AAAA,MAAxCC,eAAwC,uEAAtB,EAAsB;AAAA,MAAlBC,aAAkB;AAAA,MAC1EC,SAD0E,GAC5DH,IAD4D,CAC1EG,SAD0E;;AAElF,MAAMC,WAAWJ,KAAKK,IAAtB;AACA,MAAMC,SAASN,KAAKO,EAApB;AACA,MAAIC,eAAeC,eAAKC,SAAL,CAAe,SAAf,EAA0BR,aAA1B,CAAnB;AACA,MAAIS,iBAAiB,EAArB;;AAEA,WAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAAA,QACfC,IADe,GACwBD,MADxB,CACfC,IADe;AAAA,QACTC,eADS,GACwBF,MADxB,CACTE,eADS;AAAA,QACQC,WADR,GACwBH,MADxB,CACQG,WADR;;AAEvB,QAAMC,SAASD,eAAeD,eAA9B;AACA,QAAIG,YAAY,EAAhB;AACA,QAAI,CAACJ,IAAL,EAAW;AACTI,kBAAYjB,gBAAgBgB,MAAhB,KAA2B,EAAvC;AACA,UAAI,CAACC,UAAUC,MAAf,EAAuB;AACrB,eAAOV,eAAKC,SAAL,CAAe,SAAf,EAA0BR,aAA1B,CAAP;AACD;AACD,UAAIgB,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,eAAOD,UAAU,CAAV,EAAaJ,IAApB;AACD;AACD,aAAOL,eAAKC,SAAL,CAAe,UAAf,EAA2BR,aAA3B,CAAP;AACD;AACD,WAAOY,IAAP;AACD;;AAED,WAASM,SAAT,CAAmBP,MAAnB,EAA2B;AAAA,QACjBE,eADiB,GACgBF,MADhB,CACjBE,eADiB;AAAA,QACAC,WADA,GACgBH,MADhB,CACAG,WADA;;AAEzB,WAAQA,eAAeD,eAAvB;AACD;;AAED,UAAQZ,SAAR;AACE,SAAKkB,yBAAcC,OAAnB;AAA4B;AAC1Bd,uBAAeI,QAAQR,QAAR,CAAf;AACAO,yBAAiBS,UAAUhB,QAAV,CAAjB;AACA;AACD;AACD,SAAKiB,yBAAcE,QAAnB;AAA6B;AAC3Bf,uBAAeI,QAAQN,MAAR,CAAf;AACAK,yBAAiBS,UAAUd,MAAV,CAAjB;AACA;AACD;;AAED;AACE;AAbJ;;AAgBA,SAAO;AACLE,8BADK;AAELG;AAFK,GAAP;AAID,CAjDM","file":"utils.js","sourcesContent":["/**\n * @file tools\n */\nimport callDirection from 'ringcentral-integration/enums/callDirections';\nimport i18n from './i18n';\n\nexport const pickEleByProps = (props = {}, list = []) => {\n  const keys = Object.keys(props);\n  const result = list.filter((item) => {\n    const shouldPicked = keys.every(key => props[key] === item[key]);\n    return shouldPicked;\n  });\n  return result;\n};\n\nexport const pickFallBackInfo = (call = {}, contactMatchMap = {}, currentLocale) => {\n  const { direction } = call;\n  const callFrom = call.from;\n  const callTo = call.to;\n  let fallBackName = i18n.getString('Unknown', currentLocale);\n  let fallBackNumber = '';\n\n  function getName(target) {\n    const { name, extensionNumber, phoneNumber } = target;\n    const number = phoneNumber || extensionNumber;\n    let matchList = [];\n    if (!name) {\n      matchList = contactMatchMap[number] || [];\n      if (!matchList.length) {\n        return i18n.getString('Unknown', currentLocale);\n      }\n      if (matchList.length === 1) {\n        return matchList[0].name;\n      }\n      return i18n.getString('Multiple', currentLocale);\n    }\n    return name;\n  }\n\n  function getNumber(target) {\n    const { extensionNumber, phoneNumber } = target;\n    return (phoneNumber || extensionNumber);\n  }\n\n  switch (direction) {\n    case callDirection.inbound: {\n      fallBackName = getName(callFrom);\n      fallBackNumber = getNumber(callFrom);\n      break;\n    }\n    case callDirection.outbound: {\n      fallBackName = getName(callTo);\n      fallBackNumber = getNumber(callTo);\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return {\n    fallBackName,\n    fallBackNumber\n  };\n};\n"]}