{"version":3,"sources":["modules/Auth/index.js"],"names":["LoginStatusChangeEvent","Auth","deps","dep","optional","client","alert","brand","locale","tabManager","environment","connectivityMonitor","options","actionTypes","_client","_alert","_brand","_locale","_tabManager","_environment","_connectivityMonitor","_reducer","_beforeLogoutHandlers","Set","_afterLoggedInHandlers","_proxyFrame","_proxyFrameLoaded","_unbindEvents","_lastEnvironmentCounter","platform","service","onRequestError","apiResponse","Error","message","logout","onLoginSuccess","store","dispatch","type","loginSuccess","token","auth","data","handlers","handler","onLoginError","error","loginError","danger","authMessages","payload","onLogoutSuccess","logoutSuccess","onLogoutError","_cache","clean","logoutError","onRefreshSuccess","refreshSuccess","onRefreshError","isOffline","ready","connectivity","refreshTokenValid","refreshError","access_token","sessionExpired","ttl","addListener","events","requestError","removeListener","loggedIn","subscribe","status","moduleStatuses","pending","init","_bindEvents","initSuccess","loginStatus","notLoggedIn","send","event","name","args","tabSync","changeCounter","username","password","extension","remember","code","redirectUri","accessToken","expiresIn","endpointId","tokenType","login","setData","token_type","expires_in","refresh_token_expires_in","account","get","extensionData","ownerId","id","endpoint_id","owner_id","state","brandId","display","prompt","force","implicit","loginUrl","dismissAll","beforeLogout","result","cancelLogout","Promise","reject","beforeLogoutError","isImplicit","add","removeBeforeLogoutHandler","String","newAuthData","emit","console","url","resolve","window","location","href","_redirectUri","_proxyUri","freshLogin","_appSecret","length","RcModule","proxify"],"mappings":"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","sourcesContent":["import url from 'url';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport getAuthReducer from './getAuthReducer';\nimport actionTypes from './actionTypes';\nimport loginStatus from './loginStatus';\nimport authMessages from './authMessages';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nconst LoginStatusChangeEvent = 'loginStatusChange';\n\n/**\n * @class\n * @description Authentication module\n */\n@Module({\n  deps: [\n    'Client',\n    'Alert',\n    'Brand',\n    'Locale',\n    { dep: 'TabManager', optional: true },\n    { dep: 'Environment', optional: true },\n    { dep: 'AuthOptions', optional: true },\n    { dep: 'ConnectivityMonitor', optional: true },\n  ]\n})\nexport default class Auth extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Alert} params.alert - alert module instance\n   * @param {Brand} params.brand - brand module instance\n   * @param {Locale} params.locale - locale module instance\n   * @param {TabManager} params.tabManager - tabManager module instance\n   * @param {environment} params.Environment - environment module instance\n   * @param {connectivityMonitor} params.connectivityMonitor - connectivityMonitor module instance\n   * @param {String} params.redirectUri - redirect uri\n   * @param {String} params.proxyUri - proxyUri module instance\n   * @param {Number} params.defaultProxyRetry - default proxy retry time 5000\n   */\n  constructor({\n    client,\n    alert,\n    brand,\n    locale,\n    tabManager,\n    environment,\n    connectivityMonitor,\n    ...options\n  } = {}) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._client = ensureExist(client, 'client');\n    this._alert = ensureExist(alert, 'alert');\n    this._brand = ensureExist(brand, 'brand');\n    this._locale = ensureExist(locale, 'locale');\n    this._tabManager = tabManager;\n    this._environment = environment;\n    this._connectivityMonitor = connectivityMonitor;\n    this._reducer = getAuthReducer(this.actionTypes);\n    this._beforeLogoutHandlers = new Set();\n    this._afterLoggedInHandlers = new Set();\n    this._proxyFrame = null;\n    this._proxyFrameLoaded = false;\n    this._unbindEvents = null;\n    this._lastEnvironmentCounter = 0;\n  }\n  _bindEvents() {\n    if (this._unbindEvents) this._unbindEvents();\n\n    const platform = this._client.service.platform();\n    const client = this._client.service._client;\n    const onRequestError = (apiResponse) => {\n      if (\n        apiResponse instanceof Error &&\n        apiResponse.message === 'Token revoked'\n      ) {\n        this.logout();\n      }\n    };\n\n    const onLoginSuccess = async () => {\n      this.store.dispatch({\n        type: this.actionTypes.loginSuccess,\n        token: platform.auth().data(),\n      });\n      const handlers = [...this._afterLoggedInHandlers];\n      for (const handler of handlers) {\n        await (async () => handler())();\n      }\n    };\n    const onLoginError = (error) => {\n      this.store.dispatch({\n        type: this.actionTypes.loginError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.loginError,\n          payload: error,\n        });\n      }\n    };\n    const onLogoutSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n    };\n    const onLogoutError = (error) => {\n      platform._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutError,\n        error,\n      });\n      if (error) {\n        this._alert.danger({\n          message: authMessages.logoutError,\n          payload: error,\n        });\n      }\n    };\n    const onRefreshSuccess = () => {\n      this.store.dispatch({\n        type: this.actionTypes.refreshSuccess,\n        token: platform.auth().data(),\n      });\n    };\n    const onRefreshError = (error) => {\n      // user is still considered logged in if the refreshToken is still valid\n      let isOffline = (error.message === 'Failed to fetch' ||\n      error.message === 'The Internet connection appears to be offline.' ||\n      error.message === 'NetworkError when attempting to fetch resource.' ||\n      error.message === 'Network Error 0x2ee7, Could not complete the operation due to error 00002ee7.');\n      if (\n        this._connectivityMonitor &&\n        this._connectivityMonitor.ready &&\n        this._connectivityMonitor.connectivity === false\n      ) { isOffline = true; }\n\n      const refreshTokenValid = isOffline && platform.auth().refreshTokenValid();\n      this.store.dispatch({\n        type: this.actionTypes.refreshError,\n        error,\n        refreshTokenValid,\n      });\n      if (!refreshTokenValid && this._client.service.platform().auth().data().access_token !== '') {\n        this._alert.danger({\n          message: authMessages.sessionExpired,\n          payload: error,\n          ttl: 0,\n        });\n        // clean the cache so the error doesn't show again\n        platform._cache.clean();\n      }\n    };\n    platform.addListener(platform.events.loginSuccess, onLoginSuccess);\n    platform.addListener(platform.events.loginError, onLoginError);\n    platform.addListener(platform.events.logoutSuccess, onLogoutSuccess);\n    platform.addListener(platform.events.logoutError, onLogoutError);\n    platform.addListener(platform.events.refreshSuccess, onRefreshSuccess);\n    platform.addListener(platform.events.refreshError, onRefreshError);\n    client.addListener(client.events.requestError, onRequestError);\n    this._unbindEvents = () => {\n      platform.removeListener(platform.events.loginSuccess, onLoginSuccess);\n      platform.removeListener(platform.events.loginError, onLoginError);\n      platform.removeListener(platform.events.logoutSuccess, onLogoutSuccess);\n      platform.removeListener(platform.events.logoutError, onLogoutError);\n      platform.removeListener(platform.events.refreshSuccess, onRefreshSuccess);\n      platform.removeListener(platform.events.refreshError, onRefreshError);\n      client.removeListener(client.events.requestError, onRequestError);\n    };\n  }\n  initialize() {\n    let loggedIn;\n    this.store.subscribe(async () => {\n      if (\n        this.status === moduleStatuses.pending &&\n        this._locale.ready &&\n        (!this._tabManager || this._tabManager.ready) &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this.store.dispatch({\n          type: this.actionTypes.init,\n        });\n        const platform = this._client.service.platform();\n        loggedIn = await platform.loggedIn();\n        this._bindEvents();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n          loggedIn,\n          token: loggedIn ? platform.auth().data() : null,\n        });\n      }\n      if (\n        (this._tabManager && this._tabManager.ready) &&\n        this.ready\n      ) {\n        if (\n          (loggedIn && this.loginStatus === loginStatus.notLoggedIn) ||\n          (!loggedIn && this.loginStatus === loginStatus.loggedIn)\n        ) {\n          loggedIn = !loggedIn;\n          this._tabManager.send(LoginStatusChangeEvent, loggedIn);\n        } else if (\n          this._tabManager.event &&\n          this._tabManager.event.name === LoginStatusChangeEvent &&\n          this._tabManager.event.args[0] !== loggedIn\n        ) {\n          /* eslint { \"prefer-destructuring\": 0 } */\n          loggedIn = this._tabManager.event.args[0];\n          this.store.dispatch({\n            type: this.actionTypes.tabSync,\n            loggedIn,\n            token: loggedIn ? this._client.service.platform().auth().data() : null,\n          });\n        }\n      }\n      if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindEvents();\n      }\n    });\n  }\n\n  get redirectUri() {\n    return url.resolve(window.location.href, this._redirectUri);\n  }\n\n  get proxyUri() {\n    return this._proxyUri;\n  }\n\n  get token() {\n    return this.state.token;\n  }\n\n  get ownerId() {\n    return this.token.ownerId;\n  }\n\n  get endpointId() {\n    return this.token.endpointId;\n  }\n\n  get accessToken() {\n    return this.token.accessToken;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get loginStatus() {\n    return this.state.loginStatus;\n  }\n\n  get isFreshLogin() {\n    return this.state.freshLogin;\n  }\n\n  /**\n   * @function\n   * @param {String} options.username\n   * @param {String} options.password\n   * @param {String} options.extension\n   * @param {Booleal|Number} options.remember\n   * @param {String} params.code,\n   * @param {String} params.redirectUri,\n   * @return {Promise}\n   * @description Login either with username/password or with authorization code\n   */\n  @proxify\n  async login({\n    username,\n    password,\n    extension,\n    remember,\n    code,\n    redirectUri,\n    accessToken,\n    expiresIn,\n    endpointId,\n    tokenType\n  }) {\n    this.store.dispatch({\n      type: this.actionTypes.login,\n    });\n    let ownerId;\n    if (accessToken) {\n      this._client.service.platform().auth().setData({\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n      });\n      const extensionData = await this._client.account().extension().get();\n      ownerId = extensionData.id;\n    }\n    return this._client.service.platform().login({\n      username,\n      password,\n      extension,\n      remember,\n      code,\n      redirectUri,\n      endpoint_id: endpointId,\n      expires_in: expiresIn,\n      access_token: accessToken,\n      token_type: tokenType,\n      owner_id: ownerId,\n    });\n  }\n  /**\n   * @function\n   * @param {String} options.redirectUri\n   * @param {String} options.brandId\n   * @param {Boolean} options.force\n   * @param {Boolean} options.implicit\n   * @return {String}\n   * @description get OAuth page url\n   */\n  getLoginUrl({\n    redirectUri, state, brandId, display, prompt, force, implicit = false\n  }) {\n    return `${this._client.service.platform().loginUrl({\n      redirectUri,\n      state,\n      brandId,\n      display,\n      prompt,\n      implicit,\n    })}${force ? '&force' : ''}`;\n  }\n\n  /**\n   * @function\n   * @description Triggers the beforeLogoutHandlers to run\n   *  and then proceed to logout from ringcentral.\n   */\n  @proxify\n  async logout() {\n    this._alert.dismissAll();\n    this.store.dispatch({\n      type: this.actionTypes.beforeLogout,\n    });\n    const handlers = [...this._beforeLogoutHandlers];\n    try {\n      if (this._tabManager && this._tabManager.ready) { \n        this._tabManager.send(LoginStatusChangeEvent, false);\n      }\n      for (const handler of handlers) {\n        const result = await (async () => handler())();\n        if (result) {\n          this.store.dispatch({\n            type: this.actionTypes.cancelLogout,\n          });\n          if (this._tabManager && this._tabManager.ready) {\n            this._tabManager.send(LoginStatusChangeEvent, true);\n          }\n          return Promise.reject(result);\n        }\n      }\n    } catch (error) {\n      this._alert.danger({\n        message: authMessages.beforeLogoutError,\n        payload: error,\n      });\n    }\n    this.store.dispatch({\n      type: this.actionTypes.logout,\n    });\n    if (this.isImplicit) {\n      this._client.service.platform()._cache.clean();\n      this.store.dispatch({\n        type: this.actionTypes.logoutSuccess,\n      });\n      return null;\n    }\n    return this._client.service.platform().logout();\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  * @returns {Function}\n  */\n  addBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.add(handler);\n    return () => {\n      this.removeBeforeLogoutHandler(handler);\n    };\n  }\n\n  /**\n  * @function\n  * @param {Function} handler\n  */\n  removeBeforeLogoutHandler(handler) {\n    this._beforeLogoutHandlers.delete(handler);\n  }\n\n  addAfterLoggedInHandler(handler) {\n    this._afterLoggedInHandlers.add(handler);\n    return () => {\n      this._afterLoggedInHandlers.delete(handler);\n    };\n  }\n\n  @proxify\n  async refreshImplicitToken({\n    tokenType,\n    accessToken,\n    expiresIn,\n    endpointId,\n  }) {\n    try {\n      const extensionData = await this._client.account().extension().get();\n      const ownerId = String(extensionData.id);\n      if (ownerId !== String(this.ownerId)) {\n        return;\n      }\n      const platform = this._client.service.platform();\n      const newAuthData = {\n        token_type: tokenType,\n        access_token: accessToken,\n        expires_in: expiresIn,\n        refresh_token_expires_in: expiresIn,\n        endpoint_id: endpointId,\n      };\n      platform.auth().setData(newAuthData);\n      platform.emit(platform.events.refreshSuccess, newAuthData);\n    } catch (error) {\n      console.error('refreshImplicitToken error:', error);\n    }\n  }\n\n  @proxify\n  async checkIsLoggedIn() {\n    // SDK would return false when there's temporary network issues,\n    // but we should not return use back to welcome string and should\n    // still consider the user as being logged in.\n    await this._client.service.platform().loggedIn();\n    return this.state.loginStatus === loginStatus.loggedIn;\n  }\n\n  get loggedIn() {\n    return this.state.loginStatus === loginStatus.loggedIn ||\n      this.state.loginStatus === loginStatus.beforeLogout;\n  }\n\n  get notLoggedIn() {\n    return this.state.loginStatus === loginStatus.notLoggedIn;\n  }\n\n  get isImplicit() {\n    return !(\n      this._client.service.platform()._appSecret &&\n      this._client.service.platform()._appSecret.length > 0\n    );\n  }\n}\n"],"file":"index.js"}