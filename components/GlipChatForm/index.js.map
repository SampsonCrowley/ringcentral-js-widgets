{"version":3,"sources":["components/GlipChatForm/index.js"],"names":["isOnMobileDevice","navigator","userAgent","match","GlipChatForm","props","state","defaultValue","textValue","suggestions","_onInputChange","editorState","setState","onTextChange","mentions","map","mention","email","replace","member","members","find","m","matcherId","id","_onSearchChange","value","filter","search","toLowerCase","name","firstName","lastName","indexOf","_getSuggestions","_onSubmit","e","onSubmit","preventDefault","_onTextAreaKeyDown","key","shiftKey","ctrlKey","altKey","_onSelectEmoji","emoji","newText","setTimeout","_metionInput","reset","_onSelectFile","file","target","files","reader","FileReader","onloadend","evt","readyState","DONE","onUploadFile","result","readAsArrayBuffer","_autoFocus","nextProps","groupId","prevProps","length","suggestion","height","_editor","focusEditor","className","placeholder","noFoundString","styles","root","tools","emojisTooltip","width","emojiIcon","uploadIcon","lineHeight","mentionInput","input","submit","Component","propTypes","PropTypes","string","func","isRequired","array","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\nimport 'rc-editor-mention/assets/index.css';\nimport Mention, { Nav, toString, toEditorState, getMentions } from 'rc-editor-mention';\n\nimport EmojiSelect from '../EmojiSelect';\n\nimport emojiIcon from '../../assets/images/emoji.png';\nimport uploadIcon from '../../assets/images/upload.png';\nimport styles from './styles.scss';\n\nfunction isOnMobileDevice() {\n  if (typeof navigator !== 'undefined') {\n    return (\n      navigator.userAgent.match(/Android/i) ||\n      navigator.userAgent.match(/iPhone/i) ||\n      navigator.userAgent.match(/iPad/i)\n    );\n  }\n  return false;\n}\n\nexport default class GlipChatForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultValue: toEditorState(props.textValue),\n      suggestions: [],\n    };\n    this._onInputChange = (editorState) => {\n      this.setState({\n        defaultValue: editorState\n      });\n      if (typeof this.props.onTextChange === 'function') {\n        const mentions = getMentions(editorState).map((mention) => {\n          const email = mention.replace('@[', '').replace(']', '');\n          const member = this.props.members.find(m => m.email === email);\n          return {\n            mention,\n            matcherId: (member && member.id),\n          };\n        });\n        this.props.onTextChange(toString(editorState), mentions);\n      }\n    };\n\n    this._onSearchChange = (value) => {\n      const members = this.props.members.filter((m) => {\n        const search = value && value.toLowerCase();\n        if (!search) {\n          return true;\n        }\n        const name = `${m.firstName} ${m.lastName}`.toLowerCase();\n        if (name.indexOf(search) > -1) {\n          return true;\n        }\n        if (m.email && m.email.indexOf(search) > -1) {\n          return true;\n        }\n        return false;\n      });\n      const suggestions = this._getSuggestions(members);\n      this.setState({\n        suggestions,\n      });\n    };\n\n    this._onSubmit = (e) => {\n      this.props.onSubmit();\n      e.preventDefault();\n    };\n\n    this._onTextAreaKeyDown = (e) => {\n      if (\n        e.key === 'Enter' &&\n        !e.shiftKey &&\n        !e.ctrlKey &&\n        !e.altKey\n      ) {\n        this.props.onSubmit();\n        e.preventDefault();\n      }\n    };\n\n    this._onSelectEmoji = (emoji) => {\n      const newText = this.props.textValue ? `${this.props.textValue} ${emoji} ` : `${emoji} `;\n      if (typeof this.props.onTextChange === 'function') {\n        this.props.onTextChange(newText);\n      }\n      this.setState({\n        defaultValue: toEditorState(newText),\n      });\n      setTimeout(() => {\n        if (this._metionInput) {\n          this._metionInput.reset();\n        }\n      }, 10);\n    };\n\n    this._onSelectFile = (e) => {\n      const file = e.target.files[0];\n      if (!file) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onloadend = (evt) => {\n        if (evt.target.readyState === FileReader.DONE) {\n          this.props.onUploadFile(file.name, evt.target.result);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    };\n  }\n\n  componentDidMount() {\n    this._autoFocus();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.members !== nextProps.members) {\n      const suggestions = this._getSuggestions(nextProps.members);\n      this.setState({\n        suggestions,\n      });\n    }\n    if (\n      nextProps.groupId !== this.props.groupId\n    ) {\n      const suggestions = this._getSuggestions(nextProps.members);\n      this.setState({\n        suggestions,\n        defaultValue: toEditorState(nextProps.textValue)\n      });\n    }\n    if (this.props.textValue !== nextProps.textValue) {\n      this.setState({\n        defaultValue: toEditorState(nextProps.textValue)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.groupId !== this.props.groupId\n    ) {\n      this._autoFocus();\n      if (this._metionInput) {\n        this._metionInput.reset();\n      }\n    }\n    if (this.props.textValue.length === 0 && prevProps.textValue.length > 0) {\n      if (this._metionInput) {\n        this._metionInput.reset();\n      }\n    }\n  }\n\n  _getSuggestions(suggestions) {\n    return suggestions.map(\n      suggestion => (\n        <Nav style={{ height: 34 }} value={`[${suggestion.email}]`} key={suggestion.id} >\n          <span>{suggestion.firstName} {suggestion.lastName}</span>\n        </Nav>\n      )\n    );\n  }\n\n  _autoFocus() {\n    if (isOnMobileDevice()) {\n      return;\n    }\n    if (this._metionInput) {\n      this._metionInput._editor.focusEditor();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      placeholder,\n      height,\n    } = this.props;\n    const noFoundString = 'No found.'; // TODO: i18n after string confirmed\n    return (\n      <div className={classnames(styles.root, className)} style={{ height }} >\n        <div className={styles.tools}>\n          <Tooltip\n            placement=\"top\"\n            trigger=\"click\"\n            arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n            overlayClassName={styles.emojisTooltip}\n            overlay={(\n              <div style={{ width: 250, height: 200 }}>\n                <EmojiSelect onSelect={this._onSelectEmoji} />\n              </div>\n            )}\n          >\n            <img alt=\"emoji\" src={emojiIcon} className={styles.emoji} />\n          </Tooltip>\n          <label className={styles.file}>\n            <img alt=\"emoji\" src={uploadIcon} />\n            <input type=\"file\" onChange={this._onSelectFile} />\n          </label>\n        </div>\n        <form onSubmit={this._onSubmit}>\n          <Mention\n            style={{ width: '100%', height: (height - 35), lineHeight: '18px' }}\n            className={styles.mentionInput}\n            ref={(input) => { this._metionInput = input; }}\n            placeholder={placeholder}\n            placement=\"bottom\"\n            defaultValue={this.state.defaultValue}\n            onChange={this._onInputChange}\n            onSearchChange={this._onSearchChange}\n            suggestions={this.state.suggestions}\n            prefix=\"@\"\n            notFoundContent={noFoundString}\n            multiLines\n            mode=\"immutable\"\n            onKeyDown={this._onTextAreaKeyDown}\n          />\n          <input type=\"submit\" className={styles.submit} />\n        </form>\n      </div>\n    );\n  }\n}\n\nGlipChatForm.propTypes = {\n  textValue: PropTypes.string,\n  className: PropTypes.string,\n  onTextChange: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n  onUploadFile: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  groupId: PropTypes.string,\n  members: PropTypes.array,\n  height: PropTypes.number,\n};\n\nGlipChatForm.defaultProps = {\n  className: undefined,\n  textValue: '',\n  onTextChange: undefined,\n  placeholder: undefined,\n  groupId: undefined,\n  members: [],\n  height: 120\n};\n"],"file":"index.js"}