{"version":3,"sources":["modules/ContactMatcher/index.js"],"names":["ContactMatcher","deps","dep","optional","options","name","phoneNumber","ignoreCache","match","queries","dataMapping","length","phoneNumbers","ignoreQueue","forceMatchBatchNumbers","DataMatcher","proxify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASqBA,c;AAPrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,GAAG,EAAE,uBAAP;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAAD;AADA,CAAP,C;;;;;AAIC;;;AAGA,gCAEG;AAAA,QADEC,OACF;;AAAA;;AAAA;AAECC,MAAAA,IAAI,EAAE;AAFP,OAGID,OAHJ;AAKF;;;;;;;;;;;;;;AAICE,gBAAAA,W,SAAAA,W,4BACAC,W,EAAAA,W,kCAAc,K;;uBAER,KAAKC,KAAL,CAAW;AACfC,kBAAAA,OAAO,EAAE,CAACH,WAAD,CADM;AAEfC,kBAAAA,WAAW,EAAXA;AAFe,iBAAX,C;;;iDAIC,CAAC,CAAC,KAAKG,WAAL,CAAiBJ,WAAjB,CAAF,IAAmC,KAAKI,WAAL,CAAiBJ,WAAjB,EAA8BK,MAA9B,GAAuC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKjFC,gBAAAA,Y,SAAAA,Y;;uBAEM,KAAKJ,KAAL,CAAW;AACfC,kBAAAA,OAAO,EAAEG,YADM;AAEfL,kBAAAA,WAAW,EAAE,IAFE;AAGfM,kBAAAA,WAAW,EAAE;AAHE,iBAAX,C;;;;;;;;;;;;;;;;;;;;;;;;;;;AASNP,gBAAAA,W,SAAAA,W;;uBAEM,KAAKQ,sBAAL,CAA4B;AAChCF,kBAAAA,YAAY,EAAE,CAACN,WAAD;AADkB,iBAA5B,C;;;;;;;;;;;;;;;;;;;EAxCkCS,qB,oEAazCC,gB,qKAYAA,gB,uKAWAA,gB","sourcesContent":["import { Module } from '../../lib/di';\nimport DataMatcher from '../../lib/DataMatcher';\nimport proxify from '../../lib/proxy/proxify';\n\n/**\n * @class\n * @description Contact matcher managing module\n */\n@Module({\n  deps: [{ dep: 'ContactMatcherOptions', optional: true }]\n})\nexport default class ContactMatcher extends DataMatcher {\n  /**\n   * @constructor\n   */\n  constructor({\n    ...options\n  }) {\n    super({\n      name: 'contactMatcher',\n      ...options\n    });\n  }\n\n  @proxify\n  async hasMatchNumber({\n    phoneNumber,\n    ignoreCache = false,\n  }) {\n    await this.match({\n      queries: [phoneNumber],\n      ignoreCache,\n    });\n    return !!this.dataMapping[phoneNumber] && this.dataMapping[phoneNumber].length > 0;\n  }\n\n  @proxify\n  async forceMatchBatchNumbers({\n    phoneNumbers,\n  }) {\n    await this.match({\n      queries: phoneNumbers,\n      ignoreCache: true,\n      ignoreQueue: true,\n    });\n  }\n\n  @proxify\n  async forceMatchNumber({\n    phoneNumber,\n  }) {\n    await this.forceMatchBatchNumbers({\n      phoneNumbers: [phoneNumber],\n    });\n  }\n}\n"],"file":"index.js"}