{"version":3,"sources":["modules/Meeting/index.js"],"names":["MeetingErrors","type","_errors","push","message","length","Meeting","deps","dep","optional","alert","client","extensionInfo","storage","availabilityMonitor","reducers","showSaveAsDefault","options","actionTypes","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_reducer","_lastMeetingSettingKey","_defaultMeetingSettingKey","_showSaveAsDefault","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","ready","pending","dispatch","initSuccess","Object","keys","defaultMeetingSetting","extensionName","info","name","now","Date","startTime","setHours","getHours","meeting","_saveAsDefaultSetting","resetSuccess","_initMeeting","updateMeeting","lastMeetingInfo","dialInNumbers","meetingId","map","phoneNumber","location","join","country","filterFormattedNumber","countryCode","isoCode","formatTypes","international","isAlertSuccess","opener","isScheduling","initScheduling","_validate","formattedMeeting","_format","saveAsDefault","Promise","all","account","extension","post","serviceInfo","get","resp","scheduled","_saved","mobileDialingNumberTpl","getMobileDialingNumberTpl","id","phoneDialingNumberTpl","getPhoneDialingNumberTpl","result","scheduledHook","setTimeout","meetingStatus","scheduledSuccess","resetScheduling","error","warning","apiResponse","json","errorCode","permissionName","danger","insufficientPermissions","payload","checkIfHAError","internalError","_isUpdating","initUpdating","put","updated","updatedSuccess","resetUpdating","state","updatingStatus","obj","topic","meetingType","allowJoinBeforeHost","startHostVideo","startParticipantsVideo","audioOptions","password","schedule","formatted","MeetingType","RECURRING","_schedule","durationInMinutes","timeZone","UTC_TIMEZONE_ID","moment","utc","format","invalidMeetingInfo","_requireMeetingPassword","errors","emptyTopic","noPassword","durationIncorrect","saveAsDefaultSetting","notShowAgain","getItem","schedulingStatus","scheduleStatus","scheduling","status","RcModule","background","proxify"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { find } from 'ramda';\nimport format, { formatTypes } from '@ringcentral-integration/phone-number/lib/format';\n\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport actionTypes from './actionTypes';\nimport scheduleStatus from './scheduleStatus';\nimport meetingStatus from './meetingStatus';\nimport getMeetingReducer, {\n  getMeetingStorageReducer,\n  getDefaultMeetingSettingReducer,\n} from './getMeetingReducer';\nimport { UTC_TIMEZONE_ID, MeetingType, getDefaultMeetingSettings } from './meetingHelper';\n\n\nexport class MeetingErrors {\n  constructor(type) {\n    this._errors = [];\n    if (type) this._errors.push({ message: type });\n  }\n\n  push(type) {\n    if (type) this._errors.push({ message: type });\n  }\n\n  get all() {\n    return this._errors;\n  }\n\n  get length() {\n    return this._errors.length;\n  }\n}\n\nexport { UTC_TIMEZONE_ID, MeetingType, getDefaultMeetingSettings };\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true }\n  ]\n})\nexport default class Meeting extends RcModule {\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    showSaveAsDefault,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._storage = storage;\n    this._availabilityMonitor = availabilityMonitor;\n    this._reducer = getMeetingReducer(this.actionTypes, reducers);\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._defaultMeetingSettingKey = 'defaultMeetingSetting';\n    this._showSaveAsDefault = showSaveAsDefault;\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes)\n    });\n    if (this._showSaveAsDefault) {\n      this._storage.registerReducer({\n        key: this._defaultMeetingSettingKey,\n        reducer: getDefaultMeetingSettingReducer(this.actionTypes)\n      });\n    }\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      this.pending\n    );\n  }\n\n  _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess\n    });\n    if (!Object.keys(this.defaultMeetingSetting).length) {\n      const extensionName = this._extensionInfo.info.name || '';\n      const now = new Date();\n      const startTime = now.setHours(now.getHours() + 1, 0, 0);\n      const meeting = getDefaultMeetingSettings(extensionName, startTime);\n      this._saveAsDefaultSetting(meeting);\n    }\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready ||\n        (this._availabilityMonitor && !this._availabilityMonitor.ready)\n      ) &&\n      this.ready\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting settings from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  _initMeeting() {\n    const extensionName = this._extensionInfo.info.name || '';\n    const now = new Date();\n    const startTime = now.setHours(now.getHours() + 1, 0, 0);\n    if (this._showSaveAsDefault) {\n      this.store.dispatch({\n        type: this.actionTypes.updateMeeting,\n        meeting: {\n          ...getDefaultMeetingSettings(extensionName, startTime),\n          // Load saved default meeting settings\n          ...this.defaultMeetingSetting,\n        }\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.updateMeeting,\n        meeting: {\n          ...getDefaultMeetingSettings(extensionName, startTime),\n          // Load last meeting settings\n          ...this.lastMeetingInfo,\n        }\n      });\n    }\n  }\n\n  @proxify\n  update(meeting) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting\n    });\n  }\n\n  getMobileDialingNumberTpl(dialInNumbers, meetingId) {\n    return dialInNumbers\n      .map(({ phoneNumber, location = '' }) => `${phoneNumber},,${meetingId}# ${location}`)\n      .join('\\n    ');\n  }\n\n  getPhoneDialingNumberTpl(dialInNumbers) {\n    return dialInNumbers\n      .map(({ phoneNumber, location = '', country }) => {\n        const filterFormattedNumber = format({\n          phoneNumber,\n          countryCode: country.isoCode,\n          type: formatTypes.international\n        });\n        return `${filterFormattedNumber}${location}`;\n      })\n      .join('\\n    ');\n  }\n\n  @proxify\n  async schedule(meeting, { isAlertSuccess = true } = {}, opener) {\n    if (this.isScheduling) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this._saveAsDefaultSetting(meeting);\n      }\n      const [resp, serviceInfo] = await Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .post(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get()\n      ]);\n\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        }\n      });\n      const mobileDialingNumberTpl = this.getMobileDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      const phoneDialingNumberTpl = this.getPhoneDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      serviceInfo.mobileDialingNumberTpl = mobileDialingNumberTpl;\n      serviceInfo.phoneDialingNumberTpl = phoneDialingNumberTpl;\n      const result = {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n      if (typeof this.scheduledHook === 'function') {\n        await this.scheduledHook(result, opener);\n      }\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      } else if (errors && errors.apiResponse) {\n        const { errorCode, permissionName } = errors.apiResponse.json();\n        if (errorCode === 'InsufficientPermissions' && permissionName) {\n          this._alert.danger({\n            message: meetingStatus.insufficientPermissions,\n            payload: {\n              permissionName,\n            },\n          });\n        } else if (!this._availabilityMonitor ||\n            !this._availabilityMonitor.checkIfHAError(errors)) {\n          this._alert.danger({ message: meetingStatus.internalError });\n        }\n      }\n      return null;\n    }\n  }\n\n  @proxify\n  async getMeeting(meetingId) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .get();\n  }\n\n  @proxify\n  async updateMeeting(meetingId, meeting, { isAlertSuccess = false } = {}, opener) {\n    if (this._isUpdating(meetingId)) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n      if (this._showSaveAsDefault && meeting.saveAsDefault) {\n        this._saveAsDefaultSetting(meeting);\n      }\n      const [resp, serviceInfo] = await Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting(meetingId)\n          .put(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get()\n      ]);\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        },\n        meetingId,\n      });\n      const mobileDialingNumberTpl = this.getMobileDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      const phoneDialingNumberTpl = this.getPhoneDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      serviceInfo.mobileDialingNumberTpl = mobileDialingNumberTpl;\n      serviceInfo.phoneDialingNumberTpl = phoneDialingNumberTpl;\n      const result = {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n      if (typeof this.scheduledHook === 'function') {\n        await this.scheduledHook(result, opener);\n      }\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.updatedSuccess\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      } else if (errors && errors.apiResponse) {\n        const { errorCode, permissionName } = errors.apiResponse.json();\n        if (errorCode === 'InsufficientPermissions' && permissionName) {\n          this._alert.danger({\n            message: meetingStatus.insufficientPermissions,\n            payload: {\n              permissionName,\n            },\n          });\n        } else if (!this._availabilityMonitor ||\n            !this._availabilityMonitor.checkIfHAError(errors)) {\n          this._alert.danger({ message: meetingStatus.internalError });\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId) {\n    return this.state.updatingStatus &&\n      find(obj => obj.meetingId === meetingId, this.state.updatingStatus);\n  }\n\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting) {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n    } = meeting;\n    const formatted = {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n    };\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID }\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n    }\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const {\n      topic,\n      password,\n      schedule,\n      _requireMeetingPassword,\n    } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  _saveAsDefaultSetting(meeting) {\n    const formattedMeeting = this._format(meeting);\n    this.store.dispatch({\n      type: this.actionTypes.saveAsDefaultSetting,\n      meeting: {\n        ...formattedMeeting,\n        _saved: meeting.notShowAgain,\n      },\n    });\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get lastMeetingInfo() {\n    const state = this._storage.getItem(this._lastMeetingSettingKey);\n    return state;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get defaultMeetingSetting() {\n    return this._storage.getItem(this._defaultMeetingSettingKey) || {};\n  }\n\n  get showSaveAsDefault() {\n    return this._showSaveAsDefault || false;\n  }\n}\n"],"file":"index.js"}