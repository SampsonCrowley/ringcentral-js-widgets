{"version":3,"sources":["modules/Webphone/getWebphoneReducer.js"],"names":["getVideoElementPreparedReducer","types","state","type","videoElementPrepared","getConnectionStatusReducer","connectionStatus","disconnected","connect","reconnect","connecting","registered","connected","unregistered","disconnect","disconnecting","connectError","registrationFailed","connectFailed","getErrorCodeReducer","errorCode","getStatusCodeReducer","statusCode","getConnectRetryCountsReducer","resetRetryCounts","getActiveSessionIdReducer","session","sessions","callStart","id","callEnd","activeSessions","filter","x","sort","sortByLastActiveTimeDesc","clearSessionCaching","cached","getRingSessionIdReducer","callRing","ringSessions","getLastEndedSessionsReducer","startTime","isToVoicemail","isForwarded","isReplied","lastSessions","concat","slice","getSessionsReducer","cachingSessionIds","updateSessions","cachedSessions","forEach","cachedSession","find","removed","push","setSessionCaching","needUpdate","sessionId","onholdCachedSession","callStatus","sessionStatus","onHold","isOnHold","destroySessions","getWebphoneReducer","status","connectRetryCounts","activeSessionId","ringSessionId","lastEndedSessions"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport connectionStatus from './connectionStatus';\nimport sessionStatus from './sessionStatus';\nimport { isRing, sortByLastActiveTimeDesc } from './webphoneHelper';\n\nexport function getVideoElementPreparedReducer(types) {\n  return (state = false, { type }) => {\n    if (type === types.videoElementPrepared) return true;\n    return state;\n  };\n}\n\nexport function getConnectionStatusReducer(types) {\n  return (state = connectionStatus.disconnected, { type }) => {\n    switch (type) {\n      case types.connect:\n      case types.reconnect:\n        return connectionStatus.connecting;\n      case types.registered:\n        return connectionStatus.connected;\n      case types.unregistered:\n        return connectionStatus.disconnected;\n      case types.disconnect:\n        return connectionStatus.disconnecting;\n      case types.connectError:\n      case types.registrationFailed:\n        return connectionStatus.connectFailed;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getErrorCodeReducer(types) {\n  return (state = null, { type, errorCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.registrationFailed:\n        return errorCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getStatusCodeReducer(types) {\n  return (state = null, { type, statusCode = state }) => {\n    switch (type) {\n      case types.connectError:\n      case types.registrationFailed:\n        return statusCode;\n      case types.registered:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getConnectRetryCountsReducer(types) {\n  return (state = 0, { type }) => {\n    switch (type) {\n      case types.reconnect:\n        return state + 1;\n      case types.resetRetryCounts:\n      case types.registered:\n        return 0;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getActiveSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callStart:\n        return session.id;\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const activeSessions = sessions.filter(x => !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.clearSessionCaching: {\n        const activeSessions = sessions.filter(x => !x.cached && !isRing(x));\n        activeSessions.sort(sortByLastActiveTimeDesc);\n        return (activeSessions[0] && activeSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getRingSessionIdReducer(types) {\n  return (state = null, { type, session = {}, sessions = [] }) => {\n    switch (type) {\n      case types.callRing:\n        return session.id;\n      case types.callStart:\n      case types.callEnd: {\n        if (session.id !== state) {\n          return state;\n        }\n        const ringSessions = sessions.filter(x => isRing(x));\n        return (ringSessions[0] && ringSessions[0].id) || null;\n      }\n      case types.disconnect:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getLastEndedSessionsReducer(types) {\n  return (state = [], { type, session = {} }) => {\n    switch (type) {\n      case types.callEnd: {\n        if (\n          /**\n          * don't add incoming call that isn't relied by current app\n          *   to end sessions. this call can be answered by other apps\n          */\n          !session.startTime &&\n          !session.isToVoicemail &&\n          !session.isForwarded &&\n          !session.isReplied\n        ) {\n          return state;\n        }\n        const lastSessions = [session].concat(\n          state.filter(x => x.id !== session.id)\n        );\n        return lastSessions.slice(0, 5);\n      }\n      default:\n        return state;\n    }\n  };\n}\n\nexport function getSessionsReducer(types) {\n  return (state = [], { type, sessions, cachingSessionIds }) => {\n    switch (type) {\n      case types.updateSessions: {\n        const cachedSessions = state.filter(x => x.cached);\n        cachedSessions.forEach((cachedSession) => {\n          const session = sessions.find(x => x.id === cachedSession.id);\n          if (session) {\n            session.cached = true;\n          } else {\n            cachedSession.removed = true;\n            sessions.push(cachedSession);\n          }\n        });\n        return sessions.sort(sortByLastActiveTimeDesc);\n      }\n      case types.setSessionCaching: {\n        let needUpdate = false;\n        cachingSessionIds.forEach((sessionId) => {\n          const session = state.find(x => x.id === sessionId);\n          if (session) {\n            session.cached = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.clearSessionCaching: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.cached = false;\n            needUpdate = true;\n          }\n        });\n        if (needUpdate) {\n          return state.filter(x => !x.removed);\n        }\n        return state;\n      }\n      case types.onholdCachedSession: {\n        let needUpdate = false;\n        state.forEach((session) => {\n          if (session.cached) {\n            session.callStatus = sessionStatus.onHold;\n            session.isOnHold = true;\n            needUpdate = true;\n          }\n        });\n        return needUpdate ? [...state] : state;\n      }\n      case types.destroySessions:\n        return [];\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getWebphoneReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    videoElementPrepared: getVideoElementPreparedReducer(types),\n    connectionStatus: getConnectionStatusReducer(types),\n    connectRetryCounts: getConnectRetryCountsReducer(types),\n    errorCode: getErrorCodeReducer(types),\n    statusCode: getStatusCodeReducer(types),\n    activeSessionId: getActiveSessionIdReducer(types),\n    ringSessionId: getRingSessionIdReducer(types),\n    sessions: getSessionsReducer(types),\n    lastEndedSessions: getLastEndedSessionsReducer(types),\n  });\n}\n"],"file":"getWebphoneReducer.js"}