{"version":3,"sources":["lib/parseNumber/index.js"],"names":["parseNumber","phoneNumber","countryCode","areaCode","input","hasPlus","number","isServiceNumber","extension","hasInvalidChars"],"mappings":";;;;;;;;;AAAA;;AAEe,SAASA,WAAT,OAA6D;AAAA,MAAtCC,WAAsC,QAAtCA,WAAsC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,eAOtE,wBAAM;AACRC,IAAAA,KAAK,EAAEH,WADC;AAERC,IAAAA,WAAW,EAAXA,WAFQ;AAGRC,IAAAA,QAAQ,EAARA;AAHQ,GAAN,CAPsE;AAAA,MAExEE,OAFwE,UAExEA,OAFwE;AAAA,MAG3DC,MAH2D,UAGxEL,WAHwE;AAAA,MAIxEM,eAJwE,UAIxEA,eAJwE;AAAA,MAKxEC,SALwE,UAKxEA,SALwE;AAAA,MAMxEC,eANwE,UAMxEA,eANwE;;AAY1E,SAAO;AACLJ,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGLE,IAAAA,SAAS,EAATA,SAHK;AAILD,IAAAA,eAAe,EAAfA,eAJK;AAKLE,IAAAA,eAAe,EAAfA;AALK,GAAP;AAOD","sourcesContent":["import { parse } from '@ringcentral-integration/phone-number';\n\nexport default function parseNumber({ phoneNumber, countryCode, areaCode }) {\n  const {\n    hasPlus,\n    phoneNumber: number,\n    isServiceNumber,\n    extension,\n    hasInvalidChars,\n  } = parse({\n    input: phoneNumber,\n    countryCode,\n    areaCode,\n  });\n  return {\n    hasPlus,\n    number,\n    extension,\n    isServiceNumber,\n    hasInvalidChars,\n  };\n}\n"],"file":"index.js"}