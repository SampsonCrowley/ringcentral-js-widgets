{"version":3,"sources":["containers/CallCtrlPage/CallCtrlContainer.js"],"names":["CallCtrlContainer","props","layout","getInitialLayout","disableMergeAndAdd","mergeDisabled","addDisabled","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","value","sendDTMF","onFlip","onPark","onAdd","onMerge","onBeforeMerge","gotoParticipantsCtrl","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","isWebRTC","isConferenceCallOverload","hasConferenceCall","isInboundCall","direction","callDirections","inbound","isMergeAndAddDisabled","partyData","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","_updateMergeAddButtonDisabled","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","phoneNumber","outbound","to","from","fallbackUserName","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","recordStatus","showBackButton","onBackButtonClick","onTransfer","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","sourceIcons","phoneTypeRenderer","phoneSourceNameRenderer","conferenceCallEquipped","afterHideMergeConfirm","afterConfirmMerge","afterOnMerge","children","Component","propTypes","PropTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknown","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlContainer extends Component {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(this.props, layout);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n      addDisabled,\n    };\n\n    this.onLastMergingCallEnded = this:: this.onLastMergingCallEnded;\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id, this.state.layout);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n    this.onAdd = () =>\n      this.props.onAdd(this.props.session.id);\n    this.onMerge = () =>\n      this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () =>\n      this.props.onBeforeMerge(this.props.session.id);\n    this.gotoParticipantsCtrl = () =>\n      this.props.gotoParticipantsCtrl(this.props.session.id);\n  }\n\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(\n      lastCallInfo && lastCallInfo.status === sessionStatus.finished\n    );\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n\n    if (CallCtrlContainer.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n\n  disableMergeAndAdd(nextProps, layout) {\n    const {\n      lastCallInfo,\n      isWebRTC,\n      isConferenceCallOverload,\n      session,\n      hasConferenceCall,\n    } = nextProps;\n\n    const isInboundCall = session.direction === callDirections.inbound;\n    const isMergeAndAddDisabled = !isWebRTC || isInboundCall || !session.partyData;\n\n    let mergeDisabled = isMergeAndAddDisabled;\n    let addDisabled = isMergeAndAddDisabled;\n    if (\n      layout === callCtrlLayouts.mergeCtrl\n      && (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n\n    if (hasConferenceCall && isWebRTC && isConferenceCallOverload) {\n      mergeDisabled = true;\n      addDisabled = true;\n    }\n\n    return { mergeDisabled, addDisabled };\n  }\n\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl\n        });\n      }\n\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n\n    let layout = this.state.layout;\n    if (nextProps.session.id !== this.props.session.id) {\n      layout = this.getLayout(this.props, nextProps);\n      this.setState({\n        layout,\n      });\n\n      if (\n        layout === callCtrlLayouts.normalCtrl\n      ) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      layout === callCtrlLayouts.mergeCtrl\n      && CallCtrlContainer.isLastCallEnded(this.props) === false\n      && CallCtrlContainer.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (layout === callCtrlLayouts.conferenceCtrl &&\n      this.props.conferenceCallParties !== nextProps.conferenceCallParties) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n    this._updateMergeAddButtonDisabled(nextProps, layout);\n  }\n\n  _updateMergeAddButtonDisabled(nextProps, layout) {\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(nextProps, layout);\n    this.setState({\n      mergeDisabled,\n      addDisabled\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl\n      && props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n\n  _updateMergingPairToSessionId(nextProps = this.props, nextState = this.state) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.onFlip}\n        onTransfer={this.props.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.state.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.gotoParticipantsCtrl}\n        afterHideMergeConfirm={this.props.afterHideMergeConfirm}\n        afterConfirmMerge={this.props.afterConfirmMerge}\n        afterOnMerge={this.props.afterOnMerge}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlContainer.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  layout: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n  getInitialLayout: PropTypes.func,\n  closeMergingPair: PropTypes.func,\n  isWebRTC: PropTypes.bool,\n  isConferenceCallOverload: PropTypes.bool,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n};\n\nCallCtrlContainer.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknown },\n  conferenceCallId: null,\n  gotoParticipantsCtrl: i => i,\n  loadConference: i => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  layout: callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n  isWebRTC: false,\n  isConferenceCallOverload: false,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n};\n\n\nexport default CallCtrlContainer;\n"],"file":"CallCtrlContainer.js"}