{"version":3,"sources":["containers/ConferenceParticipantPage/index.js"],"names":["ConferenceParticipantContainer","props","mounted","nextProps","participants","onBackButtonClick","sessionCount","length","then","Component","propTypes","PropTypes","array","isRequired","func","number","mapToProps","_","phone","locale","conferenceCall","webphone","partyProfiles","sessions","currentLocale","mapToFunctions","routerInteraction","regionSettings","goBack","removeFunc","id","confId","conferences","Object","keys","removeFromConference","removeParticipantClickRemoveTrack","formatPhone","phoneNumber","areaCode","countryCode","afterOnRemoveBtnClick","participantListClickHangupTrack","afterOnCancel","removeParticipantClickCancelTrack","ConferenceParticipantPage"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport withPhone from '../../lib/withPhone';\nimport ConferenceParticipantPanel from '../../components/ConferenceParticipantPanel';\n\n\nclass ConferenceParticipantContainer extends Component {\n  static propTypes={\n    participants: PropTypes.array.isRequired,\n    onBackButtonClick: PropTypes.func.isRequired,\n    sessionCount: PropTypes.number.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    this.mounted = false;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.mounted) {\n      return;\n    }\n\n    const { participants, onBackButtonClick, sessionCount } = this.props;\n\n    if (!nextProps.participants.length\n      && nextProps.participants.length !== participants.length) {\n      sleep(750).then(() => {\n        if (this.mounted && sessionCount) {\n          onBackButtonClick();\n        }\n      });\n    }\n  }\n\n  render() {\n    return <ConferenceParticipantPanel {...this.props} />;\n  }\n}\n\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    conferenceCall,\n    webphone,\n  },\n}) {\n  const participants = conferenceCall.partyProfiles;\n  const sessionCount = (webphone.sessions && webphone.sessions.length) || 0;\n\n  return {\n    currentLocale: locale.currentLocale,\n    participants,\n    sessionCount,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conferenceCall,\n    routerInteraction,\n    regionSettings,\n  },\n}) {\n  return {\n    onBackButtonClick() {\n      routerInteraction.goBack();\n    },\n    async removeFunc(id) {\n      const confId = conferenceCall.conferences && Object.keys(conferenceCall.conferences)[0];\n      try {\n        await conferenceCall.removeFromConference(confId, id);\n        // user action track\n        conferenceCall.removeParticipantClickRemoveTrack();\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    // user action track functions\n    afterOnRemoveBtnClick: () => conferenceCall.participantListClickHangupTrack(),\n    afterOnCancel: () => conferenceCall.removeParticipantClickCancelTrack(),\n  };\n}\n\nconst ConferenceParticipantPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferenceParticipantContainer));\n\nexport default ConferenceParticipantPage;\n"],"file":"index.js"}