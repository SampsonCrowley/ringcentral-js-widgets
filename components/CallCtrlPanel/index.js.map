{"version":3,"sources":["components/CallCtrlPanel/index.js"],"names":["CallCtrlPanel","props","state","isShowKeyPad","isShowFlipPanel","isShowMergeConfirm","hiddenKeyPad","setState","showKeyPad","showFlipPanel","hideFlipPanel","onTransfer","sessionId","onMerge","onBeforeMerge","hasConferenceCall","layout","callCtrlLayouts","normalCtrl","showMergeConfirm","afterOnMerge","hideMergeConfirm","hideMergeConfirmAlt","afterHideMergeConfirm","confirmMerge","afterConfirmMerge","nextProps","onKeyPadChange","actions","addDisabled","areaCode","avatarUrl","backButtonLabel","brand","callStatus","children","conferenceCallEquipped","conferenceCallParties","controlBusy","countryCode","currentLocale","direction","fallBackName","flipNumbers","formatPhone","getAvatarUrl","gotoParticipantsCtrl","isOnFlip","isOnHold","isOnMute","lastCallInfo","mergeDisabled","nameMatches","onAdd","onBackButtonClick","onFlip","onHangup","onHold","onMute","onPark","onRecord","onSelectMatcherName","onStopRecord","onUnhold","onUnmute","phoneNumber","phoneSourceNameRenderer","phoneTypeRenderer","recordStatus","selectedMatcherIndex","showBackButton","showContactDisplayPlaceholder","showSpinner","sourceIcons","startTime","Component","propTypes","PropTypes","string","array","isRequired","number","bool","func","node","object","defaultProps","undefined","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport ActiveCallDialPad from '../ActiveCallDialPad';\nimport ActiveCallPanel from '../ActiveCallPanel';\nimport FlipPanel from '../FlipPanel';\nimport ConfirmMergeModal from '../ConfirmMergeModal';\nimport SpinnerOverlay from '../SpinnerOverlay';\n\nclass CallCtrlPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowKeyPad: false,\n      isShowFlipPanel: false,\n      isShowMergeConfirm: false,\n    };\n\n    this.hiddenKeyPad = () => {\n      this.setState({\n        isShowKeyPad: false,\n      });\n    };\n\n    this.showKeyPad = () => {\n      this.setState({\n        isShowKeyPad: true,\n      });\n    };\n\n    this.showFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: true,\n      });\n    };\n\n    this.hideFlipPanel = () => {\n      this.setState({\n        isShowFlipPanel: false,\n      });\n    };\n\n    this.onTransfer = () => {\n      this.props.onTransfer(this.props.sessionId);\n    };\n\n    this.onMerge = () => {\n      const { onBeforeMerge } = this.props;\n      if (!onBeforeMerge || onBeforeMerge()) {\n        if (\n          this.props.hasConferenceCall &&\n          this.props.layout === callCtrlLayouts.normalCtrl\n        ) {\n          this.showMergeConfirm();\n        } else if (this.props.onMerge) {\n          this.props.onMerge();\n        }\n      }\n      // track user click merge\n      this.props.afterOnMerge();\n    };\n    this.showMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: true,\n      });\n    };\n\n    this.hideMergeConfirm = () => {\n      this.setState({\n        isShowMergeConfirm: false,\n      });\n    };\n\n    this.hideMergeConfirmAlt = () => {\n      this.hideMergeConfirm();\n      // user action track\n      this.props.afterHideMergeConfirm();\n    };\n\n    this.confirmMerge = () => {\n      this.setState({\n        isShowMergeConfirm: false\n      });\n      if (this.props.onMerge) {\n        this.props.onMerge();\n      }\n      // user action track\n      this.props.afterConfirmMerge();\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.hasConferenceCall && this.state.isShowMergeConfirm) {\n      this.hideMergeConfirm();\n    }\n    if (this.props.sessionId !== nextProps.sessionId) {\n      this.hiddenKeyPad();\n      this.hideFlipPanel();\n      this.hideMergeConfirm();\n    }\n  }\n\n  render() {\n    const {\n      onKeyPadChange,\n      actions,\n      addDisabled,\n      areaCode,\n      avatarUrl,\n      backButtonLabel,\n      brand,\n      callStatus,\n      children,\n      conferenceCallEquipped,\n      conferenceCallParties,\n      controlBusy,\n      countryCode,\n      currentLocale,\n      direction,\n      fallBackName,\n      flipNumbers,\n      formatPhone,\n      getAvatarUrl,\n      gotoParticipantsCtrl,\n      hasConferenceCall,\n      isOnFlip,\n      isOnHold,\n      isOnMute,\n      lastCallInfo,\n      layout,\n      mergeDisabled,\n      nameMatches,\n      onAdd,\n      onBackButtonClick,\n      onFlip,\n      onHangup,\n      onHold,\n      onMute,\n      onPark,\n      onRecord,\n      onSelectMatcherName,\n      onStopRecord,\n      onUnhold,\n      onUnmute,\n      phoneNumber,\n      phoneSourceNameRenderer,\n      phoneTypeRenderer,\n      recordStatus,\n      selectedMatcherIndex,\n      sessionId,\n      showBackButton,\n      showContactDisplayPlaceholder,\n      showSpinner,\n      sourceIcons,\n      startTime,\n    } = this.props;\n    const {\n      isShowKeyPad,\n      isShowFlipPanel,\n      isShowMergeConfirm,\n    } = this.state;\n\n    if (isShowKeyPad) {\n      return (\n        <ActiveCallDialPad\n          onChange={onKeyPadChange}\n          hiddenDialPad={this.hiddenKeyPad}\n          onHangup={onHangup}\n          currentLocale={currentLocale}\n        />\n      );\n    }\n    if (isShowFlipPanel) {\n      return (\n        <FlipPanel\n          isOnFlip={isOnFlip}\n          flipNumbers={flipNumbers}\n          currentLocale={currentLocale}\n          formatPhone={formatPhone}\n          hideFlipPanel={this.hideFlipPanel}\n          onFlip={onFlip}\n          complete={onHangup}\n        />\n      );\n    }\n    return (\n      <ActiveCallPanel\n        showBackButton={showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={onBackButtonClick}\n        currentLocale={currentLocale}\n        formatPhone={formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={sessionId}\n        callStatus={callStatus}\n        startTime={startTime}\n        isOnMute={isOnMute}\n        isOnHold={isOnHold}\n        recordStatus={recordStatus}\n        onMute={onMute}\n        onUnmute={onUnmute}\n        onHold={onHold}\n        onUnhold={onUnhold}\n        onRecord={onRecord}\n        onStopRecord={onStopRecord}\n        onShowKeyPad={this.showKeyPad}\n        onHangup={onHangup}\n        onPark={onPark}\n        onAdd={onAdd}\n        onMerge={this.onMerge}\n        nameMatches={nameMatches}\n        fallBackName={fallBackName}\n        areaCode={areaCode}\n        countryCode={countryCode}\n        selectedMatcherIndex={selectedMatcherIndex}\n        onSelectMatcherName={onSelectMatcherName}\n        avatarUrl={avatarUrl}\n        brand={brand}\n        showContactDisplayPlaceholder={showContactDisplayPlaceholder}\n        onShowFlipPanel={this.showFlipPanel}\n        onToggleTransferPanel={this.onTransfer}\n        gotoParticipantsCtrl={gotoParticipantsCtrl}\n        flipNumbers={flipNumbers}\n        sourceIcons={sourceIcons}\n        phoneTypeRenderer={phoneTypeRenderer}\n        phoneSourceNameRenderer={phoneSourceNameRenderer}\n        layout={layout}\n        direction={direction}\n        addDisabled={addDisabled}\n        mergeDisabled={mergeDisabled}\n        conferenceCallEquipped={conferenceCallEquipped}\n        hasConferenceCall={hasConferenceCall}\n        conferenceCallParties={conferenceCallParties}\n        lastCallInfo={lastCallInfo}\n        getAvatarUrl={getAvatarUrl}\n        actions={actions}\n        controlBusy={controlBusy}\n      >\n        {children}\n        {showSpinner ? <SpinnerOverlay /> : null}\n        {\n          layout === callCtrlLayouts.normalCtrl ?\n            (\n              <ConfirmMergeModal\n                currentLocale={currentLocale}\n                show={isShowMergeConfirm}\n                onMerge={this.confirmMerge}\n                onCancel={this.hideMergeConfirmAlt}\n                partyProfiles={conferenceCallParties}\n              />\n            ) :\n            null\n        }\n      </ActiveCallPanel>\n    );\n  }\n}\n\nCallCtrlPanel.propTypes = {\n  callStatus: PropTypes.string,\n  sessionId: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  nameMatches: PropTypes.array.isRequired,\n  fallBackName: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  startTime: PropTypes.number,\n  isOnMute: PropTypes.bool,\n  isOnHold: PropTypes.bool,\n  isOnFlip: PropTypes.bool,\n  flipNumbers: PropTypes.array,\n  recordStatus: PropTypes.string,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func,\n  onStopRecord: PropTypes.func,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onPark: PropTypes.func,\n  onHangup: PropTypes.func.isRequired,\n  onFlip: PropTypes.func,\n  onTransfer: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  onKeyPadChange: PropTypes.func,\n  formatPhone: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  selectedMatcherIndex: PropTypes.number.isRequired,\n  onSelectMatcherName: PropTypes.func,\n  avatarUrl: PropTypes.string,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  layout: PropTypes.string.isRequired,\n  showSpinner: PropTypes.bool,\n  direction: PropTypes.string,\n  addDisabled: PropTypes.bool,\n  mergeDisabled: PropTypes.bool,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallParties: PropTypes.array,\n  getAvatarUrl: PropTypes.func,\n  gotoParticipantsCtrl: PropTypes.func,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n  actions: PropTypes.array,\n  controlBusy: PropTypes.bool,\n};\n\nCallCtrlPanel.defaultProps = {\n  startTime: null,\n  isOnMute: false,\n  isOnHold: false,\n  isOnFlip: false,\n  flipNumbers: [],\n  phoneNumber: null,\n  children: undefined,\n  avatarUrl: null,\n  showBackButton: false,\n  backButtonLabel: 'Active Calls',\n  onBackButtonClick: null,\n  sessionId: undefined,\n  callStatus: null,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  direction: null,\n  addDisabled: false,\n  mergeDisabled: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: undefined,\n  getAvatarUrl: () => null,\n  gotoParticipantsCtrl: i => i,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n  onFlip: () => null,\n  onRecord: () => null,\n  onStopRecord: () => null,\n  onPark: () => null,\n  onKeyPadChange: () => null,\n  onSelectMatcherName: () => null,\n  actions: [],\n  recordStatus: '',\n  controlBusy: false,\n};\n\nexport default CallCtrlPanel;\n"],"file":"index.js"}