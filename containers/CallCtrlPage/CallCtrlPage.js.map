{"version":3,"sources":["containers/CallCtrlPage/CallCtrlPage.js"],"names":["CallCtrlPage","props","layout","getInitialLayout","disableMergeAndAdd","mergeDisabled","addDisabled","state","selectedMatcherIndex","avatarUrl","onLastMergingCallEnded","onSelectMatcherName","option","nameMatches","findIndex","match","id","setState","contact","updateSessionMatchedContact","session","getAvatarUrl","then","onMute","onUnmute","onHold","onUnhold","onRecord","onStopRecord","onHangup","onKeyPadChange","sendDTMF","value","onFlip","onTransfer","onPark","onAdd","onMerge","onBeforeMerge","_mounted","_updateAvatarAndMatchIndex","_updateCurrentConferenceCall","_updateMergingPairToSessionId","isLastCallEnded","nextProps","lastCallInfo","isWebRTC","isConferenceCallOverload","hasConferenceCall","isInboundCall","direction","callDirections","inbound","isMergeAndAddDisabled","partyData","callCtrlLayouts","mergeCtrl","status","sessionStatus","finished","normalCtrl","closeMergingPair","lastProps","showSpinner","conferenceCtrl","nextState","getLayout","conferenceCallParties","_updateMergeAddButtonDisabled","contactMatch","loadConference","conferenceCallId","setMergeParty","toSessionId","phoneNumber","outbound","to","from","fallbackUserName","i18n","getString","currentLocale","backButtonLabel","formatPhone","callStatus","startTime","isOnMute","isOnHold","isOnFlip","isOnTransfer","recordStatus","showBackButton","onBackButtonClick","areaCode","countryCode","brand","showContactDisplayPlaceholder","flipNumbers","sourceIcons","searchContactList","searchContact","phoneTypeRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","conferenceCallEquipped","gotoParticipantsCtrl","afterHideMergeConfirm","afterConfirmMerge","afterOnMerge","children","Component","propTypes","PropTypes","shape","string","number","bool","object","isRequired","func","node","array","defaultProps","undefined","calleeType","calleeTypes","unknow","i"],"mappings":"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","file":"CallCtrlPage.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport calleeTypes from 'ringcentral-integration/enums/calleeTypes';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport i18n from './i18n';\n\nclass CallCtrlPage extends Component {\n  constructor(props) {\n    super(props);\n    const layout = props.getInitialLayout(this.props);\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(this.props, layout);\n    this.state = {\n      selectedMatcherIndex: 0,\n      avatarUrl: null,\n      layout,\n      mergeDisabled,\n      addDisabled,\n    };\n\n    this.onLastMergingCallEnded = this::this.onLastMergingCallEnded;\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n        avatarUrl: null,\n      });\n      const contact = nameMatches[selectedMatcherIndex];\n      if (contact) {\n        this.props.updateSessionMatchedContact(this.props.session.id, contact);\n        this.props.getAvatarUrl(contact).then((avatarUrl) => {\n          this.setState({ avatarUrl });\n        });\n      }\n    };\n\n    this.onMute = () =>\n      this.props.onMute(this.props.session.id);\n    this.onUnmute = () =>\n      this.props.onUnmute(this.props.session.id);\n    this.onHold = () =>\n      this.props.onHold(this.props.session.id);\n    this.onUnhold = () =>\n      this.props.onUnhold(this.props.session.id);\n    this.onRecord = () =>\n      this.props.onRecord(this.props.session.id);\n    this.onStopRecord = () =>\n      this.props.onStopRecord(this.props.session.id);\n    this.onHangup = () =>\n      this.props.onHangup(this.props.session.id, this.state.layout);\n    this.onKeyPadChange = value =>\n      this.props.sendDTMF(value, this.props.session.id);\n    this.onFlip = value =>\n      this.props.onFlip(value, this.props.session.id);\n    this.onTransfer = value =>\n      this.props.onTransfer(value, this.props.session.id);\n    this.onPark = () =>\n      this.props.onPark(this.props.session.id);\n    this.onAdd = () =>\n      this.props.onAdd(this.props.session.id);\n    this.onMerge = () =>\n      this.props.onMerge(this.props.session.id);\n    this.onBeforeMerge = () =>\n      this.props.onBeforeMerge(this.props.session.id);\n  }\n\n  static isLastCallEnded({ lastCallInfo }) {\n    return !!(\n      lastCallInfo && lastCallInfo.status === sessionStatus.finished\n    );\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this._updateAvatarAndMatchIndex(this.props);\n    this._updateCurrentConferenceCall(this.props);\n    this._updateMergingPairToSessionId();\n\n    if (CallCtrlPage.isLastCallEnded(this.props)) {\n      /**\n       * if the last has already been terminated after rendering, need to trigger the callback at the point\n       */\n      this.onLastMergingCallEnded();\n    }\n  }\n\n  disableMergeAndAdd(nextProps, layout) {\n    const {\n      lastCallInfo,\n      isWebRTC,\n      isConferenceCallOverload,\n      session,\n      hasConferenceCall,\n    } = nextProps;\n\n    const isInboundCall = session.direction === callDirections.inbound;\n    const isMergeAndAddDisabled = !isWebRTC || isInboundCall || !session.partyData;\n\n    let mergeDisabled = isMergeAndAddDisabled;\n    let addDisabled = isMergeAndAddDisabled;\n    if (\n      layout === callCtrlLayouts.mergeCtrl\n    && (!lastCallInfo || lastCallInfo.status === sessionStatus.finished)\n    ) {\n      mergeDisabled = true;\n    }\n\n    if (hasConferenceCall && isWebRTC && isConferenceCallOverload) {\n      mergeDisabled = true;\n      addDisabled = true;\n    }\n\n    return { mergeDisabled, addDisabled };\n  }\n\n  async onLastMergingCallEnded() {\n    if (this._mounted) {\n      await sleep(2000);\n\n      if (this._mounted) {\n        this.setState({\n          layout: callCtrlLayouts.normalCtrl\n        });\n      }\n\n      if (this.props.closeMergingPair) {\n        this.props.closeMergingPair();\n      }\n    }\n  }\n\n  getLayout(lastProps, nextProps) {\n    if (nextProps.showSpinner) {\n      return callCtrlLayouts.conferenceCtrl;\n    }\n    return this.props.getInitialLayout(nextProps);\n  }\n\n  componentWillReceiveProps(nextProps, nextState) {\n    this._updateMergingPairToSessionId(nextProps, nextState);\n\n    let layout = this.state.layout;\n    if (nextProps.session.id !== this.props.session.id) {\n      layout = this.getLayout(this.props, nextProps);\n      this.setState({\n        layout,\n      });\n\n      if (\n        layout === callCtrlLayouts.normalCtrl\n      ) {\n        this._updateAvatarAndMatchIndex(nextProps);\n      }\n    } else if (\n      layout === callCtrlLayouts.mergeCtrl\n        && CallCtrlPage.isLastCallEnded(this.props) === false\n        && CallCtrlPage.isLastCallEnded(nextProps) === true\n    ) {\n      this.onLastMergingCallEnded();\n    } else if (layout === callCtrlLayouts.conferenceCtrl &&\n        this.props.conferenceCallParties !== nextProps.conferenceCallParties) {\n      this._updateCurrentConferenceCall(nextProps);\n    }\n    this._updateMergeAddButtonDisabled(nextProps, layout);\n  }\n\n  _updateMergeAddButtonDisabled(nextProps, layout) {\n    const { mergeDisabled, addDisabled } = this.disableMergeAndAdd(nextProps, layout);\n    this.setState({\n      mergeDisabled,\n      addDisabled\n    });\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _updateAvatarAndMatchIndex(props) {\n    let contact = props.session.contactMatch;\n    let selectedMatcherIndex = 0;\n    if (!contact) {\n      contact = props.nameMatches && props.nameMatches[0];\n    } else {\n      selectedMatcherIndex = props.nameMatches.findIndex(match =>\n        match.id === contact.id\n      );\n    }\n    this.setState({\n      selectedMatcherIndex,\n      avatarUrl: null,\n    });\n    if (contact) {\n      props.getAvatarUrl(contact).then((avatarUrl) => {\n        if (!this._mounted) {\n          return;\n        }\n        this.setState({ avatarUrl });\n      });\n    }\n  }\n\n  _updateCurrentConferenceCall(props) {\n    if (\n      this.state.layout === callCtrlLayouts.conferenceCtrl\n      && props.loadConference\n    ) {\n      props.loadConference(props.conferenceCallId);\n    }\n  }\n\n  _updateMergingPairToSessionId(nextProps = this.props, nextState = this.state) {\n    if (\n      nextState.layout === callCtrlLayouts.mergeCtrl &&\n      nextProps.lastCallInfo\n    ) {\n      nextProps.setMergeParty({ toSessionId: nextProps.session.id });\n    }\n  }\n\n  render() {\n    const { session } = this.props;\n    if (!session.id) {\n      return null;\n    }\n\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n\n    let fallbackUserName;\n    if (session.direction === callDirections.inbound && session.from === 'anonymous') {\n      fallbackUserName = i18n.getString('anonymous', this.props.currentLocale);\n    }\n    if (!fallbackUserName) {\n      fallbackUserName = i18n.getString('unknown', this.props.currentLocale);\n    }\n\n    const backButtonLabel = this.props.backButtonLabel\n      ? this.props.backButtonLabel\n      : i18n.getString('activeCalls', this.props.currentLocale);\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        formatPhone={this.props.formatPhone}\n        phoneNumber={phoneNumber}\n        sessionId={session.id}\n        callStatus={session.callStatus}\n        startTime={session.startTime}\n        isOnMute={session.isOnMute}\n        isOnHold={session.isOnHold}\n        isOnFlip={session.isOnFlip}\n        isOnTransfer={session.isOnTransfer}\n        recordStatus={session.recordStatus}\n        showBackButton={this.props.showBackButton}\n        backButtonLabel={backButtonLabel}\n        onBackButtonClick={this.props.onBackButtonClick}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onRecord={this.onRecord}\n        onStopRecord={this.onStopRecord}\n        onKeyPadChange={this.onKeyPadChange}\n        onHangup={this.onHangup}\n        onAdd={this.onAdd}\n        onMerge={this.onMerge}\n        onBeforeMerge={this.onBeforeMerge}\n        onFlip={this.onFlip}\n        onTransfer={this.onTransfer}\n        onPark={this.onPark}\n        nameMatches={this.props.nameMatches}\n        fallBackName={fallbackUserName}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        onSelectMatcherName={this.onSelectMatcherName}\n        avatarUrl={this.state.avatarUrl}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n        flipNumbers={this.props.flipNumbers}\n        sourceIcons={this.props.sourceIcons}\n        searchContactList={this.props.searchContactList}\n        searchContact={this.props.searchContact}\n        phoneTypeRenderer={this.props.phoneTypeRenderer}\n        recipientsContactInfoRenderer={this.props.recipientsContactInfoRenderer}\n        recipientsContactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n        layout={this.state.layout}\n        showSpinner={this.props.showSpinner}\n        direction={session.direction}\n        addDisabled={this.state.addDisabled}\n        mergeDisabled={this.state.mergeDisabled}\n        conferenceCallEquipped={this.props.conferenceCallEquipped}\n        hasConferenceCall={this.props.hasConferenceCall}\n        conferenceCallParties={this.props.conferenceCallParties}\n        lastCallInfo={this.props.lastCallInfo}\n        getAvatarUrl={this.props.getAvatarUrl}\n        gotoParticipantsCtrl={this.props.gotoParticipantsCtrl}\n        afterHideMergeConfirm={this.props.afterHideMergeConfirm}\n        afterConfirmMerge={this.props.afterConfirmMerge}\n        afterOnMerge={this.props.afterOnMerge}\n      >\n        {this.props.children}\n      </CallCtrlPanel>\n    );\n  }\n}\n\nCallCtrlPage.propTypes = {\n  session: PropTypes.shape({\n    id: PropTypes.string,\n    direction: PropTypes.string,\n    startTime: PropTypes.number,\n    isOnMute: PropTypes.bool,\n    isOnHold: PropTypes.bool,\n    isOnFlip: PropTypes.bool,\n    isOnTransfer: PropTypes.bool,\n    recordStatus: PropTypes.string,\n    to: PropTypes.string,\n    from: PropTypes.string,\n    contactMatch: PropTypes.object,\n  }).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onUnmute: PropTypes.func.isRequired,\n  onHold: PropTypes.func.isRequired,\n  onUnhold: PropTypes.func.isRequired,\n  onRecord: PropTypes.func.isRequired,\n  onStopRecord: PropTypes.func.isRequired,\n  onHangup: PropTypes.func.isRequired,\n  sendDTMF: PropTypes.func.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  onAdd: PropTypes.func,\n  onMerge: PropTypes.func,\n  onBeforeMerge: PropTypes.func,\n  onFlip: PropTypes.func.isRequired,\n  onPark: PropTypes.func.isRequired,\n  onTransfer: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  nameMatches: PropTypes.array.isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  getAvatarUrl: PropTypes.func.isRequired,\n  updateSessionMatchedContact: PropTypes.func.isRequired,\n  showBackButton: PropTypes.bool,\n  backButtonLabel: PropTypes.string,\n  onBackButtonClick: PropTypes.func,\n  brand: PropTypes.string.isRequired,\n  showContactDisplayPlaceholder: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  sourceIcons: PropTypes.object,\n  searchContactList: PropTypes.array.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  phoneTypeRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  layout: PropTypes.string,\n  showSpinner: PropTypes.bool,\n  conferenceCallParties: PropTypes.array,\n  conferenceCallEquipped: PropTypes.bool,\n  hasConferenceCall: PropTypes.bool,\n  lastCallInfo: PropTypes.object,\n  conferenceCallId: PropTypes.string,\n  gotoParticipantsCtrl: PropTypes.func,\n  loadConference: PropTypes.func,\n  getInitialLayout: PropTypes.func,\n  closeMergingPair: PropTypes.func,\n  isWebRTC: PropTypes.bool,\n  isConferenceCallOverload: PropTypes.bool,\n  afterHideMergeConfirm: PropTypes.func,\n  afterConfirmMerge: PropTypes.func,\n  afterOnMerge: PropTypes.func,\n};\n\nCallCtrlPage.defaultProps = {\n  children: undefined,\n  showBackButton: false,\n  backButtonLabel: null,\n  onBackButtonClick: null,\n  sourceIcons: undefined,\n  phoneTypeRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  onAdd: undefined,\n  onMerge: undefined,\n  onBeforeMerge: undefined,\n  showSpinner: false,\n  conferenceCallEquipped: false,\n  hasConferenceCall: false,\n  conferenceCallParties: undefined,\n  lastCallInfo: { calleeType: calleeTypes.unknow },\n  conferenceCallId: null,\n  gotoParticipantsCtrl: i => i,\n  loadConference: i => i,\n  getInitialLayout: () => callCtrlLayouts.normalCtrl,\n  layout: callCtrlLayouts.normalCtrl,\n  closeMergingPair: null,\n  isWebRTC: false,\n  isConferenceCallOverload: false,\n  afterHideMergeConfirm: () => null,\n  afterConfirmMerge: () => null,\n  afterOnMerge: () => null,\n};\n\n\nexport default CallCtrlPage;\n"]}