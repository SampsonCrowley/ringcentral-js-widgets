{"version":3,"sources":["components/AudioSettingsPanel/index.js"],"names":["AudioSettingsPanel","props","onSave","state","dialButtonVolume","dialButtonMuted","ringtoneVolume","ringtoneMuted","callVolume","inputDeviceId","outputDeviceId","onReset","setState","onDialButtonVolumeChange","onDialButtonMutedChange","onRingtoneVolumeChange","onRingtoneMutedChange","onCallVolumeChange","onOutputDeviceIdChange","device","deviceId","onInputDeviceIdChange","renderOutputDevice","value","availableOutputDevices","label","renderInputDevice","availableInputDevices","newProps","currentLocale","onBackButtonClick","className","supportDevices","userMedia","isWebRTC","checkUserMedia","outputDeviceDisabled","inputDeviceDisabled","hasChanges","permission","i18n","getString","outputDevice","styles","select","length","renderDeviceOption","renderDeviceValue","inputDevice","root","content","Component","devicePropType","PropTypes","string","isRequired","propTypes","number","bool","func","arrayOf","shape","defaultProps"],"mappings":"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","sourcesContent":["import { all, find } from 'ramda';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport InputField from '../InputField';\nimport Select from '../DropdownSelect';\nimport Button from '../Button';\nimport SaveButton from '../SaveButton';\nimport IconLine from '../IconLine';\n\nexport default class AudioSettingsPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dialButtonVolume: props.dialButtonVolume,\n      dialButtonMuted: props.dialButtonMuted,\n      ringtoneVolume: props.ringtoneVolume,\n      ringtoneMuted: props.ringtoneMuted,\n      callVolume: props.callVolume,\n      inputDeviceId: props.inputDeviceId,\n      outputDeviceId: props.outputDeviceId,\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.dialButtonVolume !== this.props.dialButtonVolume) {\n      this.setState({\n        dialButtonVolume: newProps.dialButtonVolume,\n      });\n    }\n    if (newProps.dialButtonMuted !== this.props.dialButtonMuted) {\n      this.setState({\n        dialButtonMuted: newProps.dialButtonMuted,\n      });\n    }\n    if (newProps.ringtoneVolume !== this.props.ringtoneVolume) {\n      this.setState({\n        ringtoneVolume: newProps.ringtoneVolume,\n      });\n    }\n    if (newProps.ringtoneMuted !== this.props.ringtoneMuted) {\n      this.setState({\n        ringtoneMuted: newProps.ringtoneMuted,\n      });\n    }\n    if (newProps.callVolume !== this.props.callVolume) {\n      this.setState({\n        callVolume: newProps.callVolume,\n      });\n    }\n    if (newProps.inputDeviceId !== this.props.inputDeviceId || all(\n      device => device.deviceId !== this.state.inputDeviceId,\n      newProps.availableInputDevices\n    )) {\n      this.setState({\n        inputDeviceId: newProps.inputDeviceId,\n      });\n    }\n    if (newProps.outputDeviceId !== this.props.outputDeviceId || all(\n      device => device.deviceId !== this.state.outputDeviceId,\n      newProps.availableOutputDevices\n    )) {\n      this.setState({\n        outputDeviceId: newProps.outputDeviceId,\n      });\n    }\n  }\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const {\n        dialButtonVolume,\n        dialButtonMuted,\n        ringtoneVolume,\n        ringtoneMuted,\n        callVolume,\n        inputDeviceId,\n        outputDeviceId,\n      } = this.state;\n      this.props.onSave({\n        dialButtonVolume,\n        dialButtonMuted,\n        ringtoneVolume,\n        ringtoneMuted,\n        callVolume,\n        inputDeviceId,\n        outputDeviceId,\n      });\n    }\n  }\n  onReset = () => {\n    const {\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      inputDeviceId,\n      outputDeviceId,\n    } = this.props;\n    this.setState({\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      inputDeviceId,\n      outputDeviceId,\n    });\n  }\n  onDialButtonVolumeChange = (dialButtonVolume) => {\n    this.setState({\n      dialButtonVolume,\n    });\n  }\n  onDialButtonMutedChange = (dialButtonMuted) => {\n    this.setState({\n      dialButtonMuted,\n    });\n  }\n  onRingtoneVolumeChange = (ringtoneVolume) => {\n    this.setState({\n      ringtoneVolume,\n    });\n  }\n  onRingtoneMutedChange = (ringtoneMuted) => {\n    this.setState({\n      ringtoneMuted,\n    });\n  }\n  onCallVolumeChange = (callVolume) => {\n    this.setState({\n      callVolume,\n    });\n  }\n  onOutputDeviceIdChange = (device) => {\n    this.setState({\n      outputDeviceId: device.deviceId,\n    });\n  }\n  onInputDeviceIdChange = (device) => {\n    this.setState({\n      inputDeviceId: device.deviceId,\n    });\n  }\n  renderDeviceOption(device) {\n    return device.label;\n  }\n  renderDeviceValue(device) {\n    return device.deviceId;\n  }\n  renderOutputDevice = (value) => {\n    const device = find(\n      device => device.deviceId === value,\n      this.props.availableOutputDevices\n    );\n    return device && device.label || value;\n  }\n  renderInputDevice = (value) => {\n    const device = find(\n      device => device.deviceId === value,\n      this.props.availableInputDevices\n    );\n    return device && device.label || value;\n  }\n\n  render() {\n    const {\n      currentLocale,\n      onBackButtonClick,\n      className,\n      availableOutputDevices,\n      availableInputDevices,\n      supportDevices,\n      userMedia,\n      isWebRTC,\n      checkUserMedia,\n      outputDeviceDisabled,\n      inputDeviceDisabled,\n    } = this.props;\n    const {\n      dialButtonVolume,\n      dialButtonMuted,\n      ringtoneVolume,\n      ringtoneMuted,\n      callVolume,\n      outputDeviceId,\n      inputDeviceId,\n    } = this.state;\n    const hasChanges = (\n      this.props.dialButtonVolume !== dialButtonVolume ||\n      this.props.dialButtonMuted !== dialButtonMuted ||\n      this.props.ringtoneVolume !== ringtoneVolume ||\n      this.props.ringtoneMuted !== ringtoneMuted ||\n      this.props.callVolume !== callVolume ||\n      this.props.inputDeviceId !== inputDeviceId ||\n      this.props.outputDeviceId !== outputDeviceId\n    );\n\n    // TODO: improve UI\n    const permission = !userMedia ? (\n      <IconLine\n        noBorder\n        icon={\n          <Button onClick={checkUserMedia}>\n            {i18n.getString('checkMicPermission')}\n          </Button>\n        }>\n        {i18n.getString('micNoPermissionMessage')}\n      </IconLine>\n    ) : null;\n\n    // const webphoneVolume = isWebRTC ?\n    //   (\n    //     <div>\n    //       <InputField\n    //         label={i18n.getString('ringtoneVolume', currentLocale)}\n    //     >\n    //         {`${ringtoneVolume * 100}%`}\n    //       </InputField>\n    //       <InputField\n    //         label={i18n.getString('callVolume', currentLocale)}\n    //     >\n    //         {`${callVolume * 100}%`}\n    //       </InputField>\n    //     </div>\n    //   ) : null;\n\n    const outputDevice = supportDevices ? (\n      <InputField\n        label={i18n.getString('outputDevice', currentLocale)}\n        noBorder>\n        <Select\n          className={styles.select}\n          disabled={outputDeviceDisabled}\n          value={\n            availableOutputDevices.length ? outputDeviceId :\n              i18n.getString('noDevice', currentLocale)\n          }\n          onChange={this.onOutputDeviceIdChange}\n          options={availableOutputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderOutputDevice}\n          titleEnabled\n        />\n      </InputField>\n    ) : null;\n\n    const inputDevice = supportDevices ? (\n      <InputField\n        label={i18n.getString('inputDevice', currentLocale)}\n        noBorder>\n        <Select\n          className={styles.select}\n          disabled={inputDeviceDisabled}\n          value={\n            availableInputDevices.length ? inputDeviceId :\n              i18n.getString('noDevice', currentLocale)\n          }\n          onChange={this.onInputDeviceIdChange}\n          options={availableInputDevices}\n          dropdownAlign=\"left\"\n          renderFunction={this.renderDeviceOption}\n          valueFunction={this.renderDeviceValue}\n          renderValue={this.renderInputDevice}\n          titleEnabled\n        />\n      </InputField>\n    ) : null;\n\n    return (\n      <div className={classnames(styles.root, className)}>\n        <BackHeader onBackClick={onBackButtonClick}>\n          {i18n.getString('title', currentLocale)}\n        </BackHeader>\n        <Panel className={styles.content}>\n          {\n            // <InputField\n            //   label={i18n.getString('dialButtonVolume', currentLocale)}\n            // >\n            //   {`${dialButtonVolume * 100}%`}\n            // </InputField>\n            // webphoneVolume\n          }\n          {outputDevice}\n          {inputDevice}\n          {permission}\n          <SaveButton\n            currentLocale={currentLocale}\n            onClick={this.onSave}\n            disabled={!hasChanges}\n          />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nconst devicePropType = {\n  deviceId: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nAudioSettingsPanel.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  dialButtonVolume: PropTypes.number.isRequired,\n  ringtoneVolume: PropTypes.number.isRequired,\n  ringtoneMuted: PropTypes.bool.isRequired,\n  callVolume: PropTypes.number.isRequired,\n  dialButtonMuted: PropTypes.bool.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  availableInputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\n  inputDeviceId: PropTypes.string.isRequired,\n  availableOutputDevices: PropTypes.arrayOf(PropTypes.shape(devicePropType)).isRequired,\n  outputDeviceId: PropTypes.string.isRequired,\n  supportDevices: PropTypes.bool.isRequired,\n  onSave: PropTypes.func.isRequired,\n  userMedia: PropTypes.bool.isRequired,\n  isWebRTC: PropTypes.bool.isRequired,\n  checkUserMedia: PropTypes.func.isRequired,\n  outputDeviceDisabled: PropTypes.bool,\n  inputDeviceDisabled: PropTypes.bool,\n};\n\nAudioSettingsPanel.defaultProps = {\n  className: null,\n  outputDeviceDisabled: false,\n  inputDeviceDisabled: false,\n};\n"],"file":"index.js"}