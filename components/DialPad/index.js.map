{"version":3,"sources":["components/DialPad/index.js"],"names":["keyConfig","value","text","dx","alternativeValue","DialPad","className","hideSpecial","onButtonPress","onButtonOutput","alternativeTimeout","dialButtonVolume","dialButtonMuted","dataSign","styles","root","map","row","rowIdx","btn","btnPlaceholder","propTypes","PropTypes","string","bool","func","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport DialButton from '../DialButton';\nimport styles from './styles.scss';\n\nconst keyConfig = [\n  [{ value: '1', text: '' }, { value: '2', text: 'ABC', dx: '175' }, { value: '3', text: 'DEF', dx: '180' }],\n  [{ value: '4', text: 'GHI', dx: '175' }, { value: '5', text: 'JKL', dx: '180' }, { value: '6', text: 'MNO', dx: '155' }],\n  [{ value: '7', text: 'PQRS', dx: '140' }, { value: '8', text: 'TUV', dx: '175' }, { value: '9', text: 'WXYZ', dx: '140' }],\n  [\n    { value: '*', text: '' },\n    {\n      value: '0', text: '+', alternativeValue: '+', dx: '220'\n    },\n    { value: '#', text: '' },\n  ],\n];\n\nexport default function DialPad({\n  className,\n  hideSpecial,\n  onButtonPress,\n  onButtonOutput,\n  alternativeTimeout,\n  dialButtonVolume,\n  dialButtonMuted,\n  dataSign\n}) {\n  dataSign= typeof dataSign !=='undefined' ? dataSign: '';\n  return (\n    <div data-sign={`${dataSign}DialPad`} className={classnames(styles.root, className)}>\n      {keyConfig.map((row, rowIdx) => (\n        <div key={rowIdx} className={styles.row}>\n          {row.map((btn) => {\n            if (hideSpecial && (btn.value === '*' || btn.value === '#')) {\n              return (\n                <div key={btn.value} className={styles.btnPlaceholder} />\n              );\n            }\n            return (\n              <DialButton\n                key={btn.value}\n                btn={btn}\n                className={styles.btnPlaceholder}\n                onPress={onButtonPress}\n                onOutput={onButtonOutput}\n                alternativeTimeout={alternativeTimeout}\n                volume={dialButtonVolume}\n                muted={dialButtonMuted}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nDialPad.propTypes = {\n  className: PropTypes.string,\n  hideSpecial: PropTypes.bool,\n  onButtonPress: PropTypes.func,\n  onButtonOutput: PropTypes.func,\n  alternativeTimeout: PropTypes.number,\n  dialButtonVolume: PropTypes.number,\n  dialButtonMuted: PropTypes.bool,\n  dataSign: PropTypes.string\n};\n\nDialPad.defaultProps = {\n  className: undefined,\n  hideSpecial: false,\n  onButtonPress: undefined,\n  onButtonOutput: undefined,\n  alternativeTimeout: undefined,\n  dialButtonVolume: 1,\n  dialButtonMuted: false,\n};\n"],"file":"index.js"}