{"version":3,"sources":["lib/oAuthProxy/index.js"],"names":["loginWindow","window","location","href","query","prefix","hash","oAuthCallback","callbackUri","parent","postMessage","addEventListener","data","oAuthUri","trim","parsedUri","state","set","toString","key","e","newValue","localStorage","removeItem","proxyLoaded","error","close"],"mappings":";;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,WAAW,GAAG,IAAlB;;aAOI,0BAAMC,MAAM,CAACC,QAAP,CAAgBC,IAAtB,EAA4B,IAA5B,C;0BAJFC,K;uCACEC,M;IAAAA,M,oCAAS,I;qCACTC,I;IAAAA,I,kCAAO,6B;AAIX;;;;;;;;AAMAL,MAAM,CAACM,aAAP,GAAuB,UAACC,WAAD,EAAiB;AACtCP,EAAAA,MAAM,CAACQ,MAAP,CAAcC,WAAd,CAA0B;AACxBF,IAAAA,WAAW,EAAXA;AADwB,GAA1B,EAEG,GAFH;AAGD,CAJD;;AAMAP,MAAM,CAACU,gBAAP,CAAwB,SAAxB,EAAmC,gBAAmB;AAAA,uBAAhBC,IAAgB;AAAA,MAAhBA,IAAgB,0BAAT,EAAS;AAAA,MAElDC,QAFkD,GAGhDD,IAHgD,CAElDC,QAFkD;;AAIpD,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,OAAoB,EAApC,EAAwC;AACtC,QAAMC,SAAS,GAAG,0BAAMF,QAAN,EAAgB,IAAhB,CAAlB;AADsC,QAE9BT,KAF8B,GAEpBW,SAFoB,CAE9BX,KAF8B;AAGtCA,IAAAA,KAAK,CAACY,KAAN,aAAiBZ,KAAK,CAACY,KAAvB,cAAgCX,MAAhC,cAA0CC,IAA1C;AACAS,IAAAA,SAAS,CAACE,GAAV,CAAc,OAAd,EAAuBb,KAAvB;AACAJ,IAAAA,WAAW,GAAG,2BAAUe,SAAS,CAACG,QAAV,EAAV,YAAmCb,MAAnC,aAAmD,GAAnD,EAAwD,GAAxD,CAAd;AACD;AACF,CAXD;AAaA,IAAMc,GAAG,aAAMd,MAAN,cAAgBC,IAAhB,iBAAT;AACAL,MAAM,CAACU,gBAAP,CAAwB,SAAxB,EAAmC,UAACS,CAAD,EAAO;AACxC,MAAIA,CAAC,CAACD,GAAF,KAAUA,GAAV,IAAiBC,CAAC,CAACC,QAAnB,IAA+BD,CAAC,CAACC,QAAF,KAAe,EAAlD,EAAsD;AACpD,QAAMb,WAAW,GAAGY,CAAC,CAACC,QAAtB;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwBJ,GAAxB;AACAlB,IAAAA,MAAM,CAACQ,MAAP,CAAcC,WAAd,CAA0B;AACxBF,MAAAA,WAAW,EAAXA;AADwB,KAA1B,EAEG,GAFH;AAGD;AACF,CARD;;AAUA,IAAI;AACFP,EAAAA,MAAM,CAACQ,MAAP,CAAcC,WAAd,CAA0B;AACxBc,IAAAA,WAAW,EAAE;AADW,GAA1B,EAEG,GAFH;AAGD,CAJD,CAIE,OAAOC,KAAP,EAAc;AACd;AACD;;AAEDxB,MAAM,CAACU,gBAAP,CAAwB,cAAxB,EAAwC,YAAM;AAC5C,MAAIX,WAAJ,EAAiB;AACf,QAAI;AACFA,MAAAA,WAAW,CAAC0B,KAAZ;AACD,KAFD,CAEE,OAAOD,KAAP,EAAc;AACd;AACD;AACF;AACF,CARD","sourcesContent":["import parse from 'url-parse';\nimport simpleHash from '../simpleHash';\nimport popWindow from '../popWindow';\n\nlet loginWindow = null;\n\nconst {\n  query: {\n    prefix = 'rc',\n    hash = simpleHash(),\n  },\n} = parse(window.location.href, true);\n\n/**\n * @function\n * @global\n * @description oAuthCallback allows redirect to call via window.opener.oAuthCallback if window.opener is not blocked.\n * @param {String} callbackUri\n */\nwindow.oAuthCallback = (callbackUri) => {\n  window.parent.postMessage({\n    callbackUri,\n  }, '*');\n};\n\nwindow.addEventListener('message', ({ data = {} }) => {\n  const {\n    oAuthUri,\n  } = data;\n  if (oAuthUri && oAuthUri.trim() !== '') {\n    const parsedUri = parse(oAuthUri, true);\n    const { query } = parsedUri;\n    query.state = `${query.state}-${prefix}-${hash}`;\n    parsedUri.set('query', query);\n    loginWindow = popWindow(parsedUri.toString(), `${prefix}-oauth`, 600, 600);\n  }\n});\n\nconst key = `${prefix}-${hash}-callbackUri`;\nwindow.addEventListener('storage', (e) => {\n  if (e.key === key && e.newValue && e.newValue !== '') {\n    const callbackUri = e.newValue;\n    localStorage.removeItem(key);\n    window.parent.postMessage({\n      callbackUri,\n    }, '*');\n  }\n});\n\ntry {\n  window.parent.postMessage({\n    proxyLoaded: true,\n  }, '*');\n} catch (error) {\n  /* ignore error */\n}\n\nwindow.addEventListener('beforeunload', () => {\n  if (loginWindow) {\n    try {\n      loginWindow.close();\n    } catch (error) {\n      /* ignore error */\n    }\n  }\n});\n"],"file":"index.js"}