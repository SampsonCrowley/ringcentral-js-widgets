{"version":3,"sources":["modules/MessageSender/index.js"],"names":["MessageMaxLength","MultipartMessageMaxLength","SENDING_THRESHOLD","MessageSender","deps","alert","client","extensionInfo","extensionPhoneNumber","numberValidate","options","actionTypes","messageSenderActionTypes","_alert","_client","_extensionPhoneNumber","_extensionInfo","_reducer","_numberValidate","_eventEmitter","EventEmitter","store","subscribe","_onStateChange","_shouldInit","_initModuleStatus","_shouldReset","_resetModuleStatus","ready","dispatch","type","initSuccess","resetSuccess","message","warning","ttl","text","multipart","_alertWarning","messageSenderMessages","textEmpty","length","textTooLong","multipartTextTooLong","toNumbers","recipientsEmpty","senderNumber","validateResult","validate","isMySenderNumber","number","phoneNumber","senderNumbersList","validateError","senderNumberInvalid","errors","forEach","error","recipientNumberInvalids","result","_validateToNumbersIsEmpty","recipientNumbers","filter","item","index","arr","indexOf","validateNumbers","numberValidateResult","_alertInvalidRecipientErrors","numbers","subAddress","isCompanyExtension","e164","notAnExtension","push","fromNumber","replyOnMessageId","eventId","uuid","v4","_validateText","_validateToNumbers","validateToNumberResult","extensionNumbers","phoneNumbers","_validateSenderNumber","emit","send","responses","chunks","total","shouldSleep","chunk","_sendPager","pagerResponse","_sendSms","toNumber","smsResponse","sendOver","sendError","_onSendError","console","debug","toUsers","account","extension","sms","post","from","to","response","extensionNumber","map","params","replyOn","companyPager","errResp","apiResponse","ok","_json","errorCode","err","parameterName","startsWith","notSmsToExtension","internationalSMSNotSupported","noInternalSMSPermission","event","handler","on","state","status","sendStatus","moduleStatuses","messageSenderStatus","idle","smsSenderNumbers","RcModule","proxify"],"mappings":"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","sourcesContent":["import { find } from 'ramda';\nimport EventEmitter from 'events';\nimport uuid from 'uuid';\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport isBlank from '../../lib/isBlank';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport messageSenderActionTypes from './messageSenderActionTypes';\nimport getMessageSenderReducer from './getMessageSenderReducer';\n\nimport messageSenderStatus from './messageSenderStatus';\nimport messageSenderMessages from './messageSenderMessages';\nimport proxify from '../../lib/proxy/proxify';\nimport chunkMessage from '../../lib/chunkMessage';\nimport sleep from '../../lib/sleep';\n\nexport const MessageMaxLength = 1000;\nexport const MultipartMessageMaxLength = MessageMaxLength * 5;\n\nconst SENDING_THRESHOLD = 30;\n\n/**\n * @class\n * @description Message sender and validator module\n */\n@Module({\n  deps: ['Alert', 'Client', 'ExtensionInfo', 'ExtensionPhoneNumber', 'NumberValidate']\n})\nexport default class MessageSender extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Client} params.client - client module instance\n   * @param {ExtensionInfo} params.extensionInfo - extensionInfo module instance\n   * @param {ExtensionPhoneNumber} params.extensionPhoneNumber - extensionPhoneNumber module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   */\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    extensionPhoneNumber,\n    numberValidate,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: messageSenderActionTypes,\n    });\n\n    this._alert = alert;\n    this._client = client;\n    this._extensionPhoneNumber = extensionPhoneNumber;\n    this._extensionInfo = extensionInfo;\n    this._reducer = getMessageSenderReducer(this.actionTypes);\n    this._numberValidate = numberValidate;\n    this._eventEmitter = new EventEmitter();\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._initModuleStatus();\n    } else if (this._shouldReset()) {\n      this._resetModuleStatus();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._extensionPhoneNumber.ready &&\n      this._extensionInfo.ready &&\n      !this.ready\n    );\n  }\n\n  _initModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess,\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._extensionPhoneNumber.ready ||\n        !this._extensionInfo.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      this._alert.warning({\n        message,\n        ttl: 0,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validateText(text, multipart) {\n    if (isBlank(text)) {\n      this._alertWarning(messageSenderMessages.textEmpty);\n      return false;\n    }\n\n    if (!multipart && text.length > MessageMaxLength) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return false;\n    }\n\n    if (multipart && text.length > MultipartMessageMaxLength) {\n      this._alertWarning(messageSenderMessages.multipartTextTooLong);\n      return false;\n    }\n\n    return true;\n  }\n\n  _validateToNumbersIsEmpty(toNumbers) {\n    if (toNumbers.length === 0) {\n      this._alertWarning(messageSenderMessages.recipientsEmpty);\n      return true;\n    }\n    return false;\n  }\n\n  _validateSenderNumber(senderNumber) {\n    let validateResult = true;\n    if (isBlank(senderNumber)) {\n      validateResult = false;\n    }\n    this.store.dispatch({ type: this.actionTypes.validate });\n    if (validateResult) {\n      const isMySenderNumber = find(number => (\n        number.phoneNumber === senderNumber\n      ), this.senderNumbersList);\n      if (!isMySenderNumber) {\n        validateResult = false;\n      }\n    }\n    if (!validateResult) {\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      this._alertWarning(messageSenderMessages.senderNumberInvalid);\n    }\n    return validateResult;\n  }\n\n  _alertInvalidRecipientErrors(errors) {\n    errors.forEach((error) => {\n      const message = messageSenderMessages[error.type];\n      if (!this._alertWarning(message)) {\n        this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      }\n    });\n  }\n\n  @proxify\n  async _validateToNumbers(toNumbers) {\n    const result = {\n      result: false,\n    };\n    if (this._validateToNumbersIsEmpty(toNumbers)) {\n      return result;\n    }\n    const recipientNumbers\n      = toNumbers.filter((item, index, arr) => arr.indexOf(item) === index);\n    this.store.dispatch({ type: this.actionTypes.validate });\n    const numberValidateResult = await this._numberValidate.validateNumbers(recipientNumbers);\n    if (!numberValidateResult.result) {\n      this._alertInvalidRecipientErrors(numberValidateResult.errors);\n      this.store.dispatch({ type: this.actionTypes.validateError });\n      return result;\n    }\n    const numbers = [];\n    for (const number of numberValidateResult.numbers) {\n      if (number.subAddress && number.subAddress.length > 0) {\n        if (\n          !this._numberValidate.isCompanyExtension(number.e164, number.subAddress)\n        ) {\n          this._alertWarning(messageSenderMessages.notAnExtension);\n          this.store.dispatch({ type: this.actionTypes.validateError });\n          return result;\n        }\n        numbers.push(number.subAddress);\n      } else {\n        numbers.push(number.e164);\n      }\n    }\n    result.result = true;\n    result.numbers = numbers;\n    return result;\n  }\n\n  @proxify\n  async send({\n    fromNumber, toNumbers, text, replyOnMessageId, multipart = false\n  }) {\n    const eventId = uuid.v4();\n    if (!this._validateText(text, multipart)) {\n      return null;\n    }\n    try {\n      const validateToNumberResult = await this._validateToNumbers(toNumbers);\n      if (!validateToNumberResult.result) {\n        return null;\n      }\n      const recipientNumbers = validateToNumberResult.numbers;\n\n      const extensionNumbers = recipientNumbers.filter(number => (number.length <= 6));\n      const phoneNumbers = recipientNumbers.filter(number => (number.length > 6));\n\n      // not validate sender number if recipient is only extension number\n      if (phoneNumbers.length > 0) {\n        if (!this._validateSenderNumber(fromNumber)) {\n          return null;\n        }\n      }\n      this._eventEmitter.emit(this.actionTypes.send, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.send,\n      });\n\n      const responses = [];\n      const chunks = multipart ? chunkMessage(text, MessageMaxLength) : [text];\n      const total = (phoneNumbers.length + 1) * chunks.length;\n      const shouldSleep = total > SENDING_THRESHOLD;\n      if (extensionNumbers.length > 0) {\n        for (const chunk of chunks) {\n          if (shouldSleep) await sleep(2000);\n          const pagerResponse = await this._sendPager({\n            toNumbers: extensionNumbers,\n            text: chunk,\n            replyOnMessageId,\n          });\n          responses.push(pagerResponse);\n        }\n      }\n\n      if (phoneNumbers.length > 0) {\n        for (const phoneNumber of phoneNumbers) {\n          for (const chunk of chunks) {\n            if (shouldSleep) await sleep(2000);\n            const smsResponse = await this._sendSms({\n              fromNumber,\n              toNumber: phoneNumber,\n              text: chunk,\n            });\n            responses.push(smsResponse);\n          }\n        }\n      }\n\n      this.store.dispatch({\n        type: this.actionTypes.sendOver,\n        toNumbers,\n      });\n\n      return responses;\n    } catch (error) {\n      this._eventEmitter.emit(this.actionTypes.sendError, {\n        eventId,\n        fromNumber,\n        toNumbers,\n        text,\n        replyOnMessageId,\n        multipart,\n      });\n      this.store.dispatch({\n        type: this.actionTypes.sendError,\n        error: 'error'\n      });\n      this._onSendError(error);\n      console.debug('sendComposeText e ', error);\n      throw error;\n    }\n  }\n\n  @proxify\n  async _sendSms({ fromNumber, toNumber, text }) {\n    const toUsers = [{ phoneNumber: toNumber }];\n    const response = await this._client.account().extension().sms().post({\n      from: { phoneNumber: fromNumber },\n      to: toUsers,\n      text,\n    });\n    return response;\n  }\n\n  @proxify\n  async _sendPager({ toNumbers, text, replyOnMessageId }) {\n    const from = { extensionNumber: this._extensionInfo.extensionNumber };\n    const toUsers = toNumbers.map(number => ({ extensionNumber: number }));\n    const params = { from, to: toUsers, text };\n    if (replyOnMessageId) {\n      params.replyOn = replyOnMessageId;\n    }\n    const response = await this._client.account().extension().companyPager().post(params);\n    return response;\n  }\n\n  _onSendError(error) {\n    const errResp = error.apiResponse;\n    if (\n      errResp && errResp.response &&\n      !errResp.response.ok &&\n      errResp._json &&\n      (errResp._json.errorCode === 'InvalidParameter' ||\n      errResp._json.errorCode === 'InternationalProhibited' ||\n      errResp._json.errorCode === 'CMN-408')\n    ) {\n      errResp._json.errors.map((err) => {\n        if (\n          (\n            err.errorCode === 'CMN-101' ||\n            err.errorCode === 'CMN-102' ||\n            err.errorCode === 'CMN-414'\n          ) &&\n          err.parameterName.startsWith('to')\n        ) {\n          // 101 : \"Parameter [to.extensionNumber] value is invalid\"\n          // 101 : \"Parameter [to.phoneNumber] value is invalid\"\n          // 102 : \"Resource for parameter [to] is not found\"\n          this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n          return null;\n        }\n        if (err.errorCode === 'MSG-246') {\n          // MSG-246 : \"Sending SMS from/to extension numbers is not available\"\n          this._alertWarning(messageSenderMessages.notSmsToExtension);\n        }\n        if (err.errorCode === 'MSG-240') {\n          // MSG-240 : \"International SMS is not supported\"\n          this._alertWarning(messageSenderMessages.internationalSMSNotSupported);\n        }\n        if (err.errorCode === 'CMN-408') {\n          // MSG-240 : \"In order to call this API endpoint, user needs to have [InternalSMS] permission for requested resource.\"\n          this._alertWarning(messageSenderMessages.noInternalSMSPermission);\n        }\n        return null;\n      });\n      return;\n    }\n    this._alertWarning(messageSenderMessages.sendError);\n  }\n\n  on(event, handler) {\n    this._eventEmitter.on(event, handler);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get sendStatus() {\n    return this.state.sendStatus;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get idle() {\n    return this.sendStatus === messageSenderStatus.idle;\n  }\n\n  get senderNumbersList() {\n    return this._extensionPhoneNumber.smsSenderNumbers;\n  }\n}\n"],"file":"index.js"}