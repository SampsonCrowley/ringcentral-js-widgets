{"version":3,"sources":["modules/Webphone/webphoneHelper.js"],"names":["isBrowserSupport","normalizeSession","isRing","isOnHold","sortByCreationTimeDesc","sortByLastHoldingTimeDesc","isConferenceSession","isRecording","isChrome","navigator","userAgent","match","chromeVersion","parseInt","session","id","direction","callStatus","to","request","uri","user","toUserName","displayName","from","fromNumber","fromUserName","startTime","Date","getTime","creationTime","local","isOnMute","isOnFlip","isOnTransfer","isToVoicemail","isForwarded","isReplied","recordStatus","idle","contactMatch","minimized","data","lastHoldingTime","cached","removed","callDirections","inbound","sessionStatus","connecting","onHold","l","r","indexOf"],"mappings":"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","file":"webphoneHelper.js","sourcesContent":["import recordStatus from './recordStatus';\nimport sessionStatus from './sessionStatus';\nimport callDirections from '../../enums/callDirections';\n\nexport function isBrowserSupport() {\n  const isChrome = !!(navigator.userAgent.match(/Chrom(e|ium)/));\n  if (!isChrome) {\n    return false;\n  }\n  const chromeVersion =\n    parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n  if (chromeVersion >= 51) {\n    return true;\n  }\n  return false;\n}\n\nexport function normalizeSession(session) {\n  return {\n    id: session.id,\n    direction: session.direction,\n    callStatus: session.callStatus,\n    to: session.request.to.uri.user,\n    toUserName: session.request.to.displayName,\n    from: session.request.from.uri.user,\n    fromNumber: session.fromNumber,\n    fromUserName: session.request.from.displayName,\n    startTime: session.startTime && (new Date(session.startTime)).getTime(),\n    creationTime: session.creationTime,\n    isOnHold: !!session.isOnHold().local,\n    isOnMute: !!session.isOnMute,\n    isOnFlip: !!session.isOnFlip,\n    isOnTransfer: !!session.isOnTransfer,\n    isToVoicemail: !!session.isToVoicemail,\n    isForwarded: !!session.isForwarded,\n    isReplied: !!session.isForwarded,\n    recordStatus: session.recordStatus || recordStatus.idle,\n    contactMatch: session.contactMatch,\n    minimized: !!session.minimized,\n    data: session.data || null,\n    lastHoldingTime: session.lastHoldingTime || 0,\n    cached: false,\n    removed: false,\n  };\n}\n\nexport function isRing(session) {\n  return !!(\n    session &&\n    session.direction === callDirections.inbound &&\n    session.callStatus === sessionStatus.connecting\n  );\n}\n\nexport function isOnHold(session) {\n  return !!(session && session.callStatus === sessionStatus.onHold);\n}\n\nexport function sortByCreationTimeDesc(l, r) {\n  return r.startTime - l.startTime;\n}\n\nexport function sortByLastHoldingTimeDesc(l, r) {\n  if (!l || !r) {\n    return 0;\n  }\n  if (r.lastHoldingTime !== l.lastHoldingTime) {\n    return r.lastHoldingTime - l.lastHoldingTime;\n  }\n  return sortByCreationTimeDesc(l, r);\n}\n\n/**\n * HACK: this function is not very reliable, only use it before the merging complete.\n */\nexport function isConferenceSession(session) {\n  return session && session.to &&\n    session.to.indexOf('conf_') === 0;\n}\n\nexport function isRecording(session) {\n  return !!(\n    session && session.recordStatus !== recordStatus.idle\n  );\n}\n"]}