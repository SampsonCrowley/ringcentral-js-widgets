{"version":3,"sources":["components/ExtensionCalendarInjection/Input/index.js"],"names":["Input","theme","dataSign","onChange","value","disabled","errorMessage","isError","className","placeholder","styles","isOld","isOldUI","error","textField","UI","message","propTypes","PropTypes","bool","object","isRequired","func","string","defaultProps"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,SAASA,KAAT,OAEG;AAAA;;AAAA,MADDC,KACC,QADDA,KACC;AAAA,MADMC,QACN,QADMA,QACN;AAAA,MADgBC,QAChB,QADgBA,QAChB;AAAA,MAD0BC,KAC1B,QAD0BA,KAC1B;AAAA,MADiCC,QACjC,QADiCA,QACjC;AAAA,MAD2CC,YAC3C,QAD2CA,YAC3C;AAAA,MADyDC,OACzD,QADyDA,OACzD;AAAA,MADkEC,SAClE,QADkEA,SAClE;AAAA,MAD6EC,WAC7E,QAD6EA,WAC7E;;AACD,MAAIJ,QAAJ,EAAc;AACZ,WACE;AACE,MAAA,SAAS,EAAE,6BAAWK,mBAAOL,QAAlB,EAA4BG,SAA5B,sBACRE,mBAAOC,KADC,EACOV,KAAK,CAACW,OADb;AADb,OAKGR,KAAK,IAAIK,WALZ,CADF;AASD;;AAED,SACE;AACE,IAAA,SAAS,EAAE,6BAAWD,SAAX,oDACRE,mBAAOG,KADC,EACON,OADP,iCAERG,mBAAOC,KAFC,EAEOV,KAAK,CAACW,OAFb;AADb,KAME;AACE,IAAA,WAAW,EAAEH,WADf;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAE,6BAAWC,mBAAOI,SAAlB,EAA6Bb,KAAK,CAACc,EAAN,IAAYL,mBAAOT,KAAK,CAACc,EAAb,CAAzC,CAHb;AAIE,IAAA,KAAK,EAAEX,KAJT;AAKE,IAAA,QAAQ,EAAED,QALZ;AAME,iBAAWD;AANb,IANF,EAcGK,OAAO,IAAI;AAAK,IAAA,SAAS,EAAEG,mBAAOM;AAAvB,KAAiCV,YAAjC,CAdd,CADF;AAkBD;;AAEDN,KAAK,CAACiB,SAAN,GAAkB;AAChBV,EAAAA,OAAO,EAAEW,sBAAUC,IADH;AAEhBd,EAAAA,QAAQ,EAAEa,sBAAUC,IAFJ;AAGhBlB,EAAAA,KAAK,EAAEiB,sBAAUE,MAAV,CAAiBC,UAHR;AAIhBlB,EAAAA,QAAQ,EAAEe,sBAAUI,IAJJ;AAKhBhB,EAAAA,YAAY,EAAEY,sBAAUK,MALR;AAMhBf,EAAAA,SAAS,EAAEU,sBAAUK,MANL;AAOhBrB,EAAAA,QAAQ,EAAEgB,sBAAUK,MAPJ;AAQhBnB,EAAAA,KAAK,EAAEc,sBAAUK,MARD;AAShBd,EAAAA,WAAW,EAAES,sBAAUK;AATP,CAAlB;AAYAvB,KAAK,CAACwB,YAAN,GAAqB;AACnBjB,EAAAA,OAAO,EAAE,KADU;AAEnBF,EAAAA,QAAQ,EAAE,KAFS;AAGnBF,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,KAAK,EAAE,IAJY;AAKnBF,EAAAA,QAAQ,EAAE,EALS;AAMnBM,EAAAA,SAAS,EAAE,EANQ;AAOnBF,EAAAA,YAAY,EAAE,EAPK;AAQnBG,EAAAA,WAAW,EAAE;AARM,CAArB;;eAWe,iCAAcT,KAAd,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport { ThemeConsumer } from '../commons/themeContext';\n\nfunction Input({\n  theme, dataSign, onChange, value, disabled, errorMessage, isError, className, placeholder\n}) {\n  if (disabled) {\n    return (\n      <div\n        className={classnames(styles.disabled, className, {\n          [styles.isOld]: theme.isOldUI,\n        })}\n      >\n        {value || placeholder}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames(className, {\n        [styles.error]: isError,\n        [styles.isOld]: theme.isOldUI,\n      })}\n    >\n      <input\n        placeholder={placeholder}\n        type=\"text\"\n        className={classnames(styles.textField, theme.UI && styles[theme.UI])}\n        value={value}\n        onChange={onChange}\n        data-sign={dataSign}\n      />\n      {isError && <div className={styles.message}>{errorMessage}</div>}\n    </div>\n  );\n}\n\nInput.propTypes = {\n  isError: PropTypes.bool,\n  disabled: PropTypes.bool,\n  theme: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  errorMessage: PropTypes.string,\n  className: PropTypes.string,\n  dataSign: PropTypes.string,\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nInput.defaultProps = {\n  isError: false,\n  disabled: false,\n  onChange: null,\n  value: null,\n  dataSign: '',\n  className: '',\n  errorMessage: '',\n  placeholder: '',\n};\n\nexport default ThemeConsumer(Input);\n"],"file":"index.js"}