{"version":3,"sources":["components/ContactDetails/index.js"],"names":["getPresenceStatusName","presence","currentLocale","presenceStatus","dndStatus","DndStatus","doNotAcceptAnyCalls","i18n","getString","AvatarNode","name","avatarUrl","isInactive","avatarStyle","styles","inactiveAvatarNode","avatarNode","propTypes","PropTypes","string","bool","defaultProps","undefined","ContactDetails","onClickToDial","contact","phoneNumber","props","disableCallButton","onClickToSMS","onClickMailTo","email","contactType","renderPresence","contactStatus","presenceName","inactiveText","presenceNodeContainer","presenceNode","contactItem","sourceNodeRenderer","profileImageUrl","type","sourceNode","sourceType","contactProfile","avatar","avatarNodeContainer","sourceNodeContainer","info","nameWithoutPresence","color","fontSize","label","listComp","item","showCallBtn","showTextBtn","key","number","needFormat","displayedPhoneNumber","formatNumber","menu","disabled","dynamicsFont","call","composeText","phoneNumbers","phoneMaps","schema","length","contacts","phoneTypes","extension","getListContainerBuilder","phoneNumberElm","getListItem","internalSmsPermission","fax","outboundSmsPermission","emails","hasMailToHandler","emailListView","map","index","underline","root","profile","renderProfile","getPhoneSections","renderEmailCell","PureComponent","contactItemPropTypes","id","oneOfType","isRequired","firstName","lastName","arrayOf","shape","phoneType","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport DndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\nimport { map } from 'ramda';\n\nimport PresenceStatusIcon from '../PresenceStatusIcon';\nimport PlaceholderImage from '../PlaceholderImage';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport DefaultAvatar from '../../assets/images/DefaultAvatar.svg';\nimport phoneTypes from '../../enums/phoneTypes';\nimport i18n from './i18n';\n\nimport styles from './styles.scss';\n\nexport function getPresenceStatusName(presence, currentLocale) {\n  const { presenceStatus, dndStatus } = presence;\n  if (dndStatus === DndStatus.doNotAcceptAnyCalls) {\n    return i18n.getString(dndStatus, currentLocale);\n  }\n  return i18n.getString(presenceStatus, currentLocale);\n}\n\nfunction AvatarNode({ name, avatarUrl, isInactive }) {\n  const avatarStyle = isInactive ? styles.inactiveAvatarNode : styles.avatarNode;\n  return (\n    <PlaceholderImage\n      className={avatarStyle}\n      alt={name}\n      src={avatarUrl}\n      placeholder={<DefaultAvatar className={avatarStyle} />}\n    />\n  );\n}\nAvatarNode.propTypes = {\n  name: PropTypes.string,\n  avatarUrl: PropTypes.string,\n  isInactive: PropTypes.bool,\n};\nAvatarNode.defaultProps = {\n  name: undefined,\n  avatarUrl: undefined,\n  isInactive: false,\n};\n\nexport default class ContactDetails extends PureComponent {\n  onClickToDial = (contact, phoneNumber) => {\n    if (this.props.disableCallButton) return;\n\n    this.props.onClickToDial({\n      ...contact,\n      phoneNumber\n    });\n  };\n\n  onClickToSMS = (contact, phoneNumber) => {\n    this.props.onClickToSMS({\n      ...contact,\n      phoneNumber\n    });\n  };\n\n  onClickMailTo = (email, contactType) => {\n    if (typeof this.props.onClickMailTo === 'function') {\n      this.props.onClickMailTo(email, contactType);\n    }\n  };\n\n  renderPresence = (contactStatus, presence, presenceName, currentLocale) => {\n    if (contactStatus === 'NotActivated') {\n      return (\n        <div className={styles.presence}>\n          <div>\n            <span className={styles.inactiveText}>\n              {i18n.getString('notActivated', currentLocale)}\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    return presence ? (\n      <div className={styles.presence}>\n        <div className={styles.presenceNodeContainer}>\n          <PresenceStatusIcon className={styles.presenceNode} {...presence} />\n        </div>\n        <span className={styles.presenceStatus}>{presenceName}</span>\n      </div>\n    ) : null;\n  };\n\n  renderProfile() {\n    const { contactItem, sourceNodeRenderer, currentLocale } = this.props;\n    const {\n      name,\n      presence,\n      profileImageUrl,\n      type,\n      contactStatus\n    } = contactItem;\n    const sourceNode = sourceNodeRenderer({ sourceType: type });\n    const presenceName = presence ?\n      getPresenceStatusName(presence, currentLocale) :\n      null;\n    return (\n      <div className={styles.contactProfile}>\n        <div className={styles.avatar}>\n          <div className={styles.avatarNodeContainer}>\n            <AvatarNode name={name} avatarUrl={profileImageUrl} isInactive={contactStatus === 'NotActivated'} />\n            {sourceNode ? (\n              <div className={styles.sourceNodeContainer}>{sourceNode}</div>\n            ) : null}\n          </div>\n        </div>\n        <div className={styles.info}>\n          <div\n            className={classnames(\n              styles.name,\n              !presence ? styles.nameWithoutPresence : null\n            )}\n          >\n            <span style={contactStatus === 'NotActivated' ? { color: '#999999', fontSize: '12px' } : null} title={name}>{name}</span>\n          </div>\n          {this.renderPresence(\n            contactStatus,\n            presence,\n            presenceName,\n            currentLocale\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  getListContainerBuilder(label, listComp) {\n    return (\n      <div className={styles.item} key={label}>\n        <div className={styles.label}>\n          <span>{label}</span>\n        </div>\n        <ul>\n          { listComp }\n        </ul>\n      </div>\n    );\n  }\n\n  getListItem({\n    showCallBtn,\n    showTextBtn,\n    disableCallButton,\n    key,\n    number,\n    currentLocale,\n    contactItem,\n    needFormat = true,\n  }) {\n    let displayedPhoneNumber;\n    if (needFormat) {\n      const { phoneNumber } = this.props.formatNumber(number);\n      displayedPhoneNumber = phoneNumber;\n    } else {\n      displayedPhoneNumber = number;\n    }\n\n    return (\n      <li key={key}>\n        <div className={styles.number}>\n          <span title={displayedPhoneNumber}>{displayedPhoneNumber}</span>\n        </div>\n        <div className={styles.menu}>\n          {showCallBtn ?\n            (\n              <button\n                className={classnames(\n                  disableCallButton && styles.disabled\n                )}\n                title={i18n.getString('call', currentLocale)}\n                onClick={() => this.onClickToDial(contactItem, number)}\n              >\n                <i className={dynamicsFont.call} />\n              </button>\n            ) :\n            null\n          }\n          {showTextBtn ?\n            (\n              <button\n                title={i18n.getString('text', currentLocale)}\n                onClick={() => this.onClickToSMS(contactItem, number)}\n            >\n                <i className={dynamicsFont.composeText} />\n              </button>\n            ) :\n            null\n          }\n        </div>\n      </li>\n    );\n  }\n\n  getPhoneSections() {\n    const { contactItem, currentLocale, disableCallButton } = this.props;\n    const { phoneNumbers, phoneMaps, schema } = contactItem;\n    if (!phoneNumbers.length) {\n      return null;\n    }\n\n    return (\n      <div className={styles.contacts}>\n        {\n          map(\n            (key) => {\n              switch (key) {\n                case phoneTypes.extension: {\n                  return this.getListContainerBuilder(\n                    i18n.getString(phoneTypes.extension, currentLocale),\n                    map(\n                      phoneNumberElm => this.getListItem({\n                        showCallBtn: this.props.internalSmsPermission,\n                        showTextBtn: this.props.onClickToDial,\n                        disableCallButton,\n                        key: phoneNumberElm.phoneNumber,\n                        number: phoneNumberElm.phoneNumber,\n                        currentLocale,\n                        contactItem,\n\n                      }),\n                      phoneMaps[key]\n                    )\n                  );\n                }\n                case phoneTypes.fax: {\n                  return this.getListContainerBuilder(\n                    i18n.getString(phoneTypes.fax, currentLocale),\n                    map(\n                      phoneNumberElm => this.getListItem({\n                        showCallBtn: false,\n                        showTextBtn: false,\n                        key: phoneNumberElm.phoneNumber,\n                        number: phoneNumberElm.phoneNumber,\n                        currentLocale,\n                        contactItem,\n                      }),\n                      phoneMaps[key]\n                    )\n                  );\n                }\n                default: {\n                  return this.getListContainerBuilder(\n                    i18n.getString(phoneTypes[key], currentLocale),\n                    map(\n                      phoneNumberElm => this.getListItem({\n                        showCallBtn: this.props.onClickToDial,\n                        showTextBtn: this.props.outboundSmsPermission,\n                        disableCallButton,\n                        key: phoneNumberElm.phoneNumber,\n                        number: phoneNumberElm.phoneNumber,\n                        currentLocale,\n                        contactItem,\n                      }),\n                      phoneMaps[key]\n                    )\n                  );\n                }\n              }\n            },\n            schema,\n          )\n        }\n      </div>\n    );\n  }\n\n  renderEmailCell() {\n    const { onClickMailTo } = this.props;\n    const { emails, type } = this.props.contactItem;\n    if (!emails || emails.length <= 0) return null;\n    const hasMailToHandler = typeof onClickMailTo === 'function';\n    const emailListView = emails.map((email, index) => (\n      <li key={index}>\n        <a\n          title={email}\n          className={hasMailToHandler ? styles.underline : null}\n          onClick={() => this.onClickMailTo(email, type)}\n        >\n          {email}\n        </a>\n      </li>\n    ));\n    return (\n      <div>\n        <div className={styles.label}>\n          <span>{i18n.getString('emailLabel', this.props.currentLocale)}</span>\n        </div>\n        <ul>{emailListView}</ul>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={styles.root}>\n        <div className={styles.profile}>{this.renderProfile()}</div>\n        { this.getPhoneSections() }\n        <div className={styles.email}>{this.renderEmailCell()}</div>\n      </div>\n    );\n  }\n}\n\nexport const contactItemPropTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  firstName: PropTypes.string,\n  lastName: PropTypes.string,\n  email: PropTypes.string,\n  profileImageUrl: PropTypes.string,\n  phoneNumbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      phoneType: PropTypes.string\n    })\n  ),\n  contactStatus: PropTypes.string\n};\n\nContactDetails.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  contactItem: PropTypes.shape(contactItemPropTypes).isRequired,\n  sourceNodeRenderer: PropTypes.func,\n  onClickToSMS: PropTypes.func,\n  onClickToDial: PropTypes.func,\n  onClickMailTo: PropTypes.func,\n  formatNumber: PropTypes.func.isRequired,\n  outboundSmsPermission: PropTypes.bool,\n  internalSmsPermission: PropTypes.bool,\n  disableCallButton: PropTypes.bool,\n};\n\nContactDetails.defaultProps = {\n  onClickToSMS: undefined,\n  onClickToDial: undefined,\n  onClickMailTo: undefined,\n  sourceNodeRenderer: () => null,\n  outboundSmsPermission: false,\n  internalSmsPermission: false,\n  disableCallButton: false,\n};\n"],"file":"index.js"}