{"version":3,"sources":["components/CheckBox/index.js"],"names":["CheckBox","data","selected","onSelect","valueField","textField","className","dataSign","type","checked","onChecked","children","props","isListObject","map","item","key","isSelected","checkStyle","styles","selectedCheckButton","onClick","extraInfo","renderExtraInfo","undefined","disabled","checkButton","text","checkboxClassName","checkbox","checkboxWrapperClassNames","checkboxWrapper","propTypes","PropTypes","string","any","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction CheckBox(\n  {\n    data,\n    selected,\n    onSelect,\n    valueField,\n    textField,\n    className,\n    dataSign,\n    type,\n    checked,\n    onChecked,\n    children,\n    ...props\n  }\n) {\n  const isListObject = !!(textField && valueField);\n  switch (type) {\n    case 'radio': {\n      return (\n        <div className={className} data-sign={dataSign}>\n          {\n            data.map((item, key) => {\n              const isSelected = selected === (isListObject ? item[valueField] : item);\n              const checkStyle = isSelected ? styles.selectedCheckButton : null;\n              const onClick = () => onSelect(item);\n              const extraInfo = typeof item.renderExtraInfo === 'function' && isSelected ?\n                item.renderExtraInfo({ ...props }) :\n                null;\n              return (\n                <div key={key} data-sign={isSelected ? 'selectedItem' : undefined}>\n                  <div\n                    onClick={onClick}\n                    className={classnames(styles.item, item && item.disabled ? styles.disabled : null)}>\n                    <div className={classnames(styles.checkButton, checkStyle)} />\n                    <div className={styles.text} data-sign=\"text\">\n                      { isListObject ? item[textField] : item }\n                    </div>\n                  </div>\n                  {extraInfo}\n                </div>\n              );\n            })\n          }\n        </div>\n      );\n    }\n    case 'checkbox': {\n      const checkboxClassName = classnames(styles.checkbox, checked ? styles.checked : '');\n      const checkboxWrapperClassNames = classnames(styles.checkboxWrapper, className);\n      return (\n        <div\n          className={checkboxWrapperClassNames}\n          data-sign={dataSign}\n          onClick={() => onChecked && onChecked(!checked)}\n        >\n          <div className={checkboxClassName}>\n            âœ“\n          </div>\n          {children}\n        </div>\n      );\n    }\n    default:\n      break;\n  }\n}\n\nCheckBox.propTypes = {\n  valueField: PropTypes.string,\n  textField: PropTypes.string,\n  selected: PropTypes.any,\n  data: PropTypes.array,\n  onSelect: PropTypes.func,\n  className: PropTypes.string,\n  dataSign: PropTypes.string,\n  type: PropTypes.string,\n  onChecked: PropTypes.func,\n};\n\nCheckBox.defaultProps = {\n  textField: null,\n  valueField: null,\n  className: null,\n  dataSign: undefined,\n  type: 'radio',\n  onChecked() {},\n  onSelect() {},\n  data: [],\n  selected: null\n};\n\nexport default CheckBox;\n"],"file":"index.js"}