{"version":3,"sources":["containers/TransferPage/index.js"],"names":["mapToProps","_","phone","locale","activeCallControl","webphone","contactSearch","params","sessionId","type","session","activeSession","sessions","find","id","currentLocale","searchContactList","sortedResult","mapToFunctions","regionSettings","routerInteraction","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","phoneTypeRenderer","setActiveSessionId","onTransfer","transferNumber","transfer","onBack","goBack","onCallEnd","replace","formatPhone","phoneNumber","areaCode","countryCode","searchContact","searchString","debouncedSearch","TransferPage","TransferPanel","default"],"mappings":"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","file":"index.js","sourcesContent":["\nimport { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport TransferPanel from '../../components/TransferPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    activeCallControl,\n    webphone,\n    contactSearch,\n  },\n  params: { sessionId, type = 'active' }\n}) {\n  let session = null;\n  if (type === 'active' && activeCallControl) {\n    session = activeCallControl.activeSession;\n  } else if (type === 'webphone' && webphone) {\n    session = webphone.sessions.find(session => session.id === sessionId);\n  }\n\n  return {\n    sessionId,\n    currentLocale: locale.currentLocale,\n    searchContactList: contactSearch && contactSearch.sortedResult,\n    session,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    regionSettings,\n    routerInteraction,\n    activeCallControl,\n    webphone,\n    contactSearch,\n  },\n  params: { type = 'active' },\n  phoneSourceNameRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n  phoneTypeRenderer,\n}) {\n  return {\n    setActiveSessionId(sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.setActiveSessionId(sessionId);\n      }\n    },\n    onTransfer(transferNumber, sessionId) {\n      if (type === 'active' && activeCallControl) {\n        activeCallControl.transfer(transferNumber, sessionId);\n      } else if (type === 'webphone' && webphone) {\n        webphone.transfer(transferNumber, sessionId);\n      }\n    },\n    onBack() {\n      routerInteraction.goBack();\n    },\n    onCallEnd() {\n      if (type === 'active') {\n        routerInteraction.replace('/calls');\n      } else {\n        routerInteraction.replace('/dialer');\n      }\n    },\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n    searchContact(searchString) {\n      if (contactSearch) {\n        contactSearch.debouncedSearch({ searchString });\n      }\n    },\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst TransferPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(TransferPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  TransferPage as default,\n};\n"]}