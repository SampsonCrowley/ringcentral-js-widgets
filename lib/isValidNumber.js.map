{"version":3,"sources":["lib/isValidNumber.js"],"names":["isValidNumber","input","regionSettings","countryCode","areaCode","hasInvalidChars","isValid"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEe,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,cAA9B,EAA8C;AAC3D,MAAI,yBAAQD,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;;AAH0D,eAItB,wBAAM;AACzCA,IAAAA,KAAK,EAALA,KADyC;AAEzCE,IAAAA,WAAW,EAAED,cAAc,CAACC,WAFa;AAGzCC,IAAAA,QAAQ,EAAEF,cAAc,CAACE;AAHgB,GAAN,CAJsB;AAAA,MAInDC,eAJmD,UAInDA,eAJmD;AAAA,MAIlCC,OAJkC,UAIlCA,OAJkC;;AAS3D,MAAID,eAAe,IAAI,CAACC,OAAxB,EAAiC;AAC/B,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD","sourcesContent":["import { parse } from '@ringcentral-integration/phone-number';\nimport isBlank from './isBlank';\n\nexport default function isValidNumber(input, regionSettings) {\n  if (isBlank(input)) {\n    return false;\n  }\n  const { hasInvalidChars, isValid } = parse({\n    input,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n  });\n  if (hasInvalidChars || !isValid) {\n    return false;\n  }\n  return true;\n}\n"],"file":"isValidNumber.js"}