{"version":3,"sources":["lib/AdapterModuleCore/index.js"],"names":["ALL_CALL_PATH","ACTIVE_CALL_PATH","AdapterModuleCore","deps","dep","optional","prefix","storageKey","actionTypes","baseActionTypes","callingSettings","globalStorage","locale","presence","routerInteraction","webphone","callMonitor","userGuide","quickAccess","messageTransport","IframeMessageTransport","targetWindow","window","parent","options","_callingSettings","_webphone","_callMonitor","_userGuide","_quickAccess","addSelector","_locale","ready","currentLocale","activeRingCalls","length","activeOnHoldCalls","localeReady","ringingCallsLength","onHoldCallsLength","ringCallsInfo","headerI18n","getString","numberOf","onHoldCallsInfo","availableBtn","presenceItemI18n","presenceStatus","available","busyBtn","busy","offlineBtn","offline","doNotAcceptAnyCallsBtn","dndStatus","doNotAcceptAnyCalls","currentCallBtn","viewCallsBtn","_pushRingState","forcePush","_postMessage","type","_messageTypes","pushLocale","strings","_localeStrings","callingMode","callingModes","Error","ringSession","ringSessionId","_ringSessionId","pushRingState","ringing","ringingSessions","sessions","filter","session","callStatus","direction","currentStartTime","activeCurrentCalls","startTime","_lastRingCallsLength","_lastOnHoldCallsLength","_lastCurrentStartTime","pushCalls","_showIncomingCallPage","minimized","_lastPath","_router","currentPath","_lastShowIncomingCallPage","onCurrentCallPath","activeSessionId","pushOnCurrentCallPath","onAllCallsPath","pushOnAllCallsPath","status","_presence","telephonyStatus","_telephonyStatus","push","started","dismiss","entered","exit","toggleMinimized","id","AdapterModuleCoreBase","proxify"],"mappings":"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","sourcesContent":["import formatMessage from 'format-message';\nimport { Module } from 'ringcentral-integration/lib/di';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport presenceStatus from 'ringcentral-integration/modules/Presence/presenceStatus';\nimport dndStatus from 'ringcentral-integration/modules/Presence/dndStatus';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\n\nimport IframeMessageTransport from '../IframeMessageTransport';\nimport headerI18n from '../../components/CallMonitorBar/i18n';\nimport presenceItemI18n from '../../components/PresenceItem/i18n';\nimport AdapterModuleCoreBase from '../AdapterModuleCoreBase';\nimport baseActionTypes from '../AdapterModuleCoreBase/baseActionTypes';\n\nconst ALL_CALL_PATH = '/calls';\nconst ACTIVE_CALL_PATH = '/calls/active';\n\n@Module({\n  deps: [\n    'CallingSettings',\n    'GlobalStorage',\n    'Locale',\n    'Presence',\n    'RouterInteraction',\n    'Storage',\n    'Webphone',\n    'CallMonitor',\n    { dep: 'UserGuide', optional: true },\n    { dep: 'QuickAccess', optional: true }\n  ]\n})\nexport default class AdapterModuleCore extends AdapterModuleCoreBase {\n  constructor({\n    prefix,\n    storageKey = 'adapterCore',\n    actionTypes = baseActionTypes,\n    callingSettings,\n    globalStorage,\n    locale,\n    presence,\n    routerInteraction,\n    webphone,\n    callMonitor,\n    userGuide,\n    quickAccess,\n    messageTransport = new IframeMessageTransport({\n      targetWindow: window.parent,\n    }),\n    ...options\n  }) {\n    super({\n      prefix,\n      actionTypes,\n      locale,\n      messageTransport,\n      presence,\n      routerInteraction,\n      globalStorage,\n      storageKey,\n      ...options,\n    });\n\n    this._callingSettings = callingSettings;\n    this._webphone = webphone;\n    this._callMonitor = callMonitor;\n    this._userGuide = userGuide;\n    this._quickAccess = quickAccess;\n\n    this.addSelector(\n      'localeStrings',\n      () => this._locale.ready,\n      () => this._locale.currentLocale,\n      () => this._callMonitor.activeRingCalls.length,\n      () => this._callMonitor.activeOnHoldCalls.length,\n      (localeReady, currentLocale, ringingCallsLength, onHoldCallsLength) => {\n        const ringCallsInfo = ringingCallsLength === 1 ?\n          formatMessage(headerI18n.getString('incomingCall', currentLocale), { numberOf: ringingCallsLength }) :\n          formatMessage(headerI18n.getString('incomingCalls', currentLocale), { numberOf: ringingCallsLength });\n        const onHoldCallsInfo = onHoldCallsLength === 1 ?\n          formatMessage(headerI18n.getString('callOnHold', currentLocale), { numberOf: onHoldCallsLength }) :\n          formatMessage(headerI18n.getString('callsOnHold', currentLocale), { numberOf: onHoldCallsLength });\n        const availableBtn = presenceItemI18n.getString(presenceStatus.available, currentLocale);\n        const busyBtn = presenceItemI18n.getString(presenceStatus.busy, currentLocale);\n        const offlineBtn = presenceItemI18n.getString(presenceStatus.offline, currentLocale);\n        const doNotAcceptAnyCallsBtn = presenceItemI18n.getString(dndStatus.doNotAcceptAnyCalls, currentLocale);\n        return {\n          currentCallBtn: headerI18n.getString('currentCall', currentLocale),\n          viewCallsBtn: headerI18n.getString('viewCalls', currentLocale),\n          ringCallsInfo,\n          onHoldCallsInfo,\n          availableBtn,\n          busyBtn,\n          offlineBtn,\n          doNotAcceptAnyCallsBtn\n        };\n      }\n    );\n  }\n\n  _pushOtherStateChanges() {\n    this._pushRingState();\n  }\n\n  _pushRingState({ forcePush = false } = {}) {\n    if (!this.ready) return;\n\n    // TODO: we should refactor the entire sync logic to be more\n    // declarative and straightforward\n    if (forcePush) {\n      this._postMessage({\n        type: this._messageTypes.pushLocale,\n        strings: this._localeStrings\n      });\n    }\n\n\n    if (!this._callingSettings) return;\n\n    const { callingMode } = this._callingSettings;\n    if (callingMode === callingModes.webphone) {\n      const webphone = this._webphone;\n      if (!webphone) {\n        throw new Error('webphone is a required dependency for monitoring WebRTC call');\n      }\n      if (webphone.ringSession && (webphone.ringSessionId !== this._ringSessionId || forcePush)) {\n        this._ringSessionId = webphone.ringSessionId;\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: true\n        });\n      }\n      // Check if ringing is over\n      if (this._ringSessionId) {\n        const ringingSessions = webphone.sessions.filter(session =>\n          session.callStatus === 'webphone-session-connecting' && session.direction === 'Inbound'\n        );\n        if (ringingSessions.length <= 0) {\n          this._postMessage({\n            type: this._messageTypes.pushRingState,\n            ringing: false\n          });\n          this._ringSessionId = null;\n        }\n      }\n      const ringingCallsLength = this._callMonitor.activeRingCalls.length;\n      const onHoldCallsLength = this._callMonitor.activeOnHoldCalls.length;\n      const currentStartTime = (\n        this._callMonitor.activeCurrentCalls &&\n        this._callMonitor.activeCurrentCalls.length > 0 &&\n        this._callMonitor.activeCurrentCalls[0].startTime) || 0;\n      if (\n        forcePush ||\n        this._lastRingCallsLength !== ringingCallsLength ||\n        this._lastOnHoldCallsLength !== onHoldCallsLength ||\n        this._lastCurrentStartTime !== currentStartTime\n      ) {\n        this._lastRingCallsLength = ringingCallsLength;\n        this._lastOnHoldCallsLength = onHoldCallsLength;\n        this._lastCurrentStartTime = currentStartTime;\n        this._postMessage({\n          type: this._messageTypes.pushCalls,\n          ringingCallsLength,\n          onHoldCallsLength,\n          currentStartTime,\n        });\n        this._postMessage({\n          type: this._messageTypes.pushLocale,\n          strings: this._localeStrings\n        });\n      }\n      this._showIncomingCallPage = !!(\n        this._webphone && this._webphone.ringSession && !this._webphone.ringSession.minimized\n      );\n      if (\n        forcePush ||\n        this._lastPath !== this._router.currentPath ||\n        this._lastShowIncomingCallPage !== this._showIncomingCallPage\n      ) {\n        this._lastPath = this._router.currentPath;\n        this._lastShowIncomingCallPage = this._showIncomingCallPage;\n        const onCurrentCallPath = (\n          (this._router.currentPath === ACTIVE_CALL_PATH ||\n            this._router.currentPath === `${ACTIVE_CALL_PATH}/${this._webphone.activeSessionId}`) &&\n          !this._showIncomingCallPage\n        );\n        if (\n          forcePush ||\n          this.onCurrentCallPath !== onCurrentCallPath ||\n          this._lastShowIncomingCallPage !== this._showIncomingCallPage\n        ) {\n          this.onCurrentCallPath = onCurrentCallPath;\n          this._lastShowIncomingCallPage = this._showIncomingCallPage;\n          this._postMessage({\n            type: this._messageTypes.pushOnCurrentCallPath,\n            onCurrentCallPath,\n          });\n        }\n        const onAllCallsPath = (\n          this._router.currentPath === ALL_CALL_PATH &&\n          !this._showIncomingCallPage\n        );\n        if (\n          forcePush ||\n          this.onAllCallsPath !== onAllCallsPath\n        ) {\n          this.onAllCallsPath = onAllCallsPath;\n          this._postMessage({\n            type: this._messageTypes.pushOnAllCallsPath,\n            onAllCallsPath,\n          });\n        }\n      }\n    } else {\n      const status = this._presence.telephonyStatus;\n      if (this._presence.telephonyStatus !== this._telephonyStatus) {\n        this._postMessage({\n          type: this._messageTypes.pushRingState,\n          ringing: status === 'Ringing'\n        });\n        this._telephonyStatus = status;\n      }\n    }\n  }\n\n  get localeStrings() {\n    return {};\n  }\n\n  @proxify\n  async _onNavigateToCurrentCall() {\n    this._router.push(ACTIVE_CALL_PATH);\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (this._webphone && this._webphone.ringSession && !this._webphone.ringSession.minimized) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n  }\n\n  @proxify\n  async _onNavigateToViewCalls() {\n    this._router.push(ALL_CALL_PATH);\n    if (this._userGuide && this._userGuide.started) {\n      this._userGuide.dismiss();\n    }\n    if (this._quickAccess && this._quickAccess.entered) {\n      this._quickAccess.exit();\n    }\n    if (this._webphone && this._webphone.ringSession && !this._webphone.ringSession.minimized) {\n      this._webphone.toggleMinimized(this._webphone.ringSession.id);\n    }\n  }\n}\n"],"file":"index.js"}