{"version":3,"sources":["containers/ConferenceParticipantPage/index.js"],"names":["ConferenceParticipantContainer","props","mounted","nextProps","participants","onBackButtonClick","length","then","Component","propTypes","PropTypes","array","isRequired","func","mapToProps","_","phone","locale","conferenceCall","partyProfiles","currentLocale","mapToFunctions","routerInteraction","regionSettings","confId","conferences","push","removeFunc","id","removeFromConference","formatPhone","phoneNumber","areaCode","countryCode","ConferenceParticipantPage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;IAGMA,8B;;;AAMJ,0CAAYC,KAAZ,EAAmB;AAAA;;AAAA,sLACXA,KADW;;AAEjB,UAAKC,OAAL,GAAe,KAAf;AAFiB;AAGlB;;;;wCAEmB;AAClB,WAAKA,OAAL,GAAe,IAAf;AACD;;;2CAEsB;AACrB,WAAKA,OAAL,GAAe,KAAf;AACD;;;8CAEyBC,S,EAAW;AAAA;;AACnC,UAAI,CAAC,KAAKD,OAAV,EAAmB;AACjB;AACD;;AAHkC,mBAKS,KAAKD,KALd;AAAA,UAK3BG,YAL2B,UAK3BA,YAL2B;AAAA,UAKbC,iBALa,UAKbA,iBALa;;;AAOnC,UAAI,CAACF,UAAUC,YAAV,CAAuBE,MAAxB,IACCH,UAAUC,YAAV,CAAuBE,MAAvB,KAAkCF,aAAaE,MADpD,EAC4D;AAC1D,6BAAM,GAAN,EAAWC,IAAX,CAAgB,YAAM;AACpB,cAAI,OAAKL,OAAT,EAAkB;AAChBG;AACD;AACF,SAJD;AAKD;AACF;;;6BAEQ;AACP,aAAO,8BAAC,oCAAD,EAAgC,KAAKJ,KAArC,CAAP;AACD;;;EAtC0CO,gB,UACpCC,S,GAAU;AACfL,gBAAcM,oBAAUC,KAAV,CAAgBC,UADf;AAEfP,qBAAmBK,oBAAUG,IAAV,CAAeD;AAFnB,C;;;AAyCnB,SAASE,UAAT,CAAoBC,CAApB,QAKG;AAAA,wBAJDC,KAIC;AAAA,MAHCC,MAGD,cAHCA,MAGD;AAAA,MAFCC,cAED,cAFCA,cAED;;AACD,MAAMd,eAAec,eAAeC,aAApC;;AAEA,SAAO;AACLC,mBAAeH,OAAOG,aADjB;AAELhB;AAFK,GAAP;AAID;;AAED,SAASiB,cAAT,CAAwBN,CAAxB,SAMG;AAAA,0BALDC,KAKC;AAAA,MAJCE,cAID,eAJCA,cAID;AAAA,MAHCI,iBAGD,eAHCA,iBAGD;AAAA,MAFCC,cAED,eAFCA,cAED;;AACD,MAAMC,SAASN,eAAeO,WAAf,IAA8B,oBAAYP,eAAeO,WAA3B,EAAwC,CAAxC,CAA7C;;AAEA,SAAO;AACLpB,uBAAmB;AAAA,aAAMiB,kBAAkBI,IAAlB,CAAuB,eAAvB,CAAN;AAAA,KADd;AAECC,cAFD;AAAA,4GAEYC,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIKV,eAAeW,oBAAf,CAAoCL,MAApC,EAA4CI,EAA5C,CAJL;;AAAA;AAAA,iDAKM,IALN;;AAAA;AAAA;AAAA;AAAA,iDAOM,KAPN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAULE,iBAAa;AAAA,aAAe,4BAAa;AACvCC,gCADuC;AAEvCC,kBAAUT,eAAeS,QAFc;AAGvCC,qBAAaV,eAAeU;AAHW,OAAb,CAAf;AAAA;AAVR,GAAP;AAgBD;;AAED,IAAMC,4BAA4B,yBAAU,yBAC1CpB,UAD0C,EAE1CO,cAF0C,EAG1CrB,8BAH0C,CAAV,CAAlC;;kBAKekC,yB","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport sleep from 'ringcentral-integration/lib/sleep';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport withPhone from '../../lib/withPhone';\nimport ConferenceParticipantPanel from '../../components/ConferenceParticipantPanel';\n\n\nclass ConferenceParticipantContainer extends Component {\n  static propTypes={\n    participants: PropTypes.array.isRequired,\n    onBackButtonClick: PropTypes.func.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n    this.mounted = false;\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.mounted) {\n      return;\n    }\n\n    const { participants, onBackButtonClick } = this.props;\n\n    if (!nextProps.participants.length\n      && nextProps.participants.length !== participants.length) {\n      sleep(500).then(() => {\n        if (this.mounted) {\n          onBackButtonClick();\n        }\n      });\n    }\n  }\n\n  render() {\n    return <ConferenceParticipantPanel {...this.props} />;\n  }\n}\n\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    conferenceCall,\n  },\n}) {\n  const participants = conferenceCall.partyProfiles;\n\n  return {\n    currentLocale: locale.currentLocale,\n    participants,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conferenceCall,\n    routerInteraction,\n    regionSettings,\n  },\n}) {\n  const confId = conferenceCall.conferences && Object.keys(conferenceCall.conferences)[0];\n\n  return {\n    onBackButtonClick: () => routerInteraction.push('/calls/active'),\n    async removeFunc(id) {\n      try {\n        await conferenceCall.removeFromConference(confId, id);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    },\n    formatPhone: phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: regionSettings.areaCode,\n      countryCode: regionSettings.countryCode,\n    }),\n  };\n}\n\nconst ConferenceParticipantPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferenceParticipantContainer));\n\nexport default ConferenceParticipantPage;\n"]}