{"version":3,"sources":["components/MessageTabButton/index.js"],"names":["NavigationButton","active","icon","label","noticeCounts","onClick","width","fullSizeInk","notice","styles","notices","navigationButton","linearBorder","iconHolder","propTypes","PropTypes","node","isRequired","bool","string","number","oneOfType","func","defaultProps","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,gBAAT,OAQG;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDC,IAMC,QANDA,IAMC;AAAA,MALDC,KAKC,QALDA,KAKC;AAAA,MAJDC,YAIC,QAJDA,YAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAIC,MAAM,GAAG,IAAb;;AACA,MAAIJ,YAAY,IAAIA,YAAY,GAAG,CAAnC,EAAsC;AACpC,QAAIA,YAAY,GAAG,EAAnB,EAAuB;AACrBI,MAAAA,MAAM,GAAG;AAAK,QAAA,SAAS,EAAEC,gBAAOC;AAAvB,eAAT;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAG;AAAK,QAAA,SAAS,EAAEC,gBAAOD;AAAvB,SAAgCJ,YAAhC,CAAT;AACD;AACF;;AACD,SACE;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,SAAS,EAAE,yBACTI,gBAAOE,gBADE,EAETV,MAAM,IAAIQ,gBAAOR,MAFR,EAGTM,WAAW,GAAG,IAAH,GAAUE,gBAAOG,YAHnB,CAFb;AAOE,IAAA,KAAK,EAAE;AACLN,MAAAA,KAAK,EAALA;AADK;AAPT,KAWE;AAAK,IAAA,SAAS,EAAEG,gBAAOI,UAAvB;AAAmC,IAAA,KAAK,EAAEV;AAA1C,KACE;AAAK,IAAA,SAAS,EAAEM,gBAAOP;AAAvB,KACGA,IADH,CADF,EAIGM,MAJH,CAXF,CADF;AAoBD;;AACDR,gBAAgB,CAACc,SAAjB,GAA6B;AAC3BZ,EAAAA,IAAI,EAAEa,mBAAUC,IAAV,CAAeC,UADM;AAE3BhB,EAAAA,MAAM,EAAEc,mBAAUG,IAFS;AAG3Bf,EAAAA,KAAK,EAAEY,mBAAUI,MAHU;AAI3Bf,EAAAA,YAAY,EAAEW,mBAAUK,MAJG;AAK3Bd,EAAAA,KAAK,EAAES,mBAAUM,SAAV,CAAoB,CACzBN,mBAAUK,MADe,EAEzBL,mBAAUI,MAFe,CAApB,EAGJF,UARwB;AAS3BZ,EAAAA,OAAO,EAAEU,mBAAUO,IATQ;AAU3Bf,EAAAA,WAAW,EAAEQ,mBAAUG;AAVI,CAA7B;AAYAlB,gBAAgB,CAACuB,YAAjB,GAAgC;AAC9BtB,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,KAAK,EAAEqB,SAFuB;AAG9BpB,EAAAA,YAAY,EAAEoB,SAHgB;AAI9BnB,EAAAA,OAAO,EAAEmB,SAJqB;AAK9BjB,EAAAA,WAAW,EAAE;AALiB,CAAhC;eAOeP,gB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nfunction NavigationButton({\n  active,\n  icon,\n  label,\n  noticeCounts,\n  onClick,\n  width,\n  fullSizeInk,\n}) {\n  let notice = null;\n  if (noticeCounts && noticeCounts > 0) {\n    if (noticeCounts > 99) {\n      notice = <div className={styles.notices}>99+</div>;\n    } else {\n      notice = <div className={styles.notice}>{noticeCounts}</div>;\n    }\n  }\n  return (\n    <div\n      onClick={onClick}\n      className={classnames(\n        styles.navigationButton,\n        active && styles.active,\n        fullSizeInk ? null : styles.linearBorder\n      )}\n      style={{\n        width,\n      }}\n    >\n      <div className={styles.iconHolder} title={label}>\n        <div className={styles.icon}>\n          {icon}\n        </div>\n        {notice}\n      </div>\n    </div>\n  );\n}\nNavigationButton.propTypes = {\n  icon: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n  noticeCounts: PropTypes.number,\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  onClick: PropTypes.func,\n  fullSizeInk: PropTypes.bool,\n};\nNavigationButton.defaultProps = {\n  active: false,\n  label: undefined,\n  noticeCounts: undefined,\n  onClick: undefined,\n  fullSizeInk: true,\n};\nexport default NavigationButton;\n"],"file":"index.js"}