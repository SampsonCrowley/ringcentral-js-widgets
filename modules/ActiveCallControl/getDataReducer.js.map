{"version":3,"sources":["modules/ActiveCallControl/getDataReducer.js"],"names":["updateActiveSessionStatus","state","party","sessionId","newState","muted","standAlone","code","status","direction","id","isOnMute","isOnHold","activeCallControlStatus","hold","isReject","setActiveSessionStatus","activeSession","obj","partyId","getActiveSessionIdReducer","types","type","setActiveSessionId","resetSuccess","removeActiveSession","getRecordingIdsStatusReducer","response","startRecord","stopRecord","recordFail","getActiveSessionsStatusReducer","activeSessionsMap","updateActiveSessions","isOnRecording","mute","unmute","unhold","getTimestampReducer","timestamp","getDataReducer","activeSessionId","activeSessionsStatus","recordingIds"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\nimport { isHangUp, isReject } from './helpers';\nimport activeCallControlStatus from '../../enums/activeCallControlStatus';\n\n\nfunction updateActiveSessionStatus({\n  state,\n  party,\n  sessionId\n}) {\n  const newState = { ...state };\n  const {\n    muted,\n    standAlone,\n    status: {\n      code\n    },\n    direction,\n    id,\n  } = party;\n  if (isHangUp(code) && newState[sessionId]) {\n    delete newState[sessionId];\n  } else {\n    if (!newState[sessionId]) {\n      newState[sessionId] = {};\n    }\n    newState[sessionId][id] = {\n      ...newState[sessionId][id],\n      standAlone,\n      sessionId,\n      isOnMute: muted,\n      isOnHold: code === activeCallControlStatus.hold,\n      isReject: isReject({ direction, code })\n    };\n  }\n  return newState;\n}\n\nfunction setActiveSessionStatus(state, activeSession, obj) {\n  const {\n    sessionId,\n    partyId\n  } = activeSession;\n  const newState = { ...state };\n  if (!newState[sessionId]) {\n    newState[sessionId] = {};\n  }\n  newState[sessionId][partyId] = {\n    ...newState[sessionId][partyId],\n    ...obj\n  };\n  return newState;\n}\nfunction getActiveSessionIdReducer(types) {\n  return (state = null, { type, sessionId }) => {\n    switch (type) {\n      case types.setActiveSessionId: {\n        return sessionId;\n      }\n      case types.resetSuccess:\n      case types.removeActiveSession: {\n        return null;\n      }\n      default:\n        return state;\n    }\n  };\n}\nfunction getRecordingIdsStatusReducer(types) {\n  return (state = {}, { type, activeSession, response }) => {\n    switch (type) {\n      case types.startRecord: {\n        const {\n          sessionId,\n          partyId\n        } = activeSession;\n        const newState = { ...state };\n        if (!newState[sessionId]) {\n          newState[sessionId] = {};\n        }\n        newState[sessionId][partyId] = {\n          ...response\n        };\n        return newState;\n      }\n      case types.stopRecord: {\n        const {\n          sessionId,\n        } = activeSession;\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.recordFail:\n      case types.removeActiveSession:\n      case types.resetSuccess:\n        return {};\n      default:\n        return state;\n    }\n  };\n}\nfunction getActiveSessionsStatusReducer(types) {\n  return (state = {}, {\n    type, sessionId, party, activeSessionsMap, activeSession\n  }) => {\n    switch (type) {\n      case types.updateActiveSessions: {\n        let newState = null;\n        for (const sessionId in activeSessionsMap) {\n          if (sessionId) {\n            newState = updateActiveSessionStatus({\n              state,\n              party: activeSessionsMap[sessionId],\n              sessionId\n            });\n          }\n        }\n        return newState;\n      }\n      case types.updateActiveSessionStatus: {\n        return updateActiveSessionStatus({\n          state,\n          party,\n          sessionId\n        });\n      }\n      case types.startRecord:\n      case types.stopRecord: {\n        return setActiveSessionStatus(state, activeSession, { isOnRecording: type === types.startRecord });\n      }\n      case types.mute:\n      case types.unmute: {\n        return setActiveSessionStatus(state, activeSession, { isOnMute: type === types.mute });\n      }\n      case types.hold:\n      case types.unhold: {\n        return setActiveSessionStatus(state, activeSession, { isOnHold: type === types.hold });\n      }\n      case types.removeActiveSession: {\n        const newState = { ...state };\n        if (newState[sessionId]) {\n          delete newState[sessionId];\n        }\n        return newState;\n      }\n      case types.resetSuccess: {\n        return {};\n      }\n      default:\n        return state;\n    }\n  };\n}\nfunction getTimestampReducer(types) {\n  return (state = null, { type, timestamp }) => {\n    switch (type) {\n      case types.updateActiveSessions:\n        return timestamp;\n      case types.resetSuccess:\n        return null;\n      default:\n        return state;\n    }\n  };\n}\nexport default function getDataReducer(types) {\n  return combineReducers({\n    activeSessionId: getActiveSessionIdReducer(types),\n    activeSessionsStatus: getActiveSessionsStatusReducer(types),\n    recordingIds: getRecordingIdsStatusReducer(types),\n    timestamp: getTimestampReducer(types),\n  });\n}\n"],"file":"getDataReducer.js"}