{"version":3,"sources":["components/SettingsPanel/index.js"],"names":["SettingsPanel","children","className","onLogoutButtonClick","loginNumber","version","currentLocale","brandId","EulaRenderer","onCallingSettingsLinkClick","onRegionSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onQuickAccessLinkClick","onUserGuideClick","showCalling","showAutoLog","showAutoLogNotes","showAudio","showReport","autoLogEnabled","autoLogNotesEnabled","disableAutoLogEnabled","disableAutoLogNotesEnabled","onAutoLogChange","onAutoLogNotesChange","showAutoLogSMS","autoLogSMSEnabled","onAutoLogSMSChange","showClickToDial","clickToDialEnabled","clickToDialPermissions","onClickToDialChange","onReportLinkClick","showRegion","showHeader","outboundSMS","showSpinner","dndStatus","userStatus","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","isCallQueueMember","showPresenceSettings","openPresenceSettings","showFeedback","showQuickAccess","showUserGuide","additional","supportedLocales","savedLocale","saveLocale","clickToDialTitle","versionContainer","locale","length","i18n","getString","region","report","calling","audio","feedback","quickAccess","presenceSetting","clickToDialText","clickToDial","autoLog","styles","disableText","autoLogNotes","autoLogSMS","header","userGuide","versionArea","root","content","contentWithHeader","section","eula","logoutIcon","dynamicsFont","logout","propTypes","PropTypes","string","isRequired","func","node","bool","arrayOf","defaultProps","Eula","undefined"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAGe,SAASA,aAAT,OAyDZ;AAAA,MAxDDC,QAwDC,QAxDDA,QAwDC;AAAA,MAvDDC,SAuDC,QAvDDA,SAuDC;AAAA,MAtDDC,mBAsDC,QAtDDA,mBAsDC;AAAA,MArDDC,WAqDC,QArDDA,WAqDC;AAAA,MApDDC,OAoDC,QApDDA,OAoDC;AAAA,MAnDDC,aAmDC,QAnDDA,aAmDC;AAAA,MAlDDC,OAkDC,QAlDDA,OAkDC;AAAA,MAjDDC,YAiDC,QAjDDA,YAiDC;AAAA,MAhDDC,0BAgDC,QAhDDA,0BAgDC;AAAA,MA/CDC,yBA+CC,QA/CDA,yBA+CC;AAAA,MA9CDC,wBA8CC,QA9CDA,wBA8CC;AAAA,MA7CDC,2BA6CC,QA7CDA,2BA6CC;AAAA,MA5CDC,sBA4CC,QA5CDA,sBA4CC;AAAA,MA3CDC,gBA2CC,QA3CDA,gBA2CC;AAAA,MA1CDC,WA0CC,QA1CDA,WA0CC;AAAA,MAzCDC,WAyCC,QAzCDA,WAyCC;AAAA,MAxCDC,gBAwCC,QAxCDA,gBAwCC;AAAA,MAvCDC,SAuCC,QAvCDA,SAuCC;AAAA,MAtCDC,UAsCC,QAtCDA,UAsCC;AAAA,MArCDC,cAqCC,QArCDA,cAqCC;AAAA,MApCDC,mBAoCC,QApCDA,mBAoCC;AAAA,MAnCDC,qBAmCC,QAnCDA,qBAmCC;AAAA,MAlCDC,0BAkCC,QAlCDA,0BAkCC;AAAA,MAjCDC,eAiCC,QAjCDA,eAiCC;AAAA,MAhCDC,oBAgCC,QAhCDA,oBAgCC;AAAA,MA/BDC,cA+BC,QA/BDA,cA+BC;AAAA,MA9BDC,iBA8BC,QA9BDA,iBA8BC;AAAA,MA7BDC,kBA6BC,QA7BDA,kBA6BC;AAAA,MA5BDC,eA4BC,QA5BDA,eA4BC;AAAA,MA3BDC,kBA2BC,QA3BDA,kBA2BC;AAAA,MA1BDC,sBA0BC,QA1BDA,sBA0BC;AAAA,MAzBDC,mBAyBC,QAzBDA,mBAyBC;AAAA,MAxBDC,iBAwBC,QAxBDA,iBAwBC;AAAA,MAvBDC,UAuBC,QAvBDA,UAuBC;AAAA,MAtBDC,UAsBC,QAtBDA,UAsBC;AAAA,MArBDC,WAqBC,QArBDA,WAqBC;AAAA,MApBDC,WAoBC,QApBDA,WAoBC;AAAA,MAnBDC,SAmBC,QAnBDA,SAmBC;AAAA,MAlBDC,UAkBC,QAlBDA,UAkBC;AAAA,MAjBDC,YAiBC,QAjBDA,YAiBC;AAAA,MAhBDC,OAgBC,QAhBDA,OAgBC;AAAA,MAfDC,eAeC,QAfDA,eAeC;AAAA,MAdDC,YAcC,QAdDA,YAcC;AAAA,MAbDC,0BAaC,QAbDA,0BAaC;AAAA,MAZDC,iBAYC,QAZDA,iBAYC;AAAA,MAXDC,oBAWC,QAXDA,oBAWC;AAAA,MAVDC,oBAUC,QAVDA,oBAUC;AAAA,MATDC,YASC,QATDA,YASC;AAAA,MARDC,eAQC,QARDA,eAQC;AAAA,MAPDC,aAOC,QAPDA,aAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDC,gBAKC,QALDA,gBAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,gBACC,QADDA,gBACC;;AACD,MAAInB,WAAJ,EAAiB;AACf,WACE,6BAAC,uBAAD,OADF;AAGD;;AAED,MAAMoB,MAAM,GAAGL,gBAAgB,IAAIA,gBAAgB,CAACM,MAAjB,GAA0B,CAA9C,IACb,6BAAC,kBAAD;AACE,IAAA,KAAK,EAAEC,cAAKC,SAAL,CAAe,UAAf,EAA2BtD,aAA3B;AADT,KAGE,6BAAC,qBAAD;AACE,IAAA,KAAK,EAAE+C,WADT;AAEE,IAAA,QAAQ,EAAEC,UAFZ;AAGE,IAAA,OAAO,EAAEF;AAHX,IAHF,CADF;;AAYA,MAAMS,MAAM,GAAG3B,UAAU,GAErB,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAExB;AADX,KAEGiD,cAAKC,SAAL,CAAe,QAAf,EAAyBtD,aAAzB,CAFH,CAFqB,GAOvB,IAPF;AASA,MAAMwD,MAAM,GAAG3C,UAAU,GAErB,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEc;AADX,KAEG0B,cAAKC,SAAL,CAAe,QAAf,EAAyBtD,aAAzB,CAFH,CAFqB,GAOvB,IAPF;AASA,MAAMyD,OAAO,GAAGhD,WAAW,GAEvB,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEN;AADX,KAEGkD,cAAKC,SAAL,CAAe,SAAf,EAA0BtD,aAA1B,CAFH,CAFuB,GAOzB,IAPF;AAQA,MAAM0D,KAAK,GAAG9C,SAAS,GAEnB,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEP;AADX,KAEGgD,cAAKC,SAAL,CAAe,OAAf,EAAwBtD,aAAxB,CAFH,CAFmB,GAOrB,IAPF;AAQA,MAAM2D,QAAQ,GAAGjB,YAAY,GAEzB,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEpC;AADX,KAEG+C,cAAKC,SAAL,CAAe,UAAf,EAA2BtD,aAA3B,CAFH,CAFyB,GAO3B,IAPF;AAQA,MAAM4D,WAAW,GAAGjB,eAAe,GAE/B,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEpC;AADX,KAEG8C,cAAKC,SAAL,CAAe,aAAf,EAA8BtD,aAA9B,CAFH,CAF+B,GAOjC,IAPF;AAQA,MAAM6D,eAAe,GAAIrB,oBAAoB,IAAIR,SAAxB,IAAqCC,UAAtC,GAEpB,6BAAC,+BAAD;AACE,IAAA,aAAa,EAAEjC,aADjB;AAEE,IAAA,SAAS,EAAEgC,SAFb;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,iBAAiB,EAAEM,iBAJrB;AAKE,IAAA,YAAY,EAAEL,YALhB;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,eAAe,EAAEC,eAPnB;AAQE,IAAA,YAAY,EAAEC,YARhB;AASE,IAAA,0BAA0B,EAAEC,0BAT9B;AAUE,IAAA,oBAAoB,EAAEG;AAVxB,IAFoB,GAetB,IAfF;AAgBA,MAAIqB,eAAJ;;AACA,MAAIhC,WAAW,IAAIL,sBAAnB,EAA2C;AACzCqC,IAAAA,eAAe,GAAGT,cAAKC,SAAL,CAAe,gBAAf,EAAiCtD,aAAjC,CAAlB;AACD,GAFD,MAEO,IAAI,CAAC8B,WAAD,IAAgBL,sBAApB,EAA4C;AACjDqC,IAAAA,eAAe,GAAGT,cAAKC,SAAL,CAAe,aAAf,EAA8BtD,aAA9B,CAAlB;AACD,GAFM,MAEA,IAAI8B,WAAW,IAAI,CAACL,sBAApB,EAA4C;AACjDqC,IAAAA,eAAe,GAAGT,cAAKC,SAAL,CAAe,YAAf,EAA6BtD,aAA7B,CAAlB;AACD,GAFM,MAEA;AACL8D,IAAAA,eAAe,GAAG,EAAlB;AACD;;AACD,MAAMC,WAAW,GAAGxC,eAAe,KACjCO,WAAW,IAAIL,sBADkB,CAAf,GAGhB,6BAAC,iBAAD;AACE,IAAA,IAAI,EACF,6BAAC,eAAD;AACE,MAAA,OAAO,EAAED,kBADX;AAEE,MAAA,QAAQ,EAAEE;AAFZ,MAFJ;AAOE,IAAA,KAAK,EAAEuB;AAPT,KASGa,eATH,CAHgB,GAelB,IAfF,CA/FC,CA+GD;;AACA,MAAME,OAAO,GAAGtD,WAAW,GACzB,6BAAC,iBAAD;AACE,IAAA,IAAI,EACF,6BAAC,eAAD;AACE,MAAA,OAAO,EAAEM,qBADX;AAEE,MAAA,OAAO,EAAEF,cAFX;AAGE,MAAA,QAAQ,EAAEI;AAHZ;AAFJ,KASE;AAAM,IAAA,SAAS,EAAE,yBAAWF,qBAAqB,IAAIiD,gBAAOC,WAA3C;AAAjB,KACGb,cAAKC,SAAL,CAAe,cAAf,EAA+BtD,aAA/B,CADH,CATF,CADyB,GAezB,IAfF;AAgBA,MAAMmE,YAAY,GAAGxD,gBAAgB,GACnC,6BAAC,iBAAD;AACE,IAAA,IAAI,EACF,6BAAC,eAAD;AACE,MAAA,OAAO,EAAEM,0BADX;AAEE,MAAA,OAAO,EAAEF,mBAFX;AAGE,MAAA,QAAQ,EAAEI;AAHZ;AAFJ,KASE;AAAM,IAAA,SAAS,EAAE,yBAAWF,0BAA0B,IAAIgD,gBAAOC,WAAhD;AAAjB,KACGb,cAAKC,SAAL,CAAe,cAAf,EAA+BtD,aAA/B,CADH,CATF,CADmC,GAenC,IAfF;AAgBA,MAAMoE,UAAU,GAAGhD,cAAc,GAC/B,6BAAC,iBAAD;AACE,IAAA,IAAI,EACF,6BAAC,eAAD;AACE,MAAA,OAAO,EAAEC,iBADX;AAEE,MAAA,QAAQ,EAAEC;AAFZ;AAFJ,KAQG+B,cAAKC,SAAL,CAAe,YAAf,EAA6BtD,aAA7B,CARH,CAD+B,GAW7B,IAXJ;AAYA,MAAMqE,MAAM,GAAGxC,UAAU,GACvB,6BAAC,eAAD,QACGwB,cAAKC,SAAL,CAAe,UAAf,EAA2BtD,aAA3B,CADH,CADuB,GAIrB,IAJJ;AAKA,MAAMsE,SAAS,GAAG1B,aAAa,GAC7B,6BAAC,iBAAD;AACE,IAAA,OAAO,EAAEpC;AADX,KAEG6C,cAAKC,SAAL,CAAe,WAAf,EAA4BtD,aAA5B,CAFH,CAD6B,GAK3B,IALJ;;AAOA,MAAMuE,WAAW,GAAGrB,gBAAgB,IAClC;AAAK,IAAA,SAAS,EAAEe,gBAAOf;AAAvB,KACGG,cAAKC,SAAL,CAAe,SAAf,EAA0BtD,aAA1B,CADH,EAEG,GAFH,EAGGD,OAHH,CADF;;AAOA,SACE;AAAK,IAAA,SAAS,EAAE,yBAAWkE,gBAAOO,IAAlB,EAAwB5E,SAAxB;AAAhB,KACGyE,MADH,EAEE,6BAAC,cAAD;AACE,IAAA,SAAS,EAAE,yBACTJ,gBAAOQ,OADE,EAET5C,UAAU,IAAIoC,gBAAOS,iBAFZ;AADb,KAKGvB,MALH,EAMGM,OANH,EAOGF,MAPH,EAQGG,KARH,EASGG,eATH,EAUGlE,QAVH,EAWGqE,OAXH,EAYGG,YAZH,EAaGC,UAbH,EAcGL,WAdH,EAeGlB,UAfH,EAgBGc,QAhBH,EAiBGH,MAjBH,EAkBGI,WAlBH,EAmBGU,SAnBH,EAoBE;AAAS,IAAA,SAAS,EAAEL,gBAAOU;AAA3B,KACE,6BAAC,aAAD;AAAM,IAAA,QAAQ;AAAd,KACE,6BAAC,YAAD;AACE,IAAA,SAAS,EAAEV,gBAAOW,IADpB;AAEE,IAAA,aAAa,EAAE5E,aAFjB;AAGE,IAAA,OAAO,EAAEC;AAHX,IADF,CADF,CApBF,EA4BE;AAAS,IAAA,SAAS,EAAEgE,gBAAOU;AAA3B,KACE,6BAAC,iBAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,OAAO,EAAE9E,mBAHX;AAIE,IAAA,IAAI,EACF;AAAM,MAAA,SAAS,EAAE,yBAAWoE,gBAAOY,UAAlB,EAA8BC,sBAAaC,MAA3C;AAAjB;AALJ,KAOG1B,cAAKC,SAAL,CAAe,QAAf,EAAyBtD,aAAzB,CAPH,EAQE;AAAM,IAAA,SAAS,EAAEiE,gBAAOnE;AAAxB,gBACOA,WADP,EARF,CADF,CA5BF,EA0CGyE,WA1CH,CAFF,CADF;AAiDD;;AAED7E,aAAa,CAACsF,SAAd,GAA0B;AACxB/E,EAAAA,OAAO,EAAEgF,mBAAUC,MAAV,CAAiBC,UADF;AAExBhF,EAAAA,0BAA0B,EAAE8E,mBAAUG,IAAV,CAAeD,UAFnB;AAGxB9E,EAAAA,wBAAwB,EAAE4E,mBAAUG,IAAV,CAAeD,UAHjB;AAIxBxF,EAAAA,QAAQ,EAAEsF,mBAAUI,IAJI;AAKxBzF,EAAAA,SAAS,EAAEqF,mBAAUC,MALG;AAMxBlF,EAAAA,aAAa,EAAEiF,mBAAUC,MAAV,CAAiBC,UANR;AAOxBjF,EAAAA,YAAY,EAAE+E,mBAAUG,IAPA;AAQxBtF,EAAAA,WAAW,EAAEmF,mBAAUC,MAAV,CAAiBC,UARN;AASxBtF,EAAAA,mBAAmB,EAAEoF,mBAAUG,IAAV,CAAeD,UATZ;AAUxB/E,EAAAA,yBAAyB,EAAE6E,mBAAUG,IAAV,CAAeD,UAVlB;AAWxB1E,EAAAA,WAAW,EAAEwE,mBAAUK,IAXC;AAYxB1D,EAAAA,UAAU,EAAEqD,mBAAUK,IAZE;AAaxB1E,EAAAA,SAAS,EAAEqE,mBAAUK,IAbG;AAcxB5E,EAAAA,WAAW,EAAEuE,mBAAUK,IAdC;AAexB3E,EAAAA,gBAAgB,EAAEsE,mBAAUK,IAfJ;AAgBxBzE,EAAAA,UAAU,EAAEoE,mBAAUK,IAhBE;AAiBxBxE,EAAAA,cAAc,EAAEmE,mBAAUK,IAjBF;AAkBxBvE,EAAAA,mBAAmB,EAAEkE,mBAAUK,IAlBP;AAmBxBtE,EAAAA,qBAAqB,EAAEiE,mBAAUK,IAnBT;AAoBxBrE,EAAAA,0BAA0B,EAAEgE,mBAAUK,IApBd;AAqBxBpE,EAAAA,eAAe,EAAE+D,mBAAUG,IArBH;AAsBxBjE,EAAAA,oBAAoB,EAAE8D,mBAAUG,IAtBR;AAuBxBhE,EAAAA,cAAc,EAAE6D,mBAAUK,IAvBF;AAwBxBjE,EAAAA,iBAAiB,EAAE4D,mBAAUK,IAxBL;AAyBxBhE,EAAAA,kBAAkB,EAAE2D,mBAAUG,IAzBN;AA0BxB7D,EAAAA,eAAe,EAAE0D,mBAAUK,IA1BH;AA2BxB9D,EAAAA,kBAAkB,EAAEyD,mBAAUK,IA3BN;AA4BxB7D,EAAAA,sBAAsB,EAAEwD,mBAAUK,IA5BV;AA6BxB5D,EAAAA,mBAAmB,EAAEuD,mBAAUG,IA7BP;AA8BxBrF,EAAAA,OAAO,EAAEkF,mBAAUC,MAAV,CAAiBC,UA9BF;AA+BxBtD,EAAAA,UAAU,EAAEoD,mBAAUK,IA/BE;AAgCxBxD,EAAAA,WAAW,EAAEmD,mBAAUK,IAhCC;AAiCxBvD,EAAAA,WAAW,EAAEkD,mBAAUK,IAjCC;AAkCxBtD,EAAAA,SAAS,EAAEiD,mBAAUC,MAlCG;AAmCxBjD,EAAAA,UAAU,EAAEgD,mBAAUC,MAnCE;AAoCxB3C,EAAAA,iBAAiB,EAAE0C,mBAAUK,IApCL;AAqCxBpD,EAAAA,YAAY,EAAE+C,mBAAUG,IArCA;AAsCxBjD,EAAAA,OAAO,EAAE8C,mBAAUG,IAtCK;AAuCxBhD,EAAAA,eAAe,EAAE6C,mBAAUG,IAvCH;AAwCxB/C,EAAAA,YAAY,EAAE4C,mBAAUG,IAxCA;AAyCxB9C,EAAAA,0BAA0B,EAAE2C,mBAAUG,IAzCd;AA0CxB3C,EAAAA,oBAAoB,EAAEwC,mBAAUK,IA1CR;AA2CxB9C,EAAAA,oBAAoB,EAAEyC,mBAAUK,IA3CR;AA4CxB5C,EAAAA,YAAY,EAAEuC,mBAAUK,IA5CA;AA6CxB3C,EAAAA,eAAe,EAAEsC,mBAAUK,IA7CH;AA8CxBzC,EAAAA,UAAU,EAAEoC,mBAAUI,IA9CE;AA+CxBvC,EAAAA,gBAAgB,EAAEmC,mBAAUM,OAAV,CAAkBN,mBAAUC,MAA5B,CA/CM;AAgDxBnC,EAAAA,WAAW,EAAEkC,mBAAUC,MAhDC;AAiDxBlC,EAAAA,UAAU,EAAEiC,mBAAUG,IAjDE;AAkDxB9E,EAAAA,2BAA2B,EAAE2E,mBAAUG,IAAV,CAAeD,UAlDpB;AAmDxB5E,EAAAA,sBAAsB,EAAE0E,mBAAUG,IAnDV;AAoDxB5E,EAAAA,gBAAgB,EAAEyE,mBAAUG,IAAV,CAAeD,UApDT;AAqDxBvC,EAAAA,aAAa,EAAEqC,mBAAUK,IArDD;AAsDxBrC,EAAAA,gBAAgB,EAAEgC,mBAAUC,MAtDJ;AAuDxBhC,EAAAA,gBAAgB,EAAE+B,mBAAUI,IAvDJ;AAwDxB1D,EAAAA,iBAAiB,EAAEsD,mBAAUG;AAxDL,CAA1B;AA0DA1F,aAAa,CAAC8F,YAAd,GAA6B;AAC3B5F,EAAAA,SAAS,EAAE,IADgB;AAE3BM,EAAAA,YAAY,EAAEuF,aAFa;AAG3B9F,EAAAA,QAAQ,EAAE,IAHiB;AAI3B4B,EAAAA,eAAe,EAAE,KAJU;AAK3BC,EAAAA,kBAAkB,EAAE,KALO;AAM3BC,EAAAA,sBAAsB,EAAE,KANG;AAO3BC,EAAAA,mBAAmB,EAAEgE,SAPM;AAQ3BjF,EAAAA,WAAW,EAAE,KARc;AAS3BG,EAAAA,SAAS,EAAE,KATgB;AAU3BF,EAAAA,WAAW,EAAE,KAVc;AAW3BC,EAAAA,gBAAgB,EAAE,KAXS;AAY3BiB,EAAAA,UAAU,EAAE,KAZe;AAa3BgB,EAAAA,aAAa,EAAE,KAbY;AAc3B/B,EAAAA,UAAU,EAAE,KAde;AAe3BC,EAAAA,cAAc,EAAE,KAfW;AAgB3BC,EAAAA,mBAAmB,EAAE,KAhBM;AAiB3BC,EAAAA,qBAAqB,EAAE,KAjBI;AAkB3BC,EAAAA,0BAA0B,EAAE,KAlBD;AAmB3BC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAnBU;AAoB3BC,EAAAA,oBAAoB,EAAE;AAAA,WAAM,IAAN;AAAA,GApBK;AAqB3BC,EAAAA,cAAc,EAAE,KArBW;AAsB3BC,EAAAA,iBAAiB,EAAE,KAtBQ;AAuB3BC,EAAAA,kBAAkB,EAAEoE,SAvBO;AAwB3B7D,EAAAA,UAAU,EAAE,KAxBe;AAyB3BC,EAAAA,WAAW,EAAE,KAzBc;AA0B3BC,EAAAA,WAAW,EAAE,KA1Bc;AA2B3BC,EAAAA,SAAS,EAAE0D,SA3BgB;AA4B3BzD,EAAAA,UAAU,EAAEyD,SA5Be;AA6B3BnD,EAAAA,iBAAiB,EAAE,KA7BQ;AA8B3BL,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA,GA9Ba;AA+B3BC,EAAAA,OAAO,EAAE;AAAA,WAAM,IAAN;AAAA,GA/BkB;AAgC3BC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAhCU;AAiC3BC,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA,GAjCa;AAkC3BC,EAAAA,0BAA0B,EAAE;AAAA,WAAM,IAAN;AAAA,GAlCD;AAmC3BG,EAAAA,oBAAoB,EAAE,KAnCK;AAoC3BD,EAAAA,oBAAoB,EAAE,IApCK;AAqC3BK,EAAAA,UAAU,EAAE,IArCe;AAsC3BC,EAAAA,gBAAgB,EAAE4C,SAtCS;AAuC3B3C,EAAAA,WAAW,EAAE2C,SAvCc;AAwC3B1C,EAAAA,UAAU,EAAE0C,SAxCe;AAyC3BhD,EAAAA,YAAY,EAAE,IAzCa;AA0C3BC,EAAAA,eAAe,EAAE,KA1CU;AA2C3BpC,EAAAA,sBAAsB,EAAE;AAAA,WAAM,IAAN;AAAA,GA3CG;AA4C3B0C,EAAAA,gBAAgB,EAAE,IA5CS;AA6C3BC,EAAAA,gBAAgB,EAAE,IA7CS;AA8C3BvB,EAAAA,iBAAiB,EAAE;AAAA,WAAM,IAAN;AAAA;AA9CQ,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport Header from '../Header';\nimport Panel from '../Panel';\nimport Line from '../Line';\nimport LinkLine from '../LinkLine';\nimport IconLine from '../IconLine';\nimport Eula from '../Eula';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport PresenceSettingSection from '../PresenceSettingSection';\nimport styles from './styles.scss';\nimport Switch from '../Switch';\nimport InputLine from '../InputLine';\nimport LocalePicker from '../LocalePicker';\nimport i18n from './i18n';\n\n\nexport default function SettingsPanel({\n  children,\n  className,\n  onLogoutButtonClick,\n  loginNumber,\n  version,\n  currentLocale,\n  brandId,\n  EulaRenderer,\n  onCallingSettingsLinkClick,\n  onRegionSettingsLinkClick,\n  onAudioSettingsLinkClick,\n  onFeedbackSettingsLinkClick,\n  onQuickAccessLinkClick,\n  onUserGuideClick,\n  showCalling,\n  showAutoLog,\n  showAutoLogNotes,\n  showAudio,\n  showReport,\n  autoLogEnabled,\n  autoLogNotesEnabled,\n  disableAutoLogEnabled,\n  disableAutoLogNotesEnabled,\n  onAutoLogChange,\n  onAutoLogNotesChange,\n  showAutoLogSMS,\n  autoLogSMSEnabled,\n  onAutoLogSMSChange,\n  showClickToDial,\n  clickToDialEnabled,\n  clickToDialPermissions,\n  onClickToDialChange,\n  onReportLinkClick,\n  showRegion,\n  showHeader,\n  outboundSMS,\n  showSpinner,\n  dndStatus,\n  userStatus,\n  setAvailable,\n  setBusy,\n  setDoNotDisturb,\n  setInvisible,\n  toggleAcceptCallQueueCalls,\n  isCallQueueMember,\n  showPresenceSettings,\n  openPresenceSettings,\n  showFeedback,\n  showQuickAccess,\n  showUserGuide,\n  additional,\n  supportedLocales,\n  savedLocale,\n  saveLocale,\n  clickToDialTitle,\n  versionContainer,\n}) {\n  if (showSpinner) {\n    return (\n      <SpinnerOverlay />\n    );\n  }\n\n  const locale = supportedLocales && supportedLocales.length > 1 && (\n    <InputLine\n      label={i18n.getString('language', currentLocale)}\n    >\n      <LocalePicker\n        value={savedLocale}\n        onChange={saveLocale}\n        options={supportedLocales}\n      />\n    </InputLine>\n  );\n\n  const region = showRegion ?\n    (\n      <LinkLine\n        onClick={onRegionSettingsLinkClick}>\n        {i18n.getString('region', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const report = showReport ?\n    (\n      <LinkLine\n        onClick={onReportLinkClick}>\n        {i18n.getString('report', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n\n  const calling = showCalling ?\n    (\n      <LinkLine\n        onClick={onCallingSettingsLinkClick}>\n        {i18n.getString('calling', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const audio = showAudio ?\n    (\n      <LinkLine\n        onClick={onAudioSettingsLinkClick}>\n        {i18n.getString('audio', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const feedback = showFeedback ?\n    (\n      <LinkLine\n        onClick={onFeedbackSettingsLinkClick}>\n        {i18n.getString('feedback', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const quickAccess = showQuickAccess ?\n    (\n      <LinkLine\n        onClick={onQuickAccessLinkClick}>\n        {i18n.getString('quickAccess', currentLocale)}\n      </LinkLine>\n    ) :\n    null;\n  const presenceSetting = (showPresenceSettings && dndStatus && userStatus) ?\n    (\n      <PresenceSettingSection\n        currentLocale={currentLocale}\n        dndStatus={dndStatus}\n        userStatus={userStatus}\n        isCallQueueMember={isCallQueueMember}\n        setAvailable={setAvailable}\n        setBusy={setBusy}\n        setDoNotDisturb={setDoNotDisturb}\n        setInvisible={setInvisible}\n        toggleAcceptCallQueueCalls={toggleAcceptCallQueueCalls}\n        showPresenceSettings={openPresenceSettings}\n      />\n    ) :\n    null;\n  let clickToDialText;\n  if (outboundSMS && clickToDialPermissions) {\n    clickToDialText = i18n.getString('clickToDialSMS', currentLocale);\n  } else if (!outboundSMS && clickToDialPermissions) {\n    clickToDialText = i18n.getString('clickToDial', currentLocale);\n  } else if (outboundSMS && !clickToDialPermissions) {\n    clickToDialText = i18n.getString('clickToSMS', currentLocale);\n  } else {\n    clickToDialText = '';\n  }\n  const clickToDial = showClickToDial && (\n    outboundSMS || clickToDialPermissions) ?\n    (\n      <IconLine\n        icon={(\n          <Switch\n            checked={clickToDialEnabled}\n            onChange={onClickToDialChange}\n          />\n)}\n        title={clickToDialTitle}\n      >\n        {clickToDialText}\n      </IconLine>\n    ) :\n    null;\n  // if the Switch component is disabled then the text to describe it will be a disabled color.\n  const autoLog = showAutoLog ? (\n    <IconLine\n      icon={(\n        <Switch\n          disable={disableAutoLogEnabled}\n          checked={autoLogEnabled}\n          onChange={onAutoLogChange}\n        />\n)}\n    >\n      <span className={classnames(disableAutoLogEnabled && styles.disableText)}>\n        {i18n.getString('autoLogCalls', currentLocale)}\n      </span>\n    </IconLine>\n  ) :\n    null;\n  const autoLogNotes = showAutoLogNotes ? (\n    <IconLine\n      icon={(\n        <Switch\n          disable={disableAutoLogNotesEnabled}\n          checked={autoLogNotesEnabled}\n          onChange={onAutoLogNotesChange}\n        />\n)}\n    >\n      <span className={classnames(disableAutoLogNotesEnabled && styles.disableText)}>\n        {i18n.getString('autoLogNotes', currentLocale)}\n      </span>\n    </IconLine>\n  ) :\n    null;\n  const autoLogSMS = showAutoLogSMS ? (\n    <IconLine\n      icon={(\n        <Switch\n          checked={autoLogSMSEnabled}\n          onChange={onAutoLogSMSChange}\n        />\n)}\n    >\n      {i18n.getString('autoLogSMS', currentLocale)}\n    </IconLine>\n  ) : null;\n  const header = showHeader ? (\n    <Header>\n      {i18n.getString('settings', currentLocale)}\n    </Header>\n  ) : null;\n  const userGuide = showUserGuide ? (\n    <LinkLine\n      onClick={onUserGuideClick}>\n      {i18n.getString('userGuide', currentLocale)}\n    </LinkLine>\n  ) : null;\n\n  const versionArea = versionContainer || (\n    <div className={styles.versionContainer}>\n      {i18n.getString('version', currentLocale)}\n      {' '}\n      {version}\n    </div>\n  );\n  return (\n    <div className={classnames(styles.root, className)}>\n      {header}\n      <Panel\n        className={classnames(\n          styles.content,\n          showHeader && styles.contentWithHeader,\n        )}>\n        {locale}\n        {calling}\n        {region}\n        {audio}\n        {presenceSetting}\n        {children}\n        {autoLog}\n        {autoLogNotes}\n        {autoLogSMS}\n        {clickToDial}\n        {additional}\n        {feedback}\n        {report}\n        {quickAccess}\n        {userGuide}\n        <section className={styles.section}>\n          <Line noBorder>\n            <EulaRenderer\n              className={styles.eula}\n              currentLocale={currentLocale}\n              brandId={brandId} />\n          </Line>\n        </section>\n        <section className={styles.section}>\n          <IconLine\n            noBorder\n            dataSign=\"logoutButton\"\n            onClick={onLogoutButtonClick}\n            icon={\n              <span className={classnames(styles.logoutIcon, dynamicsFont.logout)} />\n            }>\n            {i18n.getString('logout', currentLocale)}\n            <span className={styles.loginNumber}>\n              {` ${loginNumber}`}\n            </span>\n          </IconLine>\n        </section>\n        {versionArea}\n      </Panel>\n    </div>\n  );\n}\n\nSettingsPanel.propTypes = {\n  brandId: PropTypes.string.isRequired,\n  onCallingSettingsLinkClick: PropTypes.func.isRequired,\n  onAudioSettingsLinkClick: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  EulaRenderer: PropTypes.func,\n  loginNumber: PropTypes.string.isRequired,\n  onLogoutButtonClick: PropTypes.func.isRequired,\n  onRegionSettingsLinkClick: PropTypes.func.isRequired,\n  showCalling: PropTypes.bool,\n  showRegion: PropTypes.bool,\n  showAudio: PropTypes.bool,\n  showAutoLog: PropTypes.bool,\n  showAutoLogNotes: PropTypes.bool,\n  showReport: PropTypes.bool,\n  autoLogEnabled: PropTypes.bool,\n  autoLogNotesEnabled: PropTypes.bool,\n  disableAutoLogEnabled: PropTypes.bool,\n  disableAutoLogNotesEnabled: PropTypes.bool,\n  onAutoLogChange: PropTypes.func,\n  onAutoLogNotesChange: PropTypes.func,\n  showAutoLogSMS: PropTypes.bool,\n  autoLogSMSEnabled: PropTypes.bool,\n  onAutoLogSMSChange: PropTypes.func,\n  showClickToDial: PropTypes.bool,\n  clickToDialEnabled: PropTypes.bool,\n  clickToDialPermissions: PropTypes.bool,\n  onClickToDialChange: PropTypes.func,\n  version: PropTypes.string.isRequired,\n  showHeader: PropTypes.bool,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  dndStatus: PropTypes.string,\n  userStatus: PropTypes.string,\n  isCallQueueMember: PropTypes.bool,\n  setAvailable: PropTypes.func,\n  setBusy: PropTypes.func,\n  setDoNotDisturb: PropTypes.func,\n  setInvisible: PropTypes.func,\n  toggleAcceptCallQueueCalls: PropTypes.func,\n  openPresenceSettings: PropTypes.bool,\n  showPresenceSettings: PropTypes.bool,\n  showFeedback: PropTypes.bool,\n  showQuickAccess: PropTypes.bool,\n  additional: PropTypes.node,\n  supportedLocales: PropTypes.arrayOf(PropTypes.string),\n  savedLocale: PropTypes.string,\n  saveLocale: PropTypes.func,\n  onFeedbackSettingsLinkClick: PropTypes.func.isRequired,\n  onQuickAccessLinkClick: PropTypes.func,\n  onUserGuideClick: PropTypes.func.isRequired,\n  showUserGuide: PropTypes.bool,\n  clickToDialTitle: PropTypes.string,\n  versionContainer: PropTypes.node,\n  onReportLinkClick: PropTypes.func,\n};\nSettingsPanel.defaultProps = {\n  className: null,\n  EulaRenderer: Eula,\n  children: null,\n  showClickToDial: false,\n  clickToDialEnabled: false,\n  clickToDialPermissions: false,\n  onClickToDialChange: undefined,\n  showCalling: false,\n  showAudio: false,\n  showAutoLog: false,\n  showAutoLogNotes: false,\n  showRegion: false,\n  showUserGuide: false,\n  showReport: false,\n  autoLogEnabled: false,\n  autoLogNotesEnabled: false,\n  disableAutoLogEnabled: false,\n  disableAutoLogNotesEnabled: false,\n  onAutoLogChange: () => null,\n  onAutoLogNotesChange: () => null,\n  showAutoLogSMS: false,\n  autoLogSMSEnabled: false,\n  onAutoLogSMSChange: undefined,\n  showHeader: false,\n  outboundSMS: false,\n  showSpinner: false,\n  dndStatus: undefined,\n  userStatus: undefined,\n  isCallQueueMember: false,\n  setAvailable: () => null,\n  setBusy: () => null,\n  setDoNotDisturb: () => null,\n  setInvisible: () => null,\n  toggleAcceptCallQueueCalls: () => null,\n  openPresenceSettings: false,\n  showPresenceSettings: true,\n  additional: null,\n  supportedLocales: undefined,\n  savedLocale: undefined,\n  saveLocale: undefined,\n  showFeedback: true,\n  showQuickAccess: false,\n  onQuickAccessLinkClick: () => null,\n  clickToDialTitle: null,\n  versionContainer: null,\n  onReportLinkClick: () => null,\n};\n"],"file":"index.js"}