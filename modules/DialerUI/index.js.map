{"version":3,"sources":["modules/DialerUI/index.js"],"names":["DialerUI","name","deps","dep","optional","alert","audioSettings","call","callingSettings","conferenceCall","connectivityMonitor","contactSearch","locale","rateLimiter","regionSettings","webphone","options","_alert","_audioSettings","_call","_callingSettings","_conferenceCall","_connectivityMonitor","_contactSearch","_locale","_rateLimiter","_regionSettings","_webphone","_reducer","actionTypes","_callHooks","store","dispatch","type","clearToNumberField","phoneNumber","toNumberField","setToNumberField","recipient","shouldClean","setRecipient","clearRecipient","fromNumber","hook","callSuccess","callError","error","lastRecipient","lastPhoneNumber","warning","message","callErrors","noToNumber","loadLastCallState","fromSessionId","trim","length","_loadLastPhoneNumber","_onBeforeCall","closeMergingPair","currentLocale","callingMode","isWebphoneMode","callButtonDisabled","isCallButtonDisabled","fromNumbers","toNumber","searchContactList","showSpinner","dialButtonVolume","dialButtonMuted","onToNumberChange","value","clearToNumber","onCallButtonClick","changeFromNumber","updateFromNumber","formatPhone","areaCode","countryCode","searchContact","debouncedSearch","searchString","Enum","state","callingModes","connected","connecting","userMedia","isIdle","connectivity","throttling","isWebphoneDisconnected","isAudioNotEnabled","ready","isWebphoneConnecting","RcUIModule","proxify","getter","sortedResult"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBqBA,Q,WAlBpB,gBAAO;AACNC,QAAM,UADA;AAENC,QAAM,CACJ,iBADI,EAEJ,EAAEC,KAAK,eAAP,EAAwBC,UAAU,IAAlC,EAFI,EAGJ,iBAHI,EAIJ,qBAJI,EAKJ,EAAED,KAAK,eAAP,EAAwBC,UAAU,IAAlC,EALI,EAMJ,QANI,EAOJ,aAPI,EAQJ,gBARI,EASJ,EAAED,KAAK,UAAP,EAAmBC,UAAU,IAA7B,EATI,EAUJ,OAVI,EAWJ,MAXI,EAYJ,EAAED,KAAK,gBAAP,EAAyBC,UAAU,IAAnC,EAZI,EAaJ,EAAED,KAAK,iBAAP,EAA0BC,UAAU,IAApC,EAbI;AAFA,CAAP,C;;;AAmBC,0BAaG;AAAA,QAZDC,KAYC,QAZDA,KAYC;AAAA,QAXDC,aAWC,QAXDA,aAWC;AAAA,QAVDC,IAUC,QAVDA,IAUC;AAAA,QATDC,eASC,QATDA,eASC;AAAA,QARDC,cAQC,QARDA,cAQC;AAAA,QAPDC,mBAOC,QAPDA,mBAOC;AAAA,QANDC,aAMC,QANDA,aAMC;AAAA,QALDC,MAKC,QALDA,MAKC;AAAA,QAJDC,WAIC,QAJDA,WAIC;AAAA,QAHDC,cAGC,QAHDA,cAGC;AAAA,QAFDC,QAEC,QAFDA,QAEC;AAAA,QADEC,OACF;AAAA;;AAAA,qKAEIA,OAFJ;;AAAA;;AAID,UAAKC,MAAL,GAAcZ,KAAd;AACA,UAAKa,cAAL,GAAsBZ,aAAtB;AACA,UAAKa,KAAL,GAAaZ,IAAb;AACA,UAAKa,gBAAL,GAAwBZ,eAAxB;AACA,UAAKa,eAAL,GAAuBZ,cAAvB;AACA,UAAKa,oBAAL,GAA4BZ,mBAA5B;AACA,UAAKa,cAAL,GAAsBZ,aAAtB;AACA,UAAKa,OAAL,GAAeZ,MAAf;AACA,UAAKa,YAAL,GAAoBZ,WAApB;AACA,UAAKa,eAAL,GAAuBZ,cAAvB;AACA,UAAKa,SAAL,GAAiBZ,QAAjB;AACA,UAAKa,QAAL,GAAgB,0BAAW,MAAKC,WAAhB,CAAhB;AACA,UAAKC,UAAL,GAAkB,EAAlB;AAhBC;AAiBF;;;;;;;;;;AAoBC,qBAAKC,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBK;AADL,iBAApB;;;;;;;;;;;;;;;;;;;6GAMqBC,W;;;;;AACrB,oBAAI,KAAKC,aAAL,KAAuBD,WAA3B,EAAwC;AACtC,uBAAKJ,KAAL,CAAWC,QAAX,CAAoB;AAClBC,0BAAM,KAAKJ,WAAL,CAAiBQ,gBADL;AAElBF;AAFkB,mBAApB;AAID;;;;;;;;;;;;;;;;;;;6GAIgBG,S;YAAWC,W,uEAAc,I;;;;;AAC1C,qBAAKR,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBW,YADL;AAElBF;AAFkB,iBAApB;;qBAIIC,W;;;;;;uBACI,KAAKL,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;AAKR,qBAAKH,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBY;AADL,iBAApB;;;;;;;;;;;;;;;;;;;;sCAMWN,W;YAAAA,W,qCAAc,E;oCAAIG,S;YAAAA,S,mCAAY,I;qCAAMI,U;YAAAA,U,oCAAa,I;;;;;;;;sBACxDP,eAAeG,S;;;;;AACjB,qBAAKP,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBtB,IADL;AAElB4B,0CAFkB;AAGlBG;AAHkB,iBAApB;;;;;uDAKmB,KAAKR,U;;;;;;;;AAAba,oB;;uBACHA,KAAK;AACTR,0CADS;AAETG,sCAFS;AAGTI;AAHS,iBAAL,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAOA,KAAKvB,KAAL,CAAWZ,IAAX,CAAgB;AACpB4B,+BAAa,KAAKC,aADE;AAEpBE,6BAAW,KAAKA,SAFI;AAGpBI;AAHoB,iBAAhB,C;;;AAKN,qBAAKX,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBe;AADL,iBAApB;;;;;;;;AAIA,qBAAKb,KAAL,CAAWC,QAAX,CAAoB;AAClBC,wBAAM,KAAKJ,WAAL,CAAiBgB,SADL;AAElBC;AAFkB,iBAApB;;;;;;;;;;;;;;;;;;2CAQiB;AACrB,UAAI,CAAC,KAAK3B,KAAL,CAAW4B,aAAZ,IAA6B,CAAC,KAAK5B,KAAL,CAAW6B,eAA7C,EAA8D;AAC5D,aAAK/B,MAAL,CAAYgC,OAAZ,CAAoB;AAClBC,mBAASC,qBAAWC;AADF,SAApB;AAGD,OAJD,MAIO;AACL,aAAKrB,KAAL,CAAWC,QAAX,CAAoB;AAClBC,gBAAM,KAAKJ,WAAL,CAAiBwB,iBADL;AAElBlB,uBAAa,KAAKhB,KAAL,CAAW6B,eAFN;AAGlBV,qBAAW,KAAKnB,KAAL,CAAW4B;AAHJ,SAApB;AAKD;AACF;;;;;wFAGuD,E;YAA9BL,U,SAAAA,U;YAAYY,a,SAAAA,a;;;;;;sBAChC,MAAG,KAAKlB,aAAR,EAAwBmB,IAAxB,GAA+BC,MAA/B,KAA0C,CAA1C,IAA+C,CAAC,KAAKlB,S;;;;;AACvD,qBAAKmB,oBAAL;;;;;AAEA,qBAAKC,aAAL,CAAmBJ,aAAnB;;uBACM,KAAK/C,IAAL,CAAU;AACd4B,+BAAa,KAAKC,aADJ;AAEdE,6BAAW,KAAKA,SAFF;AAGdI;AAHc,iBAAV,C;;;;;;;;;;;;;;;;;;oCAQM;AACd,UAAI,KAAKrB,eAAT,EAA0B;AACxB,aAAKA,eAAL,CAAqBsC,gBAArB;AACD;AACF;;;iCAqDY;AACX,aAAO;AACLC,uBAAe,KAAKpC,OAAL,CAAaoC,aADvB;AAELC,qBAAa,KAAKzC,gBAAL,CAAsByC,WAF9B;AAGLC,wBAAgB,KAAKA,cAHhB;AAILC,4BAAoB,KAAKC,oBAJpB;AAKLtB,oBAAY,KAAKtB,gBAAL,CAAsBsB,UAL7B;AAMLuB,qBAAa,KAAK7C,gBAAL,CAAsB6C,WAN9B;AAOLC,kBAAU,KAAK9B,aAPV;AAQLE,mBAAW,KAAKA,SARX;AASL6B,2BAAmB,KAAKA,iBATnB;AAULC,qBAAa,KAAKA,WAVb;AAWLC,0BAAkB,KAAKnD,cAAL,GAAsB,KAAKA,cAAL,CAAoBmD,gBAA1C,GAA6D,CAX1E;AAYLC,yBAAiB,KAAKpD,cAAL,GAAsB,KAAKA,cAAL,CAAoBoD,eAA1C,GAA4D;AAZxE,OAAP;AAcD;;;qCACgB;AAAA;;AACf,aAAO;AACLC,0BAAkB;AAAA,iBAAS,OAAKlC,gBAAL,CAAsBmC,KAAtB,CAAT;AAAA,SADb;AAELC,uBAAe;AAAA,iBAAM,OAAKvC,kBAAL,EAAN;AAAA,SAFV;AAGLwC,2BAAmB;AAAA,iBAAM,OAAKA,iBAAL,EAAN;AAAA,SAHd;AAILC,0BAAkB;AAAA;;AAAA,iBAAa,2BAAKvD,gBAAL,EAAsBwD,gBAAtB,mCAAb;AAAA,SAJb;AAKLC,qBAAa;AAAA,iBAAe,4BAAa;AACvC1C,oCADuC;AAEvC2C,sBAAU,OAAKpD,eAAL,CAAqBoD,QAFQ;AAGvCC,yBAAa,OAAKrD,eAAL,CAAqBqD;AAHK,WAAb,CAAf;AAAA,SALR;AAULvC,sBAAc;AAAA,iBAAa,OAAKA,YAAL,CAAkBF,SAAlB,CAAb;AAAA,SAVT;AAWLG,wBAAgB;AAAA,iBAAM,OAAKA,cAAL,EAAN;AAAA,SAXX;AAYLuC,uBAAe;AAAA,iBACb,OAAKzD,cAAL,IACA,OAAKA,cAAL,CAAoB0D,eAApB,CAAoC,EAAEC,0BAAF,EAApC,CAFa;AAAA;AAZV,OAAP;AAiBD;;;wBA1MkB;AACjB,aAAO,IAAIC,cAAJ,CACL,CACE,kBADF,EAEE,oBAFF,EAGE,cAHF,EAIE,gBAJF,EAKE,mBALF,EAME,MANF,EAOE,WAPF,EAQE,aARF,CADK,EAWL,UAXK,CAAP;AAaD;;;wBAuGmB;AAClB,aAAO,KAAKC,KAAL,CAAWhD,aAAlB;AACD;;;wBAEe;AACd,aAAO,KAAKgD,KAAL,CAAW9C,SAAlB;AACD;;;wBAEoB;AACnB,aAAO,KAAKlB,gBAAL,CAAsByC,WAAtB,KAAsCwB,uBAAatE,QAA1D;AACD;;;wBAE4B;AAC3B,aAAO,KAAK+C,cAAL,IAAuB,CAAC,KAAKnC,SAAL,CAAe2D,SAA9C;AACD;;;wBAE0B;AACzB,aAAO,KAAKxB,cAAL,IAAuB,KAAKnC,SAAL,CAAe4D,UAA7C;AACD;;;wBAEuB;AACtB,aAAO,KAAKzB,cAAL,IAAuB,CAAC,KAAK5C,cAAL,CAAoBsE,SAAnD;AACD;;;wBAE0B;AACzB,aACE,CAAC,KAAKrE,KAAL,CAAWsE,MAAZ,IACA,CAAC,KAAKnE,oBAAL,CAA0BoE,YAD3B,IAEA,KAAKjE,YAAL,CAAkBkE,UAFlB,IAGA,KAAKC,sBAHL,IAIA,KAAKC,iBALP;AAOD;;;wBAEiB;AAChB,aAAO,EACL,KAAK1E,KAAL,CAAW2E,KAAX,IACA,KAAK1E,gBAAL,CAAsB0E,KADtB,IAEA,KAAKtE,OAAL,CAAasE,KAFb,IAGA,KAAKxE,oBAAL,CAA0BwE,KAH1B,KAIC,CAAC,KAAK5E,cAAN,IAAwB,KAAKA,cAAL,CAAoB4E,KAJ7C,KAKA,CAAC,KAAKC,oBAND,CAAP;AAQD;;;EAjMmCC,oB,wEAiDnCC,iB,2KAOAA,iB,qKAUAA,iB,mKAUAA,iB,2JAOAA,iB,8JA+CAA,iB,yLAiEAC,gB;;;;;WACmB,8BAClB;AAAA,aAAM,OAAK3E,cAAL,IAAuB,OAAKA,cAAL,CAAoB4E,YAAjD;AAAA,KADkB,EAElB;AAAA,aAAiBA,gBAAgB,EAAjC;AAAA,KAFkB,C;;;kBApMDnG,Q","file":"index.js","sourcesContent":["import { Module } from 'ringcentral-integration/lib/di';\nimport proxify from 'ringcentral-integration/lib/proxy/proxify';\nimport callErrors from 'ringcentral-integration/modules/Call/callErrors';\nimport Enum from 'ringcentral-integration/lib/Enum';\nimport callingModes from 'ringcentral-integration/modules/CallingSettings/callingModes';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport { createSelector } from 'reselect';\nimport getter from 'ringcentral-integration/lib/getter';\nimport RcUIModule from '../../lib/RcUIModule';\nimport getReducer from './getReducer';\n\n@Module({\n  name: 'DialerUI',\n  deps: [\n    'CallingSettings',\n    { dep: 'AudioSettings', optional: true },\n    'CallingSettings',\n    'ConnectivityMonitor',\n    { dep: 'ContactSearch', optional: true },\n    'Locale',\n    'RateLimiter',\n    'RegionSettings',\n    { dep: 'Webphone', optional: true },\n    'Alert',\n    'Call',\n    { dep: 'ConferenceCall', optional: true },\n    { dep: 'DialerUIOptions', optional: true },\n  ],\n})\nexport default class DialerUI extends RcUIModule {\n  constructor({\n    alert,\n    audioSettings,\n    call,\n    callingSettings,\n    conferenceCall,\n    connectivityMonitor,\n    contactSearch,\n    locale,\n    rateLimiter,\n    regionSettings,\n    webphone,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n    this._alert = alert;\n    this._audioSettings = audioSettings;\n    this._call = call;\n    this._callingSettings = callingSettings;\n    this._conferenceCall = conferenceCall;\n    this._connectivityMonitor = connectivityMonitor;\n    this._contactSearch = contactSearch;\n    this._locale = locale;\n    this._rateLimiter = rateLimiter;\n    this._regionSettings = regionSettings;\n    this._webphone = webphone;\n    this._reducer = getReducer(this.actionTypes);\n    this._callHooks = [];\n  }\n\n  get _actionTypes() {\n    return new Enum(\n      [\n        'setToNumberField',\n        'clearToNumberField',\n        'setRecipient',\n        'clearRecipient',\n        'loadLastCallState',\n        'call',\n        'callError',\n        'callSuccess',\n      ],\n      'dialerUI',\n    );\n  }\n\n  @proxify\n  async clearToNumberField() {\n    this.store.dispatch({\n      type: this.actionTypes.clearToNumberField,\n    });\n  }\n\n  @proxify\n  async setToNumberField(phoneNumber) {\n    if (this.toNumberField !== phoneNumber) {\n      this.store.dispatch({\n        type: this.actionTypes.setToNumberField,\n        phoneNumber,\n      });\n    }\n  }\n\n  @proxify\n  async setRecipient(recipient, shouldClean = true) {\n    this.store.dispatch({\n      type: this.actionTypes.setRecipient,\n      recipient,\n    });\n    if (shouldClean) {\n      await this.clearToNumberField();\n    }\n  }\n  @proxify\n  async clearRecipient() {\n    this.store.dispatch({\n      type: this.actionTypes.clearRecipient,\n    });\n  }\n\n  @proxify\n  async call({ phoneNumber = '', recipient = null, fromNumber = null }) {\n    if (phoneNumber || recipient) {\n      this.store.dispatch({\n        type: this.actionTypes.call,\n        phoneNumber,\n        recipient,\n      });\n      for (const hook of this._callHooks) {\n        await hook({\n          phoneNumber,\n          recipient,\n          fromNumber,\n        });\n      }\n      try {\n        await this._call.call({\n          phoneNumber: this.toNumberField,\n          recipient: this.recipient,\n          fromNumber,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.callSuccess,\n        });\n      } catch (error) {\n        this.store.dispatch({\n          type: this.actionTypes.callError,\n          error,\n        });\n      }\n    }\n  }\n\n  _loadLastPhoneNumber() {\n    if (!this._call.lastRecipient && !this._call.lastPhoneNumber) {\n      this._alert.warning({\n        message: callErrors.noToNumber,\n      });\n    } else {\n      this.store.dispatch({\n        type: this.actionTypes.loadLastCallState,\n        phoneNumber: this._call.lastPhoneNumber,\n        recipient: this._call.lastRecipient,\n      });\n    }\n  }\n\n  @proxify\n  async onCallButtonClick({ fromNumber, fromSessionId } = {}) {\n    if (`${this.toNumberField}`.trim().length === 0 && !this.recipient) {\n      this._loadLastPhoneNumber();\n    } else {\n      this._onBeforeCall(fromSessionId);\n      await this.call({\n        phoneNumber: this.toNumberField,\n        recipient: this.recipient,\n        fromNumber,\n      });\n    }\n  }\n\n  _onBeforeCall() {\n    if (this._conferenceCall) {\n      this._conferenceCall.closeMergingPair();\n    }\n  }\n\n  get toNumberField() {\n    return this.state.toNumberField;\n  }\n\n  get recipient() {\n    return this.state.recipient;\n  }\n\n  get isWebphoneMode() {\n    return this._callingSettings.callingMode === callingModes.webphone;\n  }\n\n  get isWebphoneDisconnected() {\n    return this.isWebphoneMode && !this._webphone.connected;\n  }\n\n  get isWebphoneConnecting() {\n    return this.isWebphoneMode && this._webphone.connecting;\n  }\n\n  get isAudioNotEnabled() {\n    return this.isWebphoneMode && !this._audioSettings.userMedia;\n  }\n\n  get isCallButtonDisabled() {\n    return (\n      !this._call.isIdle ||\n      !this._connectivityMonitor.connectivity ||\n      this._rateLimiter.throttling ||\n      this.isWebphoneDisconnected ||\n      this.isAudioNotEnabled\n    );\n  }\n\n  get showSpinner() {\n    return !(\n      this._call.ready &&\n      this._callingSettings.ready &&\n      this._locale.ready &&\n      this._connectivityMonitor.ready &&\n      (!this._audioSettings || this._audioSettings.ready) &&\n      !this.isWebphoneConnecting\n    );\n  }\n\n  @getter\n  searchContactList = createSelector(\n    () => this._contactSearch && this._contactSearch.sortedResult,\n    sortedResult => (sortedResult || []),\n  )\n\n  getUIProps() {\n    return {\n      currentLocale: this._locale.currentLocale,\n      callingMode: this._callingSettings.callingMode,\n      isWebphoneMode: this.isWebphoneMode,\n      callButtonDisabled: this.isCallButtonDisabled,\n      fromNumber: this._callingSettings.fromNumber,\n      fromNumbers: this._callingSettings.fromNumbers,\n      toNumber: this.toNumberField,\n      recipient: this.recipient,\n      searchContactList: this.searchContactList,\n      showSpinner: this.showSpinner,\n      dialButtonVolume: this._audioSettings ? this._audioSettings.dialButtonVolume : 1,\n      dialButtonMuted: this._audioSettings ? this._audioSettings.dialButtonMuted : false,\n    };\n  }\n  getUIFunctions() {\n    return {\n      onToNumberChange: value => this.setToNumberField(value),\n      clearToNumber: () => this.clearToNumberField(),\n      onCallButtonClick: () => this.onCallButtonClick(),\n      changeFromNumber: (...args) => this._callingSettings.updateFromNumber(...args),\n      formatPhone: phoneNumber => formatNumber({\n        phoneNumber,\n        areaCode: this._regionSettings.areaCode,\n        countryCode: this._regionSettings.countryCode,\n      }),\n      setRecipient: recipient => this.setRecipient(recipient),\n      clearRecipient: () => this.clearRecipient(),\n      searchContact: searchString => (\n        this._contactSearch &&\n        this._contactSearch.debouncedSearch({ searchString })\n      ),\n    };\n  }\n}\n"]}