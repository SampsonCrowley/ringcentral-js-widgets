{"version":3,"sources":["lib/toWildcard/index.js"],"names":["removeCountryCode","phoneNumber","countryCallingCode","country","substr","length","toWildcard","wildcard","numberWithWildcard","replace","split","join"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,SAASA,iBAAT,CAA2BC,WAA3B,EAAwC;AACtC,MAAI,qCAAcA,WAAd,CAAJ,EAAgC;AAC9B,QAAMC,kBAAkB,GAAG,6CACzB,6BAAMD,WAAN,EAAmBE,OADM,CAA3B;AAGA,WAAOF,WAAW,CAACG,MAAZ,CAAmBF,kBAAkB,CAACG,MAAnB,GAA4B,CAA/C,CAAP;AACD;;AACD,SAAOJ,WAAP;AACD;;AAEc,SAASK,UAAT,OAAqD;AAAA,MAA/BL,WAA+B,QAA/BA,WAA+B;AAAA,2BAAlBM,QAAkB;AAAA,MAAlBA,QAAkB,8BAAP,GAAO;;AAClE,MAAI,CAACN,WAAD,IAAgBA,WAAW,CAACI,MAAZ,IAAsB,CAA1C,EAA6C;AAC3C,WAAOJ,WAAP;AACD;;AACD,MAAMO,kBAAkB,GAAGR,iBAAiB,CAACC,WAAD,CAAjB,CACxBQ,OADwB,CAChB,QADgB,EACN,EADM,EAExBC,KAFwB,CAElB,EAFkB,EAGxBC,IAHwB,CAGnBJ,QAHmB,CAA3B;AAIA,mBAAUA,QAAV,SAAqBC,kBAArB,SAA0CD,QAA1C;AACD","sourcesContent":["import { isValidNumber, getCountryCallingCode, parse } from 'libphonenumber-js';\n\nfunction removeCountryCode(phoneNumber) {\n  if (isValidNumber(phoneNumber)) {\n    const countryCallingCode = getCountryCallingCode(\n      parse(phoneNumber).country,\n    );\n    return phoneNumber.substr(countryCallingCode.length + 1);\n  }\n  return phoneNumber;\n}\n\nexport default function toWildcard({ phoneNumber, wildcard = '%' }) {\n  if (!phoneNumber || phoneNumber.length <= 6) {\n    return phoneNumber;\n  }\n  const numberWithWildcard = removeCountryCode(phoneNumber)\n    .replace(/[^\\d]/g, '')\n    .split('')\n    .join(wildcard);\n  return `${wildcard}${numberWithWildcard}${wildcard}`;\n}\n"],"file":"index.js"}