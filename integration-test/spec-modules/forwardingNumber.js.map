{"version":3,"sources":["integration-test/spec-modules/forwardingNumber.js"],"names":["authzProfileBody","require","auth","client","forwardingNumber","account","describe","timeout","mock","mockClient","isLoginSuccess","before","restore","mockForLogin","console","error","skip","after","logout","it","retries","expect","numbers","length","equal","flipNumbers","forwardingNumbers","mockAuthzProfile","authzProfile","permissions","filter","p","permission","id","mockForwardingNumber","mockForbidden","url"],"mappings":"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","sourcesContent":["import { ensureLogin } from '../utils/HelpUtil';\nimport { waitInSeconds } from '../utils/WaitUtil';\nimport ClientHistoryRequest from '../utils/ClientHistoryRequest';\nimport * as mock from '../mock';\n\nconst authzProfileBody = require('../mock/data/authzProfile');\n\nexport default (auth, client, forwardingNumber, account) => {\n  describe('ForwardingNumber:', function () {\n    this.timeout(20000);\n    mock.mockClient(client);\n\n    let isLoginSuccess;\n    // const clientHistoryRequest = new ClientHistoryRequest(new Map(), client);\n\n    describe('When has ReadUserForwardingFlipNumbers permission', function () {\n      before(async function () {\n        mock.restore();\n        mock.mockForLogin();\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error('Skip test case as failed to login with credential ', account);\n          this.skip();\n        }\n      });\n\n      after(async function () {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.numbers.length).equal(2);\n      });\n\n      it('Should get flip numbers correctly', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.flipNumbers.length).equal(2);\n      });\n\n      it('Should get forwarding numbers correctly', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.forwardingNumbers.length).equal(1);\n      });\n    });\n\n    describe(\"When doesn't have ReadUserForwardingFlipNumbers permission\", function () {\n      before(async function () {\n        mock.restore();\n        mock.mockForLogin({ mockAuthzProfile: false });\n        mock.authzProfile({\n          permissions: authzProfileBody.permissions.filter(p => p.permission.id !== 'ReadUserForwardingFlipNumbers')\n        });\n        isLoginSuccess = await ensureLogin(auth, account);\n        if (!isLoginSuccess) {\n          console.error('Skip test case as failed to login with credential ', account);\n          this.skip();\n        }\n      });\n\n      after(async function () {\n        await auth.logout();\n        await waitInSeconds(1);\n      });\n\n      it('Should not load numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.numbers.length).equal(0);\n      });\n\n      it('Should not load flip numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.flipNumbers.length).equal(0);\n      });\n\n      it('Should not load forwarding numbers', async () => {\n        this.retries(2);\n        await waitInSeconds(1);\n        expect(forwardingNumber.forwardingNumbers.length).equal(0);\n      });\n    });\n\n    it('Should show insufficientPrivilege when get 403', async () => {\n      mock.restore();\n      mock.mockForLogin({ mockForwardingNumber: false });\n      mock.mockForbidden({ url: 'begin:http://whatever/restapi/v1.0/account/~/extension/~/forwarding-number' });\n      isLoginSuccess = await ensureLogin(auth, account);\n      if (!isLoginSuccess) {\n        console.error('Skip test case as failed to login with credential ', account);\n        this.skip();\n      }\n      await waitInSeconds(1);\n      expect(forwardingNumber.numbers.length).equal(0);\n      await auth.logout();\n      await waitInSeconds(1);\n    });\n  });\n};\n"],"file":"forwardingNumber.js"}