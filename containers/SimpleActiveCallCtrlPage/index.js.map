{"version":3,"sources":["containers/SimpleActiveCallCtrlPage/index.js"],"names":["mapToProps","_","phone","activeCallControl","regionSettings","callMonitor","locale","brand","activeSession","renderContactName","sessionId","id","nameMatches","direction","callDirections","outbound","toMatches","fromMatches","phoneNumber","to","from","fallBackName","i18n","getString","currentLocale","fallBackNameFromThirdParty","fallBackNumber","session","areaCode","countryCode","otherDeviceCalls","fullName","mapToFunctions","routerInteraction","onBackButtonClick","goBack","ActiveCallControl","props","state","selectedMatcherIndex","onMute","mute","onUnmute","unmute","onHold","hold","onUnhold","unHold","onHangup","hangUp","onTransfer","number","transfer","formatPhone","onSelectMatcherName","option","findIndex","match","setState","nextProps","muteCtrl","ACTIONS_CTRL_MAP","transferCtrl","holdCtrl","callCtrlLayouts","normalCtrl","startTime","isOnMute","isOnHold","showContactDisplayPlaceholder","Component","propTypes","PropTypes","string","isRequired","object","func","array","bool","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @file simplify active call control page\n * detail: https://jira.ringcentral.com/browse/RCINT-8256\n */\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\n\nimport withPhone from '../../lib/withPhone';\n\nimport CallCtrlPanel from '../../components/CallCtrlPanel';\nimport callCtrlLayouts from '../../enums/callCtrlLayouts';\nimport { ACTIONS_CTRL_MAP } from '../../components/ActiveCallPad';\nimport i18n from './i18n';\nimport { pickFallBackInfo } from './utils';\n\nfunction mapToProps(_, {\n  phone: {\n    activeCallControl,\n    regionSettings,\n    callMonitor,\n    locale,\n    brand,\n  },\n  activeSession,\n  renderContactName,\n}) {\n  const sessionId = activeSession.id;\n  let nameMatches = [];\n  if (activeSession && !renderContactName) {\n    nameMatches =\n      activeSession.direction === callDirections.outbound ?\n        activeSession.toMatches : activeSession.fromMatches;\n  }\n  let phoneNumber;\n  if (activeSession) {\n    phoneNumber = activeSession.direction === callDirections.outbound ?\n      activeSession.to : activeSession.from;\n  }\n  let fallBackName = i18n.getString('Unknown', locale.currentLocale);\n  if (renderContactName) {\n    const { fallBackName: fallBackNameFromThirdParty, fallBackNumber } = pickFallBackInfo(\n      activeSession,\n      renderContactName(sessionId),\n      locale.currentLocale\n    );\n    phoneNumber = fallBackNumber;\n    fallBackName = fallBackNameFromThirdParty;\n  }\n  return {\n    currentLocale: locale.currentLocale,\n    session: activeSession,\n    sessionId,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n    otherDeviceCalls: callMonitor.otherDeviceCalls,\n    nameMatches,\n    phoneNumber,\n    fallBackName,\n    brand: brand.fullName,\n    activeCallControl,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    routerInteraction,\n  },\n}) {\n  return {\n    onBackButtonClick: () => routerInteraction.goBack(),\n  };\n}\n\nclass ActiveCallControl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMatcherIndex: 0,\n    };\n\n    this.onMute = () => this.props.activeCallControl.mute(this.props.sessionId);\n    this.onUnmute = () => this.props.activeCallControl.unmute(this.props.sessionId);\n    this.onHold = () => this.props.activeCallControl.hold(this.props.sessionId);\n    this.onUnhold = () => this.props.activeCallControl.unHold(this.props.sessionId);\n    this.onHangup = () => this.props.activeCallControl.hangUp(this.props.sessionId);\n    this.onTransfer = async number =>\n      this.props.activeCallControl.transfer(number, this.props.sessionId);\n\n    this.formatPhone = phoneNumber => formatNumber({\n      phoneNumber,\n      areaCode: this.props.areaCode,\n      countryCode: this.props.countryCode,\n    });\n\n    this.onSelectMatcherName = (option) => {\n      const nameMatches = this.props.nameMatches || [];\n      let selectedMatcherIndex = nameMatches.findIndex(\n        match => match.id === option.id\n      );\n      if (selectedMatcherIndex < 0) {\n        selectedMatcherIndex = 0;\n      }\n      this.setState({\n        selectedMatcherIndex,\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.session) {\n      this.props.onBackButtonClick();\n    }\n  }\n\n  render() {\n    if (!this.props.session) {\n      return null;\n    }\n    const { muteCtrl, transferCtrl, holdCtrl } = ACTIONS_CTRL_MAP;\n\n    return (\n      <CallCtrlPanel\n        currentLocale={this.props.currentLocale}\n        fallBackName={this.props.fallBackName}\n        phoneNumber={this.props.phoneNumber}\n        onMute={this.onMute}\n        onUnmute={this.onUnmute}\n        onHold={this.onHold}\n        onUnhold={this.onUnhold}\n        onHangup={this.onHangup}\n        onTransfer={this.onTransfer}\n        showBackButton\n        backButtonLabel={i18n.getString('allCalls', this.props.currentLocale)}\n        onBackButtonClick={this.props.onBackButtonClick}\n        formatPhone={this.formatPhone}\n        areaCode={this.props.areaCode}\n        countryCode={this.props.countryCode}\n        selectedMatcherIndex={this.state.selectedMatcherIndex}\n        layout={callCtrlLayouts.normalCtrl}\n        startTime={this.props.session.startTime}\n        actions={[muteCtrl, transferCtrl, holdCtrl]}\n        isOnMute={this.props.session.isOnMute}\n        isOnHold={this.props.session.isOnHold}\n        nameMatches={this.props.nameMatches}\n        onSelectMatcherName={this.onSelectMatcherName}\n        brand={this.props.brand}\n        showContactDisplayPlaceholder={this.props.showContactDisplayPlaceholder}\n      />\n    );\n  }\n}\n\nActiveCallControl.propTypes = {\n  currentLocale: PropTypes.string,\n  sessionId: PropTypes.string,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  session: PropTypes.object,\n  onBackButtonClick: PropTypes.func.isRequired,\n  activeCallControl: PropTypes.object,\n  nameMatches: PropTypes.array,\n  fallBackName: PropTypes.string,\n  phoneNumber: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  brand: PropTypes.string.isRequired,\n};\n\nActiveCallControl.defaultProps = {\n  currentLocale: 'en-US',\n  activeCallControl: {},\n  session: null,\n  sessionId: null,\n  nameMatches: [],\n  fallBackName: '',\n  phoneNumber: '',\n  showContactDisplayPlaceholder: false,\n};\n\nexport default withPhone(connect(mapToProps, mapToFunctions)(ActiveCallControl));\n"]}