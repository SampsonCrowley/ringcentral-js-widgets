{"version":3,"sources":["components/ExtensionCalendarInjection/DropAdditionalValues/index.js"],"names":["DropAdditionalValues","dialInNumbers","selected","onChange","withCheckbox","length","styles","dropAdditionalValues","map","item","checked","indexOf","phoneNumber","selectChange","newSelection","forEach","curNum","push","concat","region","regionCkb","formattedPhoneNumber","selectedItemWrapper","regionText","propTypes","PropTypes","array","isRequired","func","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,oBAAT,OAEG;AAAA,MADDC,aACC,QADDA,aACC;AAAA,MADcC,QACd,QADcA,QACd;AAAA,MADwBC,QACxB,QADwBA,QACxB;AAAA,MADkCC,YAClC,QADkCA,YAClC;;AACD,MAAIH,aAAa,CAACI,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,WAAO,EAAP;AACD;;AACD,SACE;AAAI,IAAA,SAAS,EAAEC,mBAAOC;AAAtB,KACGN,aAAa,CAACO,GAAd,CAAkB,UAACC,IAAD,EAAU;AAC3B,QAAMC,OAAO,GAAGR,QAAQ,CAACS,OAAT,CAAiBF,IAAI,CAACG,WAAtB,IAAqC,CAAC,CAAtD;;AAEA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAIJ,OAAJ,EAAa;AACXR,QAAAA,QAAQ,CAACa,OAAT,CAAiB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,KAAKP,IAAI,CAACG,WAAhB,IAA+BE,YAAY,CAACG,IAAb,CAAkBD,MAAlB,CAAnC;AAAA,SAAvB;AACD,OAFD,MAEO;AACLF,QAAAA,YAAY,GAAGZ,QAAQ,CAACgB,MAAT,CAAgBT,IAAI,CAACG,WAArB,CAAf;AACD;;AACDT,MAAAA,QAAQ,CAACW,YAAD,CAAR;AACD,KARD;;AAUA,QAAIV,YAAJ,EAAkB;AAChB,aACE;AACE,QAAA,GAAG,EAAEK,IAAI,CAACG,WADZ;AAEE,QAAA,KAAK,EAAEH,IAAI,CAACU,MAFd;AAGE,QAAA,OAAO,EAAEN;AAHX,SAKE,gCAAC,oBAAD;AACE,QAAA,SAAS,EAAEP,mBAAOc,SADpB;AAEE,QAAA,OAAO,EAAEV,OAFX;AAGE,QAAA,KAAK,EAAED,IAAI,CAACU,MAHd;AAIE,QAAA,IAAI,EAAC;AAJP,QALF,EAWE;AAAK,QAAA,SAAS,EAAEb,mBAAOM;AAAvB,SACGH,IAAI,CAACY,oBADR,CAXF,CADF;AAiBD;;AAED,WACE;AAAI,MAAA,GAAG,EAAEZ,IAAI,CAACG,WAAd;AAA2B,MAAA,KAAK,EAAEH,IAAI,CAACU,MAAvC;AAA+C,MAAA,SAAS,EAAEb,mBAAOgB;AAAjE,OACE;AAAK,MAAA,SAAS,EAAEhB,mBAAOiB;AAAvB,OAAoCd,IAAI,CAACU,MAAzC,CADF,EAEE;AAAK,MAAA,SAAS,EAAEb,mBAAOM;AAAvB,OAAqCH,IAAI,CAACY,oBAA1C,CAFF,EAGE,gCAAC,uBAAD;AAAa,MAAA,OAAO,EAAER;AAAtB,MAHF,CADF;AAOD,GAxCA,CADH,CADF;AA6CD;;AAEDb,oBAAoB,CAACwB,SAArB,GAAiC;AAC/BvB,EAAAA,aAAa,EAAEwB,sBAAUC,KAAV,CAAgBC,UADA;AAE/BzB,EAAAA,QAAQ,EAAEuB,sBAAUC,KAAV,CAAgBC,UAFK;AAG/BxB,EAAAA,QAAQ,EAAEsB,sBAAUG,IAAV,CAAeD,UAHM;AAI/BvB,EAAAA,YAAY,EAAEqB,sBAAUI;AAJO,CAAjC;AAOA7B,oBAAoB,CAAC8B,YAArB,GAAoC;AAClC1B,EAAAA,YAAY,EAAE;AADoB,CAApC;eAIeJ,oB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\nimport CloseButton from '../CloseButton';\nimport Checkbox from '../Checkbox';\n\nfunction DropAdditionalValues({\n  dialInNumbers, selected, onChange, withCheckbox\n}) {\n  if (dialInNumbers.length === 0) {\n    return '';\n  }\n  return (\n    <ul className={styles.dropAdditionalValues}>\n      {dialInNumbers.map((item) => {\n        const checked = selected.indexOf(item.phoneNumber) > -1;\n\n        const selectChange = () => {\n          let newSelection = [];\n          if (checked) {\n            selected.forEach(curNum => curNum !== item.phoneNumber && newSelection.push(curNum));\n          } else {\n            newSelection = selected.concat(item.phoneNumber);\n          }\n          onChange(newSelection);\n        };\n\n        if (withCheckbox) {\n          return (\n            <li\n              key={item.phoneNumber}\n              title={item.region}\n              onClick={selectChange}\n              >\n              <Checkbox\n                className={styles.regionCkb}\n                checked={checked}\n                label={item.region}\n                size=\"xsmall\"\n              />\n              <div className={styles.phoneNumber}>\n                {item.formattedPhoneNumber}\n              </div>\n            </li>\n          );\n        }\n\n        return (\n          <li key={item.phoneNumber} title={item.region} className={styles.selectedItemWrapper}>\n            <div className={styles.regionText}>{item.region}</div>\n            <div className={styles.phoneNumber}>{item.formattedPhoneNumber}</div>\n            <CloseButton onClick={selectChange} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nDropAdditionalValues.propTypes = {\n  dialInNumbers: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  withCheckbox: PropTypes.bool\n};\n\nDropAdditionalValues.defaultProps = {\n  withCheckbox: false\n};\n\nexport default DropAdditionalValues;\n"],"file":"index.js"}