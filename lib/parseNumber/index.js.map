{"version":3,"sources":["lib/parseNumber/index.js"],"names":["parseNumber","phoneNumber","countryCode","areaCode","input","hasPlus","number","isServiceNumber","extension","hasInvalidChars"],"mappings":";;;;;;;;;AAAA;;AAEe,SAASA,WAAT,OAIZ;AAAA,MAHDC,WAGC,QAHDA,WAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,QACC,QADDA,QACC;;AAAA,eAOG,wBAAM;AACRC,IAAAA,KAAK,EAAEH,WADC;AAERC,IAAAA,WAAW,EAAXA,WAFQ;AAGRC,IAAAA,QAAQ,EAARA;AAHQ,GAAN,CAPH;AAAA,MAECE,OAFD,UAECA,OAFD;AAAA,MAGcC,MAHd,UAGCL,WAHD;AAAA,MAICM,eAJD,UAICA,eAJD;AAAA,MAKCC,SALD,UAKCA,SALD;AAAA,MAMCC,eAND,UAMCA,eAND;;AAYD,SAAO;AACLJ,IAAAA,OAAO,EAAPA,OADK;AAELC,IAAAA,MAAM,EAANA,MAFK;AAGLE,IAAAA,SAAS,EAATA,SAHK;AAILD,IAAAA,eAAe,EAAfA,eAJK;AAKLE,IAAAA,eAAe,EAAfA;AALK,GAAP;AAOD","sourcesContent":["import { parse } from '@ringcentral-integration/phone-number';\n\nexport default function parseNumber({\n  phoneNumber,\n  countryCode,\n  areaCode,\n}) {\n  const {\n    hasPlus,\n    phoneNumber: number,\n    isServiceNumber,\n    extension,\n    hasInvalidChars,\n  } = parse({\n    input: phoneNumber,\n    countryCode,\n    areaCode,\n  });\n  return {\n    hasPlus,\n    number,\n    extension,\n    isServiceNumber,\n    hasInvalidChars,\n  };\n}\n"],"file":"index.js"}