{"version":3,"sources":["modules/AccountDirectory/index.js"],"names":["contactsRegExp","DEFAULT_TTL","DEFAULT_CHECK_STATUS","DEFAULT_TYPE_LIST","extensionTypes","digitalUser","user","department","AccountDirectory","deps","dep","optional","client","rolesAndPermissions","ttl","checkStatus","typeList","showNotActivated","options","name","actionTypes","getDataReducer","getTimestampReducer","subscriptionFilters","accountDirectory","subscriptionHandler","message","_subscriptionHandleFn","fetchFunction","params","fetchRet","_client","account","directory","contacts","list","ext","_extensionFilter","filter","readyCheckFn","_rolesAndPermissions","ready","_checkStatus","_typeList","ensureExist","_showNotActivated","test","event","body","item","_processExtension","id","eventType","_deleteExtension","_fetchExtensionData","extensionData","_addOrDeleteExtension","extensionId","essential","alreadyExists","isAvailableExtension","extensionNumber","_addExtension","_updateExtension","data","store","dispatch","type","add","timestamp","Date","now","delete","update","get","availableExtensions","permissions","ReadExtensions","DataFetcher","proxify","selector"],"mappings":"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","sourcesContent":["import { find } from 'ramda';\nimport { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport fetchList from '../../lib/fetchList';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n\nimport actionTypes from './actionTypes';\nimport {\n  getDataReducer,\n  getTimestampReducer,\n} from './getAccountDirectoryReducer';\nimport {\n  isEnabled,\n  isNotActivated,\n  isFiltered,\n  hasExtensionNumber,\n} from './accountDirectoryHelper';\nimport subscriptionFilters from '../../enums/subscriptionFilters';\nimport proxify from '../../lib/proxy/proxify';\nimport extensionTypes from '../../enums/extensionTypes';\n\nconst contactsRegExp = /.*\\/contacts$/;\n\nconst DEFAULT_TTL = 24 * 60 * 60 * 1000;\nconst DEFAULT_CHECK_STATUS = true;\n\n// Consider enable all extension types and filter through selector if\n// we'll allow users to configure this through settings\nconst DEFAULT_TYPE_LIST = [\n  extensionTypes.digitalUser,\n  extensionTypes.user,\n  extensionTypes.department,\n  // extensionTypes.limited,\n  // extensionTypes.announcement,\n  // extensionTypes.applicationExtension,\n  // extensionTypes.bot,\n  // extensionTypes.faxUser,\n  // extensionTypes.ivrMenu,\n  // extensionTypes.pagingOnly,\n  // extensionTypes.parkLocation,\n  // extensionTypes.sharedLinesGroup,\n];\n\n/**\n * @class\n * @description Accound extension list managing module\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    { dep: 'AccountDirectoryOptions', optional: true }\n  ]\n})\nexport default class AccountDirectory extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   * @param {Number} params.ttl - local cache timestamp, default 24 hours\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    ttl = DEFAULT_TTL,\n    checkStatus = DEFAULT_CHECK_STATUS,\n    typeList = DEFAULT_TYPE_LIST,\n    showNotActivated = false,\n    ...options\n  }) {\n    super({\n      ...options,\n      name: 'AccountDirectory',\n      client,\n      ttl,\n      actionTypes,\n      getDataReducer,\n      getTimestampReducer,\n      subscriptionFilters: [subscriptionFilters.accountDirectory],\n      subscriptionHandler: async (message) => {\n        this._subscriptionHandleFn(message);\n      },\n      fetchFunction: async () => (await fetchList((params) => {\n        const fetchRet = this._client.account().directory().contacts().list(params);\n        return fetchRet;\n      })).filter(ext => this._extensionFilter(ext)),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n    });\n\n    this._checkStatus = checkStatus;\n    this._typeList = typeList;\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._showNotActivated = showNotActivated;\n  }\n\n  _extensionFilter(ext) {\n    return (\n      hasExtensionNumber(ext) &&\n      (!this._checkStatus || isEnabled(ext) || (this._showNotActivated && isNotActivated(ext))) &&\n      !isFiltered(ext, this._typeList)\n    );\n  }\n\n  async _subscriptionHandleFn(message) {\n    if ( // for new\n      message &&\n      contactsRegExp.test(message.event) &&\n      message.body &&\n      message.body.contacts\n    ) {\n      for (const item of message.body.contacts) {\n        await this._processExtension(item);\n      }\n    }\n  }\n\n  async _processExtension(item) {\n    const { id, eventType } = item;\n    if (eventType === 'Delete') {\n      this._deleteExtension(id);\n    } else if (eventType === 'Create' || eventType === 'Update') {\n      try {\n        const extensionData = await this._fetchExtensionData(id);\n        this._addOrDeleteExtension(extensionData, id);\n      } catch (error) {\n        /* falls through */\n      }\n    } else {\n      // console.warn('unexpect notification eventType:', eventType);\n    }\n  }\n\n  _addOrDeleteExtension(extensionData, extensionId) {\n    const essential = this._extensionFilter(extensionData);\n    const alreadyExists = this.isAvailableExtension(extensionData.extensionNumber);\n    if (essential && !alreadyExists) {\n      this._addExtension(extensionData);\n    } else if (!essential && alreadyExists) {\n      this._deleteExtension(extensionId);\n    } else if (essential && alreadyExists) {\n      this._updateExtension(extensionId, extensionData);\n    }\n  }\n\n  _addExtension(data) {\n    this.store.dispatch({\n      type: this.actionTypes.add,\n      data,\n      timestamp: Date.now(),\n    });\n  }\n\n  _deleteExtension(id) {\n    this.store.dispatch({\n      type: this.actionTypes.delete,\n      id,\n      timestamp: Date.now(),\n    });\n  }\n\n  _updateExtension(id, data) {\n    this.store.dispatch({\n      type: this.actionTypes.update,\n      id,\n      data,\n      timestamp: Date.now(),\n    });\n  }\n\n  @proxify\n  async _fetchExtensionData(id) {\n    return this._client.account().directory().contacts(id).get();\n  }\n\n  @selector\n  availableExtensions = [\n    () => this.data,\n    data => data || [],\n  ]\n\n  isAvailableExtension(extensionNumber) {\n    return !!find(item => item.extensionNumber === extensionNumber, this.availableExtensions);\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadExtensions;\n  }\n}\n"],"file":"index.js"}