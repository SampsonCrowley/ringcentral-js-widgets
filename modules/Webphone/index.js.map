{"version":3,"sources":["modules/Webphone/index.js"],"names":["AUTO_RETRIES_DELAY","RETRY_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","Enum","EVENTS","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","provisionUpdate","serverConnecting","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onCallHold","onCallInit","onBeforeCallResume","onBeforeCallEnd","regionSettings","brand","webphoneSDKOptions","permissionCheck","availabilityMonitor","options","actionTypes","_regionSettings","_brand","_eventEmitter","EventEmitter","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_availabilityMonitor","_contactMatcher","_tabManager","_webphoneSDKOptions","_permissionCheck","_reconnectDelays","on","callEnd","callRing","callStart","callResume","callHold","callInit","beforeCallResume","_onBeforeCallEndFunctions","beforeCallEnd","_webphone","_remoteVideo","_localVideo","_sessions","Map","_reducer","_reconnectAfterSessionEnd","_connectTimeout","addSelector","sessions","outputs","forEach","session","push","to","from","ringSessionId","ringSession","id","cached","activeSessionId","activeSession","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","stop","isRegistered","unregister","removeAllListeners","isConnected","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","loadAudio","incoming","incomingAudio","outgoing","outgoingAudio","connected","registered","info","message","_hideRegisterErrorAlert","e","console","log","disconnecting","unregistered","connectError","cause","error","data","isSipErrorCode","disconnected","errorCode","statusCode","status_code","_onConnectError","_onInvite","warning","allowDuplicates","_connect","skipTimeout","force","reason","reconnect","setRetryCounts","retryCounts","ttl","connecting","active","connect","clearTimeout","connectFunc","_sipProvision","sipProvision","connectRetryCounts","indexOf","refreshServiceFeatures","_createWebphone","setTimeout","_getConnectTimeoutTtl","connectionStatus","browserNotSupported","_fetchDL","noOutboundCallWithoutDL","checkDLError","reconnecting","danger","payload","_hideConnectingAlert","isConnecting","_hideConnectFailedAlert","alertIds","messages","filter","m","i","len","map","dismiss","hangup","_updateSessions","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_onCallStart","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","sessionDescriptionHandler","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","sessionId","sipSession","get","find","_holdOtherSession","accept","acceptOptions","callAnswer","code","reject","unhold","forwardNumber","validatedResult","validPhoneNumber","validateNumbers","result","errors","callErrors","phoneNumber","numbers","e164","__rc_isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","onHold","_onCallHold","holdError","currentSessionId","Promise","all","Array","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","ua","invite","sessionDescriptionHandlerOptions","once","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","extendedControls","isVoIPOnlyMode","outbound","__rc_fromNumber","_onCallInit","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","normalizeSession","updateSessions","set","__rc_minimized","normalizedSession","x","triggerMatch","emit","playIncoming","_removeSession","_reconnectWebphoneIfNecessaryOnSessionsEmpty","handler","state","status","moduleStatuses","ringSessions","onHoldSessions","lastEndedSessions","cachedSessions","webphoneEnabled","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","userMedia","RcModule","proxify","selector","minimized"],"mappings":"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","sourcesContent":["import { find, filter } from 'ramda';\nimport EventEmitter from 'events';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport validateNumbers from '../../lib/validateNumbers';\nimport Enum from '../../lib/Enum';\n\nimport {\n  isBrowserSupport,\n  isChrome,\n  isFirefox,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst RETRY_DELAY = 5 * 1000;\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = new Enum([\n  'pending',\n  'playing',\n  'stopped',\n]);\n\nconst EVENTS = new Enum([\n  'callRing',\n  'callStart',\n  'callEnd',\n  'callHold',\n  'callResume',\n  'beforeCallResume',\n  'beforeCallEnd',\n  'callInit',\n]);\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n  webphoneErrors.provisionUpdate,\n  webphoneErrors.serverConnecting,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brand} params.brand - app brand\n   * @param {RegionSettings} params.regionSettings - regionSettings\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call accpeted by callee\n   * @param {Function} params.onCallInit - callback on create a new call\n   * @param {Function} params.onCallResume - callback on a call resume\n   * @param {Function} params.onCallHold - callback on a call holded\n   * @param {Function} params.onBeforeCallResume - callback before a call resume\n   * @param {Function} params.onBeforeCallEnd - callback before a call hangup\n   * @param {Object} params.webphoneSDKOptions - callback before a call hangup\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onCallHold,\n    onCallInit,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    regionSettings,\n    brand,\n    webphoneSDKOptions,\n    permissionCheck = true,\n    availabilityMonitor,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._regionSettings = regionSettings;\n    this._brand = brand;\n    this._eventEmitter = new EventEmitter();\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this:: ensureExist(auth, 'auth');\n    this._client = this:: ensureExist(client, 'client');\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._numberValidate = this:: ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this:: ensureExist(audioSettings, 'audioSettings');\n    this._availabilityMonitor = availabilityMonitor;\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._webphoneSDKOptions = webphoneSDKOptions || {};\n\n    this._permissionCheck = permissionCheck;\n    this._reconnectDelays = AUTO_RETRIES_DELAY;\n\n    if (typeof onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, onCallEnd);\n    }\n    if (typeof onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, onCallRing);\n    }\n    if (typeof onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, onCallStart);\n    }\n    if (typeof onCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, onCallResume);\n    }\n    if (typeof onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, onCallHold);\n    }\n    if (typeof onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, onCallInit);\n    }\n    if (typeof onBeforeCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n    this._reconnectAfterSessionEnd = null;\n    this._connectTimeout = null;\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = find(\n          session => session.id === ringSessionId,\n          sessions\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('cachedSessions',\n      () => this.sessions,\n      sessions => filter(session => session.cached, sessions)\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = find(\n          session => session.id === activeSessionId,\n          sessions\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => filter(session => isRing(session), sessions)\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => filter(session => isOnHold(session), sessions)\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      if (this._remoteVideo.setSinkId && this._audioSettings.outputDeviceId) {\n        this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n      }\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo &&\n        this._remoteVideo.setSinkId\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    if (this._webphone.userAgent.isRegistered()) {\n      this._webphone.userAgent.unregister();\n    }\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone.userAgent.transport.removeAllListeners();\n    if (this._webphone.userAgent.transport.isConnected()) {\n      this._webphone.userAgent.transport.disconnect();\n    }\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isFirefox(),\n      ...this._webphoneSDKOptions\n    });\n    this._webphone.userAgent.audioHelper.loadAudio({\n      incoming: incomingAudio, // path to audio file for incoming call\n      outgoing: outgoingAudio, // path to aduotfile for outgoing call\n    });\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    // Webphone userAgent registed event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n        this._hideRegisterErrorAlert();\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      if (this.disconnecting) {\n        // user unregister\n        this.store.dispatch({\n          type: this.actionTypes.unregistered,\n        });\n        return;\n      }\n      // unavailable\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if ((!response) && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message && typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response ? (response.statusCode || response.status_code) : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (this.sessions.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.provisionUpdate,\n          allowDuplicates: false,\n        });\n        this._connect({ skipTimeout: true, force: true });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: webphoneErrors.provisionUpdate\n      };\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this._alert.warning({\n          message: webphoneErrors.serverConnecting,\n          allowDuplicates: false,\n        });\n        this.store.dispatch({\n          type: this.actionTypes.reconnect,\n        });\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this.store.dispatch({\n        type: this.actionTypes.setRetryCounts,\n        retryCounts: 20,\n      });\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    this._webphone.userAgent.transport.on('transportError', () => {\n      console.log('WebSocket transportError occured');\n    });\n    this._webphone.userAgent.transport.on('wsConnectionError', () => {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (this.sessions.length === 0) {\n        this._connect({ skipTimeout: true, force: true });\n        return;\n      }\n      this._reconnectAfterSessionEnd = {\n        reason: null,\n      };\n    });\n  }\n\n  @proxify\n  async _connect({ skipTimeout = false, force = false } = {}) {\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    // do not connect when connected\n    if (!force && (this.connecting || this.disconnecting || this.connected)) {\n      return;\n    }\n\n    if (this._tabManager && !this._tabManager.active) {\n      // wait until page become active\n      await sleep(RETRY_DELAY);\n      await this._connect({ skipTimeout, force });\n      return;\n    }\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    this.store.dispatch({\n      type: (this.connectError || force) ? this.actionTypes.reconnect : this.actionTypes.connect,\n    });\n\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    const connectFunc = async () => {\n      if (!this._auth.loggedIn) {\n        return;\n      }\n      let sipProvision;\n      try {\n        sipProvision = await this._sipProvision();\n      } catch (error) {\n        console.error(error, this.connectRetryCounts);\n        if (\n          error && error.message &&\n          (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n        ) {\n          this._rolesAndPermissions.refreshServiceFeatures();\n          return;\n        }\n        this._onConnectError({\n          errorCode: webphoneErrors.sipProvisionError,\n          statusCode: null,\n          ttl: 0\n        });\n        return;\n      }\n      this._createWebphone(sipProvision);\n    };\n    if (skipTimeout) {\n      await connectFunc();\n    } else {\n      this._connectTimeout = setTimeout(() => {\n        this._connectTimeout = null;\n        connectFunc();\n      }, this._getConnectTimeoutTtl());\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      (this.connectionStatus === null || this.disconnected || this.connectError)\n    ) {\n      if (!isBrowserSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n      await this._connect({ skipTimeout: true });\n    }\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._reconnectAfterSessionEnd && this.sessions.length === 0) {\n      if (this._reconnectAfterSessionEnd.reason) {\n        this._alert.warning({\n          message: this._reconnectAfterSessionEnd.reason,\n          allowDuplicates: false,\n        });\n      }\n      this._reconnectAfterSessionEnd = null;\n      this._connect({ skipTimeout: true, force: true });\n    }\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({ errorCode, statusCode, ttl }) {\n    if (this.connectRetryCounts > 2 || this.reconnecting || this.connected || this.connectError) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        statusCode,\n      });\n      this._alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode\n        }\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this._connect({ skipTimeout: true });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.connectFailed,\n      errorCode,\n      statusCode,\n    });\n    if (this.connectRetryCounts === 1) {\n      this._alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true\n        }\n      });\n      this._hideConnectFailedAlert();\n    }\n    this._connect();\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i] && m.payload && m.payload.isConnecting === true) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i] && !m.payload.isConnecting) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i]) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.disconnected ||\n      this.disconnecting\n    ) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.disconnect,\n    });\n    if (this._webphone) {\n      this._sessions.forEach((session) => {\n        this.hangup(session);\n      });\n      this._removeWebphone();\n      this._sessions = new Map();\n      this._updateSessions();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.unregistered,\n    });\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (session.__rc_extendedControlStatus === extendedControlStatus.playing) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('SessionDescriptionHandler-created', () => {\n      session.sessionDescriptionHandler.on('userMediaFailed', () => {\n        this._audioSettings.onGetUserMediaError();\n      });\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find(session => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers([forwardNumber], this._regionSettings, this._brand.id);\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult =\n        await this._numberValidate.validateNumbers([forwardNumber]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber\n              }\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId) {\n    await Promise.all(Array.from(this._sessions, async ([sessionId, session]) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.localHold) {\n        return;\n      }\n      if (session.__rc_callStatus === sessionStatus.connecting) {\n        return;\n      }\n      try {\n        await session.hold();\n      } catch (e) {\n        console.error('Hold call fail');\n        throw e;\n      }\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._onCallHold(session);\n    }));\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers([transferNumber], this._regionSettings, this._brand.id);\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._numberValidate.validateNumbers([transferNumber]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber\n              }\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n        numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        sessionDescriptionHandlerOptions: this.acceptOptions.sessionDescriptionHandlerOptions\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n  }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n\n    if (\n      toNumber.length > 6 &&\n      (!this._availabilityMonitor || !this._availabilityMonitor.isVoIPOnlyMode)\n    ) {\n      const phoneLines = await this._fetchDL();\n      if (phoneLines.length === 0) {\n        this._alert.warning({\n          message: webphoneErrors.noOutboundCallWithoutDL,\n        });\n        return null;\n      }\n    }\n\n    await this._holdOtherSession();\n    const session = this._webphone.userAgent.invite(toNumber, {\n      sessionDescriptionHandlerOptions: this.acceptOptions.sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    });\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallInit(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callInit,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(EVENTS.callInit, normalizedSession, this.activeSession);\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(EVENTS.callStart, normalizedSession, this.activeSession);\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(EVENTS.callRing, normalizedSession, this.ringSession);\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.beforeCallEnd, normalizedSession, this.activeSession);\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callEnd, normalizedSession, this.activeSession, this.ringSession\n    );\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.beforeCallResume, normalizedSession, this.activeSession);\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.callResume, normalizedSession, this.activeSession);\n  }\n\n  _onCallHold(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.callHold, normalizedSession, this.activeSession);\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get cachedSessions() {\n    return this._selectors.cachedSessions();\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._audioSettings.inputDeviceId,\n          },\n          video: false,\n        },\n      }\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  /*\n   * Together with `CallingSettings` module to check if webphone is\n   * Unavailable.\n   */\n  get isUnavailable() {\n    return (\n      this.ready &&\n      this._auth.loggedIn &&\n      (\n        !this._audioSettings.userMedia ||\n        (this.reconnecting || this.connectError)\n      )\n    );\n  }\n\n  @selector\n  ringingCallOnView = [\n    () => this.ringSessions,\n    sessions => find(\n      session => !session.minimized,\n      sessions,\n    )\n  ]\n}\n"],"file":"index.js"}