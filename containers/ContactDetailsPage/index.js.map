{"version":3,"sources":["containers/ContactDetailsPage/index.js"],"names":["mapToProps","_","params","phone","locale","contactDetails","contactSearch","rolesAndPermissions","rateLimiter","connectivityManager","currentLocale","contactItem","contact","disableLinks","isOfflineMode","isVoipOnlyMode","throttling","disableCallButton","isWebphoneUnavailableMode","isWebphoneInitializing","showSpinner","ready","outboundSmsPermission","permissions","OutboundSMS","internalSmsPermission","InternalSMS","mapToFunctions","dialerRoute","composeTextRoute","routerInteraction","regionSettings","call","dialerUI","composeText","getContact","find","id","contactId","type","contactType","clearContact","clear","formatNumber","phoneNumber","cleanedNumber","toString","isE164Number","formatedNumber","countryCode","beFormated","getAvatar","getProfileImage","getPresence","onBackClick","goBack","onClickToDial","callingEnabled","recipient","isIdle","push","onClickToCall","undefined","onClickToSMS","isDummyContact","name","updateTypingToNumber","search","searchString","addToNumber","typingToNumber","cleanTypingToNumber","ContactDetailsPage","ContactDetailsView"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { isE164, parseIncompletePhoneNumber } from '@ringcentral-integration/phone-number';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport ContactDetailsView from '../../components/ContactDetailsView';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  params,\n  phone: {\n    locale,\n    contactDetails,\n    contactSearch,\n    rolesAndPermissions,\n    rateLimiter,\n    connectivityManager,\n  },\n}) {\n  return {\n    currentLocale: locale.currentLocale,\n    contactItem: contactDetails.contact,\n    disableLinks:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isVoipOnlyMode ||\n      rateLimiter.throttling,\n    disableCallButton:\n      connectivityManager.isOfflineMode ||\n      connectivityManager.isWebphoneUnavailableMode ||\n      connectivityManager.isWebphoneInitializing ||\n      rateLimiter.throttling,\n    showSpinner: !(\n      locale.ready &&\n      contactSearch.ready &&\n      contactDetails.ready &&\n      rolesAndPermissions.ready\n    ),\n    outboundSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.OutboundSMS\n    ),\n    internalSmsPermission: !!(\n      rolesAndPermissions.permissions &&\n      rolesAndPermissions.permissions.InternalSMS\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  params,\n  dialerRoute = '/dialer',\n  composeTextRoute = '/composeText',\n  phone: {\n    routerInteraction,\n    contactDetails,\n    regionSettings,\n    call,\n    dialerUI,\n    composeText,\n    contactSearch,\n    rolesAndPermissions\n  },\n}) {\n  return {\n    getContact() {\n      contactDetails.find({\n        id: params.contactId,\n        type: params.contactType\n      });\n    },\n    clearContact() {\n      contactDetails.clear();\n    },\n    formatNumber(phoneNumber) {\n      // if the cleaned phone number is not a E164 format, we will show it directly, doesn't format it.\n      const cleanedNumber = parseIncompletePhoneNumber(phoneNumber.toString());\n      const isE164Number = isE164(cleanedNumber);\n      if (isE164Number) {\n        const formatedNumber = formatNumber({\n          phoneNumber,\n          countryCode: regionSettings.countryCode,\n        });\n        return { phoneNumber: formatedNumber, beFormated: true };\n      }\n      return { phoneNumber, beFormated: false };\n    },\n    getAvatar: contact => contactDetails.getProfileImage(contact),\n    getPresence: contact => contactDetails.getPresence(contact),\n    onBackClick() {\n      routerInteraction.goBack();\n    },\n    onClickToDial: dialerUI && rolesAndPermissions.callingEnabled ?\n      (recipient) => {\n        if (call.isIdle) {\n          routerInteraction.push(dialerRoute);\n          dialerUI.call({ recipient });\n          contactDetails.onClickToCall();\n        }\n      } :\n      undefined,\n    onClickToSMS: composeText ?\n      async (contact, isDummyContact = false) => {\n        if (routerInteraction) {\n          routerInteraction.push(composeTextRoute);\n        }\n        // if contact autocomplete, if no match fill the number only\n        if (contact.name && contact.phoneNumber && isDummyContact) {\n          composeText.updateTypingToNumber(contact.name);\n          contactSearch.search({ searchString: contact.name });\n        } else {\n          composeText.addToNumber(contact);\n          if (composeText.typingToNumber === contact.phoneNumber) {\n            composeText.cleanTypingToNumber();\n          }\n        }\n        // for track\n        contactDetails.onClickToSMS();\n      } :\n      undefined,\n  };\n}\n\nconst ContactDetailsPage = withPhone(connect(mapToProps, mapToFunctions)(ContactDetailsView));\n\nexport default ContactDetailsPage;\n"],"file":"index.js"}