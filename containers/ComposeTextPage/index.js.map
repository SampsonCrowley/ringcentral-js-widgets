{"version":3,"sources":["containers/ComposeTextPage/index.js"],"names":["mapToProps","_","phone","composeText","connectivityMonitor","contactSearch","locale","messageSender","rateLimiter","rolesAndPermissions","brand","inputExpandable","fullName","currentLocale","sendButtonDisabled","ready","idle","messageText","length","toNumbers","typingToNumber","connectivity","throttling","senderNumbers","senderNumbersList","senderNumber","outboundSMS","permissions","OutboundSMS","searchContactList","sortedResult","showSpinner","mapToFunctions","messageStore","regionSettings","routerInteraction","conversations","formatContactPhone","phoneNumber","areaCode","countryCode","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","send","timeout","setTimeout","currentPath","alertMessageSending","clearTimeout","then","responses","dismissMessageSending","pushMessages","conversationId","conversation","id","push","relateCorrespondentEntity","clean","formatPhone","searchContact","searchString","debouncedSearch","updateSenderNumber","updateTypingToNumber","cleanTypingToNumber","addToNumber","removeToNumber","updateMessageText","ComposeTextPage","ComposeTextPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\nimport messageSenderMessages from 'ringcentral-integration/modules/MessageSender/messageSenderMessages';\nimport ComposeTextPanel from '../../components/ComposeTextPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    composeText,\n    connectivityMonitor,\n    contactSearch,\n    locale,\n    messageSender,\n    rateLimiter,\n    rolesAndPermissions,\n    brand,\n  },\n  inputExpandable,\n}) {\n  return {\n    brand: brand.fullName,\n    currentLocale: locale.currentLocale,\n    sendButtonDisabled: (\n      !(composeText.ready && messageSender.idle) ||\n      (composeText.messageText.length === 0) ||\n      (\n        composeText.toNumbers.length === 0 &&\n        composeText.typingToNumber.length === 0\n      ) ||\n      !connectivityMonitor.connectivity ||\n      rateLimiter.throttling\n    ),\n    senderNumbers: messageSender.senderNumbersList,\n    senderNumber: composeText.senderNumber,\n    typingToNumber: composeText.typingToNumber,\n    toNumbers: composeText.toNumbers,\n    messageText: composeText.messageText,\n    outboundSMS: rolesAndPermissions.permissions.OutboundSMS,\n    searchContactList: contactSearch.sortedResult,\n    showSpinner: !(\n      composeText.ready &&\n      locale.ready &&\n      messageSender.ready &&\n      rolesAndPermissions.ready &&\n      contactSearch.ready\n    ),\n    inputExpandable,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    composeText,\n    contactSearch,\n    messageStore,\n    regionSettings,\n    routerInteraction,\n    conversations\n  },\n  formatContactPhone = phoneNumber => formatNumber({\n    phoneNumber,\n    areaCode: regionSettings.areaCode,\n    countryCode: regionSettings.countryCode,\n  }),\n  phoneTypeRenderer,\n  phoneSourceNameRenderer,\n  recipientsContactInfoRenderer,\n  recipientsContactPhoneRenderer,\n}) {\n  return {\n    send() {\n      let timeout = setTimeout(() => {\n        if (routerInteraction.currentPath === '/composeText') {\n          composeText.alertMessageSending();\n        }\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n      }, 10000);\n      composeText.send().then((responses) => {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        composeText.dismissMessageSending();\n        if (!responses || responses.length === 0) {\n          return null;\n        }\n        messageStore.pushMessages(responses);\n        if (responses.length === 1) {\n          const conversationId =\n            responses[0] && responses[0].conversation && responses[0].conversation.id;\n          if (!conversationId) {\n            return null;\n          }\n          routerInteraction.push(`/conversations/${conversationId}`);\n        } else {\n          routerInteraction.push('/messages');\n        }\n        conversations.relateCorrespondentEntity(responses);\n        composeText.clean();\n        return null;\n      }, () => {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n      });\n    },\n    formatPhone: formatContactPhone,\n    formatContactPhone,\n    searchContact: searchString => (\n      contactSearch.debouncedSearch({ searchString })\n    ),\n    updateSenderNumber: ({ phoneNumber }) => composeText.updateSenderNumber(phoneNumber),\n    updateTypingToNumber: (...args) => composeText.updateTypingToNumber(...args),\n    cleanTypingToNumber: (...args) => composeText.cleanTypingToNumber(...args),\n    addToNumber: (...args) => composeText.addToNumber(...args),\n    removeToNumber: (...args) => composeText.removeToNumber(...args),\n    updateMessageText: (...args) => composeText.updateMessageText(...args),\n    phoneTypeRenderer,\n    phoneSourceNameRenderer,\n    recipientsContactInfoRenderer,\n    recipientsContactPhoneRenderer,\n  };\n}\n\nconst ComposeTextPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions\n)(ComposeTextPanel));\n\nexport {\n  mapToProps,\n  mapToFunctions,\n  ComposeTextPage as default,\n};\n"],"file":"index.js"}