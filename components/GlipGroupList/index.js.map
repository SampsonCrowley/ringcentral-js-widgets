{"version":3,"sources":["components/GlipGroupList/index.js"],"names":["GlipGroupList","props","_rowRenderer","index","key","style","group","groups","id","currentGroupId","onSelectGroup","styles","item","_rowHeight","_list","React","createRef","prevProps","current","forceUpdateGrid","width","height","className","length","PureComponent","propTypes","PropTypes","string","array","func","isRequired","number","defaultProps","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AAEA;;;;AAEA;;;;;;IAEqBA,a;;;AACnB,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oJACXA,KADW;;AAAA,UAiBnBC,YAjBmB,GAiBJ,gBAIT;AAAA,UAHJC,KAGI,QAHJA,KAGI;AAAA,UAFJC,GAEI,QAFJA,GAEI;AAAA,UADJC,KACI,QADJA,KACI;;AACJ,UAAMC,QAAQ,MAAKL,KAAL,CAAWM,MAAX,CAAkBJ,KAAlB,CAAd;AACA,aACE;AAAA;AAAA;AACE,eAAKC,GADP;AAEE,iBAAOC;AAFT;AAIE,sCAAC,uBAAD;AACE,iBAAOC,KADT;AAEE,kBAAQA,MAAME,EAAN,KAAa,MAAKP,KAAL,CAAWQ,cAFlC;AAGE,yBAAe,yBAAM;AAAE,kBAAKR,KAAL,CAAWS,aAAX,CAAyBJ,MAAME,EAA/B;AAAqC,WAH9D;AAIE,qBAAWG,iBAAOC;AAJpB;AAJF,OADF;AAaD,KApCkB;;AAEjB,UAAKC,UAAL,GAAkB,EAAlB;AACA,UAAKC,KAAL,GAAaC,gBAAMC,SAAN,EAAb;AAHiB;AAIlB;;;;uCAEkBC,S,EAAW;AAC5B,UACE,KAAKhB,KAAL,CAAWM,MAAX,KAAsBU,UAAUV,MAAhC,IACA,KAAKN,KAAL,CAAWQ,cAAX,KAA8BQ,UAAUR,cAF1C,EAGE;AACA,YAAI,KAAKK,KAAL,IAAc,KAAKA,KAAL,CAAWI,OAA7B,EAAsC;AACpC,eAAKJ,KAAL,CAAWI,OAAX,CAAmBC,eAAnB;AACD;AACF;AACF;;;6BAuBQ;AAAA,mBAMH,KAAKlB,KANF;AAAA,UAELM,MAFK,UAELA,MAFK;AAAA,UAGLa,KAHK,UAGLA,KAHK;AAAA,UAILC,MAJK,UAILA,MAJK;AAAA,UAKLC,SALK,UAKLA,SALK;;AAOP,aACE,8BAAC,sBAAD;AACE,aAAK,KAAKR,KADZ;AAEE,mBAAWQ,SAFb;AAGE,eAAOF,KAHT;AAIE,gBAAQC,MAJV;AAKE,kBAAUd,OAAOgB,MALnB;AAME,mBAAW,EANb;AAOE,qBAAa,KAAKrB;AAPpB,QADF;AAWD;;;EAzDwCsB,oB;;kBAAtBxB,a;;;AA4DrBA,cAAcyB,SAAd,GAA0B;AACxBH,aAAWI,oBAAUC,MADG;AAExBpB,UAAQmB,oBAAUE,KAFM;AAGxBlB,iBAAegB,oBAAUG,IAAV,CAAeC,UAHN;AAIxBrB,kBAAgBiB,oBAAUC,MAJF;AAKxBP,SAAOM,oBAAUK,MAAV,CAAiBD,UALA;AAMxBT,UAAQK,oBAAUK,MAAV,CAAiBD;AAND,CAA1B;;AASA9B,cAAcgC,YAAd,GAA6B;AAC3BV,aAAWW,SADgB;AAE3B1B,UAAQ,EAFmB;AAG3BE,kBAAgBwB;AAHW,CAA7B","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'react-virtualized';\n\nimport styles from './styles.scss';\n\nimport GlipGroupItem from '../GlipGroupItem';\n\nexport default class GlipGroupList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this._rowHeight = 75;\n    this._list = React.createRef();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.groups !== prevProps.groups ||\n      this.props.currentGroupId !== prevProps.currentGroupId\n    ) {\n      if (this._list && this._list.current) {\n        this._list.current.forceUpdateGrid();\n      }\n    }\n  }\n\n  _rowRenderer = ({\n    index,\n    key,\n    style,\n  }) => {\n    const group = this.props.groups[index];\n    return (\n      <div\n        key={key}\n        style={style}\n      >\n        <GlipGroupItem\n          group={group}\n          active={group.id === this.props.currentGroupId}\n          onSelectGroup={() => { this.props.onSelectGroup(group.id); }}\n          className={styles.item}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      groups,\n      width,\n      height,\n      className,\n    } = this.props;\n    return (\n      <List\n        ref={this._list}\n        className={className}\n        width={width}\n        height={height}\n        rowCount={groups.length}\n        rowHeight={75}\n        rowRenderer={this._rowRenderer}\n      />\n    );\n  }\n}\n\nGlipGroupList.propTypes = {\n  className: PropTypes.string,\n  groups: PropTypes.array,\n  onSelectGroup: PropTypes.func.isRequired,\n  currentGroupId: PropTypes.string,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nGlipGroupList.defaultProps = {\n  className: undefined,\n  groups: [],\n  currentGroupId: undefined,\n};\n"]}