{"version":3,"sources":["components/FlipPanel/index.js"],"names":["FlipPanel","props","state","flipValue","flipNumbers","length","phoneNumber","flipEnabled","isOnFlip","onRadioSelect","value","setState","onFlip","styles","root","hideFlipPanel","headerTitle","i18n","getString","currentLocale","flipContainer","radioGroup","formatPhone","buttonGroup","button","flipButton","disabled","flipIcon","FlipIcon","completeButton","complete","EndIcon","Component","propTypes","PropTypes","bool","isRequired","array","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BackButton from '../BackButton';\nimport BackHeader from '../BackHeader';\nimport RadioButtonGroup from '../RadioBtnGroup';\nimport CircleButton from '../CircleButton';\nimport FlipIcon from '../../assets/images/Flip.svg';\nimport EndIcon from '../../assets/images/End.svg';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport default class FlipPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipValue: this.props.flipNumbers.length === 0 ? '' : this.props.flipNumbers[0].phoneNumber,\n      flipEnabled: !this.props.isOnFlip,\n    };\n    this.onRadioSelect = (value) => {\n      this.setState({\n        flipValue: value,\n      });\n    };\n    this.onFlip = () => {\n      this.props.onFlip(this.state.flipValue);\n      this.setState({\n        flipEnabled: false,\n      });\n    };\n  }\n  render() {\n    return (\n      <div className={styles.root}>\n        <BackHeader\n          onBackClick={this.props.isOnFlip ? null : this.props.hideFlipPanel}\n          backButton={<BackButton showIcon={!this.props.isOnFlip} />}\n        >\n          <span className={styles.headerTitle}>\n            {i18n.getString('flipHeader', this.props.currentLocale)}\n          </span>\n        </BackHeader>\n        <div className={styles.flipContainer}>\n          <RadioButtonGroup\n            className={styles.radioGroup}\n            radioOptions={this.props.flipNumbers}\n            disabled={!this.state.flipEnabled}\n            formatPhone={this.props.formatPhone}\n            onRadioSelect={this.onRadioSelect}\n            currentLocale={this.props.currentLocale}\n          />\n          <div className={styles.buttonGroup}>\n            <div className={styles.button} title={i18n.getString('flip', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.state.flipEnabled}\n                className={\n                  classnames(styles.flipButton, this.state.flipEnabled ? '' : styles.disabled)\n                }\n                iconClassName={styles.flipIcon}\n                onClick={this.onFlip}\n                icon={FlipIcon}\n                showBorder\n              />\n            </div>\n            <div className={styles.button} title={i18n.getString('complete', this.props.currentLocale)}>\n              <CircleButton\n                disabled={!this.props.isOnFlip}\n                className={\n                  classnames(styles.completeButton, this.props.isOnFlip ? '' : styles.disabled)\n                }\n                onClick={this.props.complete}\n                icon={EndIcon}\n                showBorder\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFlipPanel.propTypes = {\n  isOnFlip: PropTypes.bool.isRequired,\n  flipNumbers: PropTypes.array.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  hideFlipPanel: PropTypes.func.isRequired,\n  onFlip: PropTypes.func.isRequired,\n  complete: PropTypes.func.isRequired,\n};\n"],"file":"index.js"}