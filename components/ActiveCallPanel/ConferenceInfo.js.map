{"version":3,"sources":["components/ActiveCallPanel/ConferenceInfo.js"],"names":["ConferenceInfo","nextProps","partyProfiles","oldpartyProfiles","props","showUpdate","Array","isArray","length","i","id","currentLocale","onClick","MAXIMUM_AVATARS","profiles","displayedProfiles","slice","remains","styles","conferenceCallInfoContainer","avatarContainer","clickable","e","preventDefault","map","idx","avatarUrl","toUserName","avatar","backgroundColor","dynamicsFont","portrait","icon","info","i18n","getString","Component","propTypes","PropTypes","string","isRequired","arrayOf","shape","func","defaultProps"],"mappings":"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","file":"ConferenceInfo.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CallAvatar from '../CallAvatar';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nexport class ConferenceInfo extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { partyProfiles } = nextProps;\n    const oldpartyProfiles = this.props.partyProfiles;\n    let showUpdate = true;\n    if (partyProfiles !== oldpartyProfiles) {\n      if (\n        Array.isArray(partyProfiles) && Array.isArray(oldpartyProfiles)\n        && partyProfiles.length === oldpartyProfiles.length\n      ) {\n        showUpdate = false;\n        for (let i = 0; i < partyProfiles.length; i += 1) {\n          if (partyProfiles[i].id !== oldpartyProfiles[i].id) {\n            showUpdate = true;\n            break;\n          }\n        }\n      }\n    } else {\n      showUpdate = false;\n    }\n\n    return showUpdate;\n  }\n\n  render() {\n    const {\n      currentLocale,\n      partyProfiles,\n      onClick,\n    } = this.props;\n    const MAXIMUM_AVATARS = 4;\n    const profiles = partyProfiles || [];\n\n    const displayedProfiles =\n      profiles.length >= MAXIMUM_AVATARS\n        ? profiles.slice(0, MAXIMUM_AVATARS)\n        : profiles;\n\n    const remains = profiles.length > MAXIMUM_AVATARS\n      ? profiles.length - MAXIMUM_AVATARS\n      : 0;\n\n    return (\n      <div\n        className={styles.conferenceCallInfoContainer}\n        >\n        {\n            displayedProfiles.length\n              ? (\n                <div\n                  className={classnames(styles.avatarContainer, styles.clickable)}\n                  onClick={(e) => { e.preventDefault(); onClick(); }}\n                >\n                  {\n                    displayedProfiles.map(({ avatarUrl, toUserName }, idx) => (\n                      <div\n                        key={`${toUserName}_${idx}`}\n                        className={styles.avatar}>\n                        <CallAvatar\n                          avatarUrl={avatarUrl}\n                        />\n                      </div>\n                    )\n                    )\n                  }{\n                    remains > 0\n                      ? (\n                        <div\n                          className={classnames(styles.avatar, styles.remains)}\n                        >\n                          {`+${remains}`}\n                        </div>\n                      )\n                      : null\n                  }\n                </div>\n              )\n              : (\n                <div className={styles.avatarContainer}>\n                  <div className={styles.avatar} style={{ backgroundColor: '#fff' }}>\n                    <i className={classnames(dynamicsFont.portrait, styles.icon)} />\n                  </div>\n                </div>\n              )\n          }\n        <p className={styles.info}>\n          {i18n.getString('conferenceCall', currentLocale)}\n        </p>\n      </div>\n    );\n  }\n}\n\nConferenceInfo.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  partyProfiles: PropTypes.arrayOf(PropTypes.shape({\n    avatarUrl: PropTypes.string,\n    toUserName: PropTypes.string,\n  })),\n  onClick: PropTypes.func,\n};\n\nConferenceInfo.defaultProps = {\n  partyProfiles: null,\n  onClick: i => i,\n};\n\nexport default ConferenceInfo;\n"]}