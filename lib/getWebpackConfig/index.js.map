{"version":3,"sources":["lib/getWebpackConfig/index.js"],"names":["getBaseConfig","cacheDirectory","hashPrefix","supportedLocales","themeFolder","module","rules","enforce","test","loader","use","options","exclude","modules","localIdentName","plugins","autoprefixer","includePaths","path","resolve","process","cwd","outputStyle","getWebpackConfig","env","base","mode","webpack","DefinePlugin","NODE_ENV","JSON","stringify","devtool"],"mappings":"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","sourcesContent":["import autoprefixer from 'autoprefixer';\nimport path from 'path';\nimport webpack from 'webpack';\n\nfunction getBaseConfig({\n  cacheDirectory = false,\n  hashPrefix = '',\n  supportedLocales = [],\n  themeFolder,\n}) {\n  return {\n    module: {\n      rules: [\n        {\n          enforce: 'pre',\n          test: /\\.js$/,\n          loader: 'source-map-loader',\n        },\n        {\n          test: /\\.js$/,\n          use: [\n            {\n              loader: 'babel-loader',\n              options: {\n                cacheDirectory,\n              }\n            },\n            {\n              loader: '@ringcentral-integration/locale-loader',\n              options: {\n                supportedLocales\n              }\n            },\n          ],\n          exclude: /node_modules/,\n        },\n        {\n          test: /\\.css$/i,\n          use: [\n            'style-loader',\n            'css-loader',\n          ],\n        },\n        {\n          test: /\\.woff|\\.woff2|.eot|\\.ttf/,\n          use: 'url-loader?limit=15000&name=fonts/[name]_[hash].[ext]',\n        },\n        {\n          test: /\\.svg/,\n          exclude: /fonts/,\n          use: [\n            'babel-loader',\n            'react-svg-loader'\n          ]\n        },\n        {\n          test: /\\.png|\\.jpg|\\.gif|fonts(\\/|\\\\).*\\.svg/,\n          use: 'url-loader?limit=20000&name=images/[name]_[hash].[ext]',\n        },\n        {\n          test: /\\.sass|\\.scss/,\n          use: [\n            {\n              loader: 'style-loader',\n            },\n            {\n              loader: 'css-loader',\n              options: {\n                modules: true,\n                localIdentName: `${hashPrefix}_[path][name]__[local]--[hash:base64:5]`,\n              },\n            },\n            {\n              loader: 'postcss-loader',\n              options: {\n                plugins: () => [\n                  autoprefixer\n                ]\n              }\n            },\n            {\n              loader: 'sass-loader',\n              options: {\n                includePaths: [themeFolder, path.resolve(process.cwd(), 'node_modules')],\n                outputStyle: 'expanded'\n              }\n            }\n          ],\n        },\n        {\n          test: /\\.ogg$/,\n          use: 'file-loader?name=audio/[name]_[hash].[ext]',\n        },\n      ],\n    },\n    plugins: [],\n  };\n}\n\n\nexport default function getWebpackConfig({\n  env = 'development',\n  ...options\n}) {\n  const base = getBaseConfig({\n    ...options,\n  });\n  if (env === 'production') {\n    return {\n      ...base,\n      mode: 'production',\n      plugins: [\n        ...base.plugins,\n        new webpack.DefinePlugin({\n          'process.env': {\n            NODE_ENV: JSON.stringify('production'),\n          },\n        }),\n      ],\n    };\n  }\n  return {\n    ...base,\n    mode: 'development',\n    devtool: 'inline-source-map',\n    plugins: [\n      ...base.plugins,\n      new webpack.DefinePlugin({\n        'process.env': {\n          NODE_ENV: JSON.stringify('development'),\n        },\n      }),\n    ],\n  };\n}\n"],"file":"index.js"}