{"version":3,"sources":["components/MeetingAlert/index.js"],"names":["MeetingAlert","message","payload","currentLocale","application","msg","meetingStatus","insufficientPermissions","i18n","getString","permissionName","propTypes","PropTypes","string","isRequired","shape","defaultProps","undefined","handleMessage","emptyTopic","noPassword","scheduledSuccess","internalError"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,YAAT,OAOZ;AAAA,0BANDC,OAMC;AAAA,MALCA,OAKD,gBALCA,OAKD;AAAA,MAJCC,OAID,gBAJCA,OAID;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,WACC,QADDA,WACC;AACD,MAAIC,GAAJ;;AACA,UAAQJ,OAAR;AACE,SAAKK,uBAAcC,uBAAnB;AACEF,MAAAA,GAAG,GACD,6BAAC,yBAAD;AACE,QAAA,OAAO,EAAEG,cAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CADX;AAEE,QAAA,MAAM,EAAE;AACNC,UAAAA,WAAW,EAAXA,WADM;AAENM,UAAAA,cAAc,EAAER,OAAO,CAACQ;AAFlB;AAFV,QADF;AAQA;;AACF;AACEL,MAAAA,GAAG,GAAGG,cAAKC,SAAL,CAAeR,OAAf,EAAwBE,aAAxB,CAAN;AACA;AAbJ;;AAeA,SACE,2CACGE,GADH,CADF;AAKD;;AAEDL,YAAY,CAACW,SAAb,GAAyB;AACvBR,EAAAA,aAAa,EAAES,mBAAUC,MAAV,CAAiBC,UADT;AAEvBb,EAAAA,OAAO,EAAEW,mBAAUG,KAAV,CAAgB;AACvBd,IAAAA,OAAO,EAAEW,mBAAUC,MAAV,CAAiBC;AADH,GAAhB,EAENA,UAJoB;AAKvBV,EAAAA,WAAW,EAAEQ,mBAAUC;AALA,CAAzB;AAQAb,YAAY,CAACgB,YAAb,GAA4B;AAC1BZ,EAAAA,WAAW,EAAEa;AADa,CAA5B;;AAIAjB,YAAY,CAACkB,aAAb,GAA6B;AAAA,MAAGjB,OAAH,SAAGA,OAAH;AAAA,SAC1BA,OAAO,KAAKK,uBAAca,UAA3B,IACIlB,OAAO,KAAKK,uBAAcc,UAD9B,IAEInB,OAAO,KAAKK,uBAAcC,uBAF9B,IAGIN,OAAO,KAAKK,uBAAce,gBAH9B,IAIIpB,OAAO,KAAKK,uBAAcgB,aALH;AAAA,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport meetingStatus from 'ringcentral-integration/modules/Meeting/meetingStatus';\nimport FormattedMessage from '../FormattedMessage';\nimport i18n from './i18n';\n\nexport default function MeetingAlert({\n  message: {\n    message,\n    payload,\n  },\n  currentLocale,\n  application,\n}) {\n  let msg;\n  switch (message) {\n    case meetingStatus.insufficientPermissions:\n      msg = (\n        <FormattedMessage\n          message={i18n.getString(message, currentLocale)}\n          values={{\n            application,\n            permissionName: payload.permissionName,\n          }} />\n      );\n      break;\n    default:\n      msg = i18n.getString(message, currentLocale);\n      break;\n  }\n  return (\n    <span>\n      {msg}\n    </span>\n  );\n}\n\nMeetingAlert.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n  }).isRequired,\n  application: PropTypes.string,\n};\n\nMeetingAlert.defaultProps = {\n  application: undefined,\n};\n\nMeetingAlert.handleMessage = ({ message }) => (\n  (message === meetingStatus.emptyTopic)\n  || (message === meetingStatus.noPassword)\n  || (message === meetingStatus.insufficientPermissions)\n  || (message === meetingStatus.scheduledSuccess)\n  || (message === meetingStatus.internalError)\n);\n"],"file":"index.js"}