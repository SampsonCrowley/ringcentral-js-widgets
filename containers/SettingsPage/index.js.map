{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","detailedPresence","showRegion","showCalling","showAudio","showFeedback","showUserGuide","showPresenceSettings","showQuickAccess","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","showReginSetting","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","openPresenceSettings","hasEditPresencePermission","supportedLocales","savedLocale","hasUserGuidePermission","mapToFunctions","routerInteraction","userGuide","quickAccess","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onUserGuideClick","start","onQuickAccessLinkClick","enter","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","SettingsPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    detailedPresence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  showUserGuide = true,\n  showPresenceSettings = true,\n  showQuickAccess = false,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!detailedPresence || detailedPresence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showQuickAccess,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      regionSettings.showReginSetting &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: detailedPresence && detailedPresence.dndStatus,\n    userStatus: detailedPresence && detailedPresence.userStatus,\n    openPresenceSettings: !!(detailedPresence && params && params.showPresenceSettings),\n    showPresenceSettings:\n      showPresenceSettings && rolesAndPermissions.hasEditPresencePermission,\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n    showUserGuide: showUserGuide && rolesAndPermissions.hasUserGuidePermission,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    detailedPresence,\n    routerInteraction,\n    localeSettings,\n    userGuide,\n    quickAccess\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n}) {\n  return {\n    async onLogoutButtonClick() {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick() {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick() {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick() {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick() {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    onUserGuideClick() {\n      userGuide.start();\n    },\n    onQuickAccessLinkClick() {\n      quickAccess.enter();\n    },\n\n    setAvailable: (...args) => (detailedPresence && detailedPresence.setAvailable(...args)),\n    setBusy: (...args) => (detailedPresence && detailedPresence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (detailedPresence && detailedPresence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (detailedPresence && detailedPresence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      detailedPresence && detailedPresence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"],"file":"index.js"}