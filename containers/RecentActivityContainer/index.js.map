{"version":3,"sources":["containers/RecentActivityContainer/index.js"],"names":["getTabs","ready","currentLocale","dateTimeFormatter","navigateTo","recentMessages","recentCalls","currentContact","sessionId","showRecentCalls","showRecentMessage","showFax","showVoiceMails","messages","calls","id","contactId","activityCardId","icon","label","i18n","getString","path","isActive","view","getData","cleanUp","dynamicsFont","composeText","isMessagesLoaded","getMessages","cleanUpMessages","contact","active","isCallsLoaded","getCalls","cleanUpCalls","filter","x","mapToProps","_","phone","locale","dateTimeFormat","contactMatcher","formatDateTime","getSession","useContact","session","contactMatch","contactMapping","dataMapping","phoneNumber","direction","callDirections","outbound","to","from","length","title","showSpinner","tabs","defaultTab","RecentActivityContainer","RecentActivityPanel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport callDirections from 'ringcentral-integration/enums/callDirections';\nimport RecentActivityPanel from '../../components/RecentActivityPanel';\nimport dynamicsFont from '../../assets/DynamicsFont/DynamicsFont.scss';\nimport RecentActivityMessages from '../../components/RecentActivityMessages';\nimport RecentActivityCalls from '../../components/RecentActivityCalls';\nimport VoicemailIcon from '../../assets/images/VoicemailIcon.svg';\nimport FaxIcon from '../../assets/images/Fax.svg';\nimport { withPhone } from '../../lib/phoneContext';\nimport i18n from './i18n';\n\nfunction getTabs({\n  ready,\n  currentLocale,\n  dateTimeFormatter,\n  navigateTo,\n  recentMessages,\n  recentCalls,\n  currentContact,\n  sessionId,\n  showRecentCalls,\n  showRecentMessage,\n  showFax,\n  showVoiceMails,\n}) {\n  if (!ready) return [];\n  let messages = [];\n  let calls = [];\n  if (currentContact && currentContact.id) {\n    const contactId = currentContact.id;\n    const activityCardId = sessionId ? `${contactId}-${sessionId}` : contactId;\n    if (recentMessages.messages[activityCardId]) {\n      messages = recentMessages.messages[activityCardId];\n    }\n    if (recentCalls.calls[activityCardId]) {\n      calls = recentCalls.calls[activityCardId];\n    }\n  }\n\n  return [\n    showVoiceMails ? {\n      icon: <VoicemailIcon width={21} height={21} />,\n      label: i18n.getString('voicemail', currentLocale),\n      path: 'voicemails',\n      isActive: path => path === 'voicemails',\n      view: null,\n      getData() { },\n      cleanUp() { }\n    } : null,\n    showRecentMessage ? {\n      icon: <span className={dynamicsFont.composeText} />,\n      label: i18n.getString('text', currentLocale),\n      path: 'recentMessages',\n      isActive: path => path === 'recentMessages',\n      view: (\n        <RecentActivityMessages\n          messages={messages}\n          navigateTo={navigateTo}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isMessagesLoaded={recentMessages.isMessagesLoaded}\n        />\n      ),\n      getData() {\n        recentMessages.getMessages({ currentContact, sessionId });\n      },\n      cleanUp: () => recentMessages.cleanUpMessages({ contact: currentContact, sessionId })\n    } : null,\n    showFax ? {\n      icon: <FaxIcon width={21} height={21} />,\n      label: i18n.getString('fax', currentLocale),\n      path: 'faxes',\n      isActive: path => path === 'faxes',\n      view: null,\n      getData() { },\n      cleanUp() { }\n    } : null,\n    showRecentCalls ? {\n      icon: <span className={dynamicsFont.active} />,\n      label: i18n.getString('call', currentLocale),\n      path: 'recentCalls',\n      isActive: path => path === 'recentCalls',\n      view: (\n        <RecentActivityCalls\n          calls={calls}\n          dateTimeFormatter={dateTimeFormatter}\n          currentLocale={currentLocale}\n          isCallsLoaded={recentCalls.isCallsLoaded}\n        />\n      ),\n      getData() {\n        recentCalls.getCalls({ currentContact, sessionId });\n      },\n      cleanUp: () => recentCalls.cleanUpCalls({ contact: currentContact, sessionId })\n    } : null,\n  ].filter(x => x !== null);\n}\n\nfunction mapToProps(_, {\n  phone: {\n    locale,\n    dateTimeFormat,\n    recentMessages,\n    recentCalls,\n    contactMatcher,\n  },\n  currentLocale = locale.currentLocale,\n  navigateTo,\n  dateTimeFormatter = (...args) => dateTimeFormat.formatDateTime(...args),\n  getSession,\n  useContact,\n  contact,\n  showRecentCalls = true,\n  showRecentMessage = true,\n  showFax = true,\n  showVoiceMails = true,\n}) {\n  let sessionId = null;\n  let currentContact = contact;\n  let ready =\n    dateTimeFormat.ready &&\n    locale.ready &&\n    recentMessages.ready &&\n    recentCalls.ready;\n  if (!useContact) {\n    const session = getSession();\n    sessionId = session.id;\n    currentContact = session.contactMatch;\n    const contactMapping = contactMatcher && contactMatcher.dataMapping;\n    const phoneNumber = session.direction === callDirections.outbound ?\n      session.to : session.from;\n    if (!currentContact) {\n      currentContact = contactMapping && contactMapping[phoneNumber];\n      if (currentContact && currentContact.length >= 1) {\n        currentContact = currentContact[0];\n      }\n    }\n    ready = ready && contactMatcher.ready;\n  }\n  return {\n    currentLocale,\n    title: i18n.getString('recentActivities', locale.currentLocale),\n    showSpinner: !ready,\n    currentContact,\n    calls: recentCalls.calls || [],\n    tabs: getTabs({\n      ready,\n      currentLocale,\n      dateTimeFormatter,\n      navigateTo,\n      currentContact,\n      recentMessages,\n      recentCalls,\n      sessionId,\n      showFax,\n      showRecentCalls,\n      showVoiceMails,\n      showRecentMessage,\n    }),\n    defaultTab: 'recentCalls',\n  };\n}\n\nconst RecentActivityContainer = withPhone(connect(\n  mapToProps\n)(RecentActivityPanel));\n\nexport {\n  getTabs,\n  mapToProps,\n  RecentActivityContainer as default,\n};\n\n"],"file":"index.js"}