{"version":3,"sources":["components/MessageInput/index.js"],"names":["UIHeightOffset","MessageInput","props","context","onChange","e","value","currentTarget","newHeight","calculateNewHeight","state","height","onHeightChange","setState","onKeyDown","key","shiftKey","preventDefault","onSend","minHeight","nextProps","inputExpandable","textArea","style","scrollHeight","maxHeight","currentLocale","disabled","maxLength","inputHeight","styles","root","textField","target","i18n","getString","submitField","sendButton","Component","propTypes","PropTypes","string","isRequired","bool","number","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nconst UIHeightOffset = 23;\n// the extra height of the entire field with paddings and borders\n\nexport default class MessageInput extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    currentLocale: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    minHeight: PropTypes.number,\n    maxHeight: PropTypes.number,\n    maxLength: PropTypes.number,\n    onSend: PropTypes.func,\n    onChange: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    inputExpandable: PropTypes.bool,\n  }\n  static defaultProps = {\n    disabled: false,\n    onSend: undefined,\n    onChange: undefined,\n    onHeightChange: undefined,\n    minHeight: 63,\n    maxHeight: 300,\n    maxLength: 5000,\n    inputExpandable: true,\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      value: props.value,\n      height: props.minHeight,\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.state.value) {\n      // use setState(updater, callback) to recaculate height after value has been update to DOM\n      this.setState(\n        () => ({\n          value: nextProps.value,\n        }),\n        () => {\n          const newHeight = this.calculateNewHeight();\n          if (newHeight !== this.state.height) {\n            if (typeof this.props.onHeightChange === 'function') {\n              this.props.onHeightChange(newHeight);\n            }\n            this.setState({\n              height: newHeight,\n            });\n          }\n        }\n      );\n    }\n  }\n  componentDidMount() {\n    // do a initial size check in case the component is mounted with multi line value\n    const newHeight = this.calculateNewHeight();\n    if (newHeight !== this.state.height) {\n      if (typeof this.props.onHeightChange === 'function') {\n        this.props.onHeightChange(newHeight);\n      }\n      this.setState({\n        height: newHeight,\n      });\n    }\n  }\n  calculateNewHeight() {\n    if (!this.props.inputExpandable) {\n      return this.props.minHeight;\n    }\n    // temperarily set height to 0 to check scrollHeight\n    this.textArea.style.height = 0;\n    const newHeight = this.textArea.scrollHeight + 10 + UIHeightOffset;\n    // set height back to original to avoid messing with react\n    this.textArea.style.height = `${this.state.height - UIHeightOffset}px`;\n    const {\n      minHeight,\n      maxHeight,\n    } = this.props;\n    if (newHeight < minHeight) {\n      return minHeight;\n    } else if (newHeight > maxHeight) {\n      return maxHeight;\n    }\n    return newHeight;\n  }\n  onChange = (e) => {\n    const {\n      currentTarget: {\n        value,\n      },\n    } = e;\n    const newHeight = this.calculateNewHeight();\n    if (newHeight !== this.state.height && typeof this.props.onHeightChange === 'function') {\n      this.props.onHeightChange(newHeight);\n    }\n    this.setState({\n      value,\n      height: newHeight,\n    });\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(value);\n    }\n  }\n  onKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      if (!e.shiftKey) {\n        e.preventDefault();\n        if (typeof this.props.onSend === 'function') {\n          this.props.onSend();\n        }\n      }\n    }\n  }\n  render() {\n    const {\n      currentLocale,\n      disabled,\n      onSend,\n      maxLength,\n    } = this.props;\n    const {\n      value,\n      height,\n    } = this.state;\n    const inputHeight = height - UIHeightOffset;\n    return (\n      <div className={styles.root}>\n        <div className={styles.textField}>\n          <textarea\n            data-sign=\"messageInput\"\n            ref={(target) => { this.textArea = target; }}\n            placeholder={i18n.getString('typeMessage', currentLocale)}\n            value={value}\n            maxLength={maxLength}\n            onChange={this.onChange}\n            onKeyPressCapture={this.onKeyDown}\n            style={{\n              height: inputHeight,\n            }}\n          />\n        </div>\n        <div className={styles.submitField}>\n          <input\n            data-sign=\"messageButton\"\n            type=\"button\"\n            value={i18n.getString('send', currentLocale)}\n            onClick={onSend}\n            className={styles.sendButton}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"index.js"}