{"version":3,"sources":["modules/Webphone/index.js"],"names":["AUTO_RETRIES_DELAY","RETRY_DELAY","INCOMING_CALL_INVALID_STATE_ERROR_CODE","extendedControlStatus","Enum","EVENTS","registerErrors","webphoneErrors","sipProvisionError","webphoneCountOverLimit","webphoneForbidden","requestTimeout","internalServerError","serverTimeout","unknownError","connectFailed","Webphone","deps","dep","optional","appKey","appName","appVersion","alert","auth","client","rolesAndPermissions","webphoneLogLevel","contactMatcher","numberValidate","audioSettings","tabManager","onCallEnd","onCallRing","onCallStart","onCallResume","onCallHold","onCallInit","onBeforeCallResume","onBeforeCallEnd","regionSettings","brand","webphoneSDKOptions","permissionCheck","options","actionTypes","_regionSettings","_brand","_eventEmitter","EventEmitter","_appKey","_appName","_appVersion","_alert","_webphoneLogLevel","_auth","ensureExist","_client","_rolesAndPermissions","_numberValidate","_audioSettings","_contactMatcher","_tabManager","_webphoneSDKOptions","_permissionCheck","_reconnectDelays","on","callEnd","callRing","callStart","callResume","callHold","callInit","beforeCallResume","_onBeforeCallEndFunctions","beforeCallEnd","_webphone","_remoteVideo","_localVideo","_sessions","Map","_reducer","_needToReconnectAfterSessionEnd","_connectTimeout","addSelector","sessions","outputs","forEach","session","push","to","from","ringSessionId","ringSession","id","cached","activeSessionId","activeSession","addQuerySource","getQueriesFn","_selectors","sessionPhoneNumbers","readyCheckFn","ready","_isFirstRegister","document","createElement","setAttribute","muted","body","appendChild","volume","callVolume","supportDevices","setSinkId","outputDeviceId","store","dispatch","type","videoElementPrepared","window","readyState","addEventListener","_prepareVideoElement","_disconnect","subscribe","_onStateChange","_shouldInit","initSuccess","_shouldReset","resetSuccess","disconnect","_ringtoneVolume","ringtoneVolume","_ringtoneMuted","ringtoneMuted","userAgent","audioHelper","setVolume","_callVolume","_outputDeviceId","loggedIn","pending","service","platform","post","sipInfo","transport","response","json","account","extension","device","list","devices","records","phoneLines","length","concat","stop","unregister","removeAllListeners","provisionData","_removeWebphone","RingCentralWebphone","uuid","endpointId","logLevel","enabled","media","remote","local","enableQos","enableMidLinesInSDP","loadAudio","incoming","incomingAudio","outgoing","outgoingAudio","connected","registered","info","message","_hideRegisterErrorAlert","e","console","log","disconnecting","unregistered","connectError","cause","error","data","isSipErrorCode","disconnected","errorCode","statusCode","status_code","_onConnectError","_onInvite","_connect","skipTimeout","force","reconnect","setRetryCounts","retryCounts","ttl","connecting","active","connect","clearTimeout","connectFunc","_sipProvision","sipProvision","connectRetryCounts","indexOf","refreshServiceFeatures","_createWebphone","setTimeout","_getConnectTimeoutTtl","connectionStatus","browserNotSupported","warning","_fetchDL","noOutboundCallWithoutDL","checkDLError","allowDuplicates","reconnecting","danger","payload","_hideConnectingAlert","isConnecting","_hideConnectFailedAlert","alertIds","messages","filter","m","i","len","map","dismiss","hangup","_updateSessions","__rc_extendedControlStatus","playing","controls","__rc_extendedControls","slice","_sendDTMF","stopped","incomingResponse","__rc_callStatus","sessionStatus","finished","headers","_onCallStart","_playExtendedControls","_onCallEnd","newSession","replaced","__rc_direction","callDirections","inbound","_addSession","_onAccepted","__rc_isOnMute","onMute","onGetUserMediaError","__rc_creationTime","Date","now","__rc_lastActiveTime","request","_onCallRing","sessionId","sipSession","get","find","_holdOtherSession","accept","acceptOptions","callAnswer","code","reject","unhold","forwardNumber","validatedResult","validPhoneNumber","validateNumbers","result","errors","callErrors","phoneNumber","numbers","e164","__rc_isForwarded","forward","forwardError","_sessionHandleWithId","mute","muteError","unmute","localHold","hold","onHold","_onCallHold","holdError","currentSessionId","Promise","all","Array","onholdCachedSession","_onBeforeCallResume","_onCallResume","__rc_recordStatus","recordStatus","startRecord","recording","idle","recordDisabled","noAccess","recordError","stopRecord","park","transferNumber","__rc_isOnTransfer","numberResult","transfer","transferError","ua","invite","sessionDescriptionHandlerOptions","once","warmTransfer","flipValue","flip","__rc_isOnFlip","flipError","dtmfValue","dtmf","_onBeforeCallEnd","terminate","__rc_isToVoicemail","toVoicemail","toVoiceMailError","replyOptions","__rc_isReplied","replyWithMessage","func","toNumber","fromNumber","homeCountryId","extendedControls","outbound","__rc_fromNumber","_onCallInit","contact","__rc_contactMatch","sessionIds","setSessionCaching","cachingSessionIds","clearSessionCaching","values","normalizeSession","updateSessions","set","__rc_minimized","normalizedSession","x","triggerMatch","emit","playIncoming","_removeSession","_reconnectWebphoneIfNecessaryOnSessionsEmpty","handler","state","status","moduleStatuses","ringSessions","onHoldSessions","lastEndedSessions","cachedSessions","webphoneEnabled","constraints","audio","deviceId","inputDeviceId","video","isOnTransfer","RcModule","proxify","selector","minimized"],"mappings":"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","sourcesContent":["import { find, filter } from 'ramda';\nimport EventEmitter from 'events';\nimport RingCentralWebphone from 'ringcentral-web-phone';\nimport incomingAudio from 'ringcentral-web-phone/audio/incoming.ogg';\nimport outgoingAudio from 'ringcentral-web-phone/audio/outgoing.ogg';\n\nimport { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport sleep from '../../lib/sleep';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport connectionStatus from './connectionStatus';\n\nimport sessionStatus from './sessionStatus';\nimport recordStatus from './recordStatus';\nimport actionTypes from './actionTypes';\nimport callDirections from '../../enums/callDirections';\nimport webphoneErrors from './webphoneErrors';\nimport callErrors from '../Call/callErrors';\nimport ensureExist from '../../lib/ensureExist';\nimport proxify from '../../lib/proxy/proxify';\nimport { selector } from '../../lib/selector';\nimport validateNumbers from '../../lib/validateNumbers';\nimport Enum from '../../lib/Enum';\n\nimport {\n  isBrowserSupport,\n  isChrome,\n  isFirefox,\n  normalizeSession,\n  isRing,\n  isOnHold,\n  extractHeadersData,\n} from './webphoneHelper';\nimport getWebphoneReducer from './getWebphoneReducer';\n\nconst AUTO_RETRIES_DELAY = [\n  0,\n  5 * 1000,\n  10 * 1000,\n  30 * 1000,\n  2 * 60 * 1000,\n  5 * 60 * 1000,\n  15 * 60 * 1000,\n  30 * 60 * 1000,\n];\n\nconst RETRY_DELAY = 5 * 1000;\nconst INCOMING_CALL_INVALID_STATE_ERROR_CODE = 2;\n\nconst extendedControlStatus = new Enum([\n  'pending',\n  'playing',\n  'stopped',\n]);\n\nconst EVENTS = new Enum([\n  'callRing',\n  'callStart',\n  'callEnd',\n  'callHold',\n  'callResume',\n  'beforeCallResume',\n  'beforeCallEnd',\n  'callInit',\n]);\n\nconst registerErrors = [\n  webphoneErrors.sipProvisionError,\n  webphoneErrors.webphoneCountOverLimit,\n  webphoneErrors.webphoneForbidden,\n  webphoneErrors.requestTimeout,\n  webphoneErrors.internalServerError,\n  webphoneErrors.serverTimeout,\n  webphoneErrors.unknownError,\n  webphoneErrors.connectFailed,\n];\n\n/**\n * @constructor\n * @description Web phone module to handle phone interaction with WebRTC.\n */\n@Module({\n  deps: [\n    'Auth',\n    'Alert',\n    'Client',\n    'NumberValidate',\n    'RolesAndPermissions',\n    'Brand',\n    'RegionSettings',\n    'AudioSettings',\n    { dep: 'TabManager', optional: true },\n    { dep: 'ContactMatcher', optional: true },\n    { dep: 'WebphoneOptions', optional: true }\n  ]\n})\nexport default class Webphone extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Brand} params.brand - app brand\n   * @param {RegionSettings} params.regionSettings - regionSettings\n   * @param {String} params.appKey - app key\n   * @param {String} params.appName - app name\n   * @param {String} params.appVersion - app version\n   * @param {Number} params.webphoneLogLevel - log Level\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Client} params.client - client module instance\n   * @param {RolesAndPermissions} params.rolesAndPermissions - rolesAndPermissions module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactMatcher} params.contactMatcher - contactMatcher module instance, optional\n   * @param {Function} params.onCallEnd - callback on a call end\n   * @param {Function} params.onCallRing - callback on a call ring\n   * @param {Function} params.onCallStart - callback on a call accpeted by callee\n   * @param {Function} params.onCallInit - callback on create a new call\n   * @param {Function} params.onCallResume - callback on a call resume\n   * @param {Function} params.onCallHold - callback on a call holded\n   * @param {Function} params.onBeforeCallResume - callback before a call resume\n   * @param {Function} params.onBeforeCallEnd - callback before a call hangup\n   * @param {Object} params.webphoneSDKOptions - callback before a call hangup\n   */\n  constructor({\n    appKey,\n    appName,\n    appVersion,\n    alert,\n    auth,\n    client,\n    rolesAndPermissions,\n    webphoneLogLevel = 3,\n    contactMatcher,\n    numberValidate,\n    audioSettings,\n    tabManager,\n    onCallEnd,\n    onCallRing,\n    onCallStart,\n    onCallResume,\n    onCallHold,\n    onCallInit,\n    onBeforeCallResume,\n    onBeforeCallEnd,\n    regionSettings,\n    brand,\n    webphoneSDKOptions,\n    permissionCheck = true,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n\n    this._regionSettings = regionSettings;\n    this._brand = brand;\n    this._eventEmitter = new EventEmitter();\n    this._appKey = appKey;\n    this._appName = appName;\n    this._appVersion = appVersion;\n    this._alert = alert;\n    this._webphoneLogLevel = webphoneLogLevel;\n    this._auth = this:: ensureExist(auth, 'auth');\n    this._client = this:: ensureExist(client, 'client');\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._numberValidate = this:: ensureExist(numberValidate, 'numberValidate');\n    this._audioSettings = this:: ensureExist(audioSettings, 'audioSettings');\n    this._contactMatcher = contactMatcher;\n    this._tabManager = tabManager;\n    this._webphoneSDKOptions = webphoneSDKOptions || {};\n\n    this._permissionCheck = permissionCheck;\n    this._reconnectDelays = AUTO_RETRIES_DELAY;\n\n    if (typeof onCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, onCallEnd);\n    }\n    if (typeof onCallRing === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, onCallRing);\n    }\n    if (typeof onCallStart === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, onCallStart);\n    }\n    if (typeof onCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, onCallResume);\n    }\n    if (typeof onCallHold === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, onCallHold);\n    }\n    if (typeof onCallInit === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, onCallInit);\n    }\n    if (typeof onBeforeCallResume === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, onBeforeCallResume);\n    }\n    this._onBeforeCallEndFunctions = [];\n    if (typeof onBeforeCallEnd === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, onBeforeCallEnd);\n    }\n\n    this._webphone = null;\n    this._remoteVideo = null;\n    this._localVideo = null;\n    this._sessions = new Map();\n    this._reducer = getWebphoneReducer(this.actionTypes);\n    this._needToReconnectAfterSessionEnd = false;\n    this._connectTimeout = null;\n\n    this.addSelector('sessionPhoneNumbers',\n      () => this.sessions,\n      (sessions) => {\n        const outputs = [];\n        sessions.forEach((session) => {\n          outputs.push(session.to);\n          outputs.push(session.from);\n        });\n        return outputs;\n      }\n    );\n\n    this.addSelector('ringSession',\n      () => this.ringSessionId,\n      () => this.sessions,\n      (ringSessionId, sessions) => {\n        if (!ringSessionId) {\n          return null;\n        }\n        const ringSession = find(\n          session => session.id === ringSessionId,\n          sessions\n        );\n        return ringSession;\n      }\n    );\n\n    this.addSelector('cachedSessions',\n      () => this.sessions,\n      sessions => filter(session => session.cached, sessions)\n    );\n\n    this.addSelector('activeSession',\n      () => this.activeSessionId,\n      () => this.sessions,\n      (activeSessionId, sessions) => {\n        if (!activeSessionId) {\n          return null;\n        }\n        const activeSession = find(\n          session => session.id === activeSessionId,\n          sessions\n        );\n        return activeSession;\n      }\n    );\n\n    this.addSelector('ringSessions',\n      () => this.sessions,\n      sessions => filter(session => isRing(session), sessions)\n    );\n\n    this.addSelector('onHoldSessions',\n      () => this.sessions,\n      sessions => filter(session => isOnHold(session), sessions)\n    );\n\n    if (this._contactMatcher) {\n      this._contactMatcher.addQuerySource({\n        getQueriesFn: this._selectors.sessionPhoneNumbers,\n        readyCheckFn: () => (\n          this.ready\n        ),\n      });\n    }\n\n    this._isFirstRegister = true;\n  }\n\n  _prepareVideoElement() {\n    this._remoteVideo = document.createElement('video');\n    this._remoteVideo.id = 'remoteVideo';\n    this._remoteVideo.setAttribute('hidden', 'hidden');\n    this._localVideo = document.createElement('video');\n    this._localVideo.id = 'localVideo';\n    this._localVideo.setAttribute('hidden', 'hidden');\n    this._localVideo.setAttribute('muted', 'muted');\n    this._localVideo.muted = true;\n\n    document.body.appendChild(this._remoteVideo);\n    document.body.appendChild(this._localVideo);\n\n    this._remoteVideo.volume = this._audioSettings.callVolume;\n    if (this._audioSettings.supportDevices) {\n      this._remoteVideo.setSinkId(this._audioSettings.outputDeviceId);\n    }\n\n    this.store.dispatch({\n      type: this.actionTypes.videoElementPrepared,\n    });\n  }\n\n  initialize() {\n    if (\n      typeof window !== 'undefined' &&\n      typeof document !== 'undefined'\n    ) {\n      if (document.readyState === 'loading') {\n        window.addEventListener('load', () => {\n          this._prepareVideoElement();\n        });\n      } else {\n        this._prepareVideoElement();\n      }\n      window.addEventListener('unload', () => {\n        this._disconnect();\n      });\n    }\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  async _onStateChange() {\n    if (this._shouldInit()) {\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n    } else if (this._shouldReset()) {\n      this.store.dispatch({\n        type: this.actionTypes.resetSuccess,\n      });\n      this.disconnect();\n    }\n    if (\n      this.ready &&\n      (\n        this._ringtoneVolume !== this._audioSettings.ringtoneVolume ||\n        this._ringtoneMuted !== this._audioSettings.ringtoneMuted\n      )\n    ) {\n      this._ringtoneVolume = this._audioSettings.ringtoneVolume;\n      this._ringtoneMuted = this._audioSettings.ringtoneMuted;\n      if (\n        this._webphone &&\n        this._webphone.userAgent\n      ) {\n        this._webphone.userAgent.audioHelper\n          .setVolume(this._ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume);\n      }\n    }\n    if (\n      this.ready &&\n      this._callVolume !== this._audioSettings.callVolume\n    ) {\n      this._callVolume = this._audioSettings.callVolume;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.volume = this._audioSettings.callVolume;\n      }\n    }\n    if (\n      this.ready &&\n      this._audioSettings.supportDevices &&\n      this._outputDeviceId !== this._audioSettings.outputDeviceId\n    ) {\n      this._outputDeviceId = this._audioSettings.outputDeviceId;\n      if (\n        this._remoteVideo\n      ) {\n        this._remoteVideo.setSinkId(this._outputDeviceId);\n      }\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._auth.loggedIn &&\n      this._rolesAndPermissions.ready &&\n      this._numberValidate.ready &&\n      this._audioSettings.ready &&\n      (!this._tabManager || this._tabManager.ready) &&\n      this.pending\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._auth.loggedIn ||\n        !this._rolesAndPermissions.ready ||\n        !this._numberValidate.ready ||\n        (!!this._tabManager && !this._tabManager.ready) ||\n        !this._audioSettings.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  @proxify\n  async _sipProvision() {\n    const response = await this._client.service.platform()\n      .post('/client-info/sip-provision', {\n        sipInfo: [{ transport: 'WSS' }]\n      });\n    return response.json();\n  }\n\n  async _fetchDL() {\n    const response = await this._client.account().extension().device().list();\n    const devices = response.records;\n    let phoneLines = [];\n    devices.forEach((device) => {\n      if (!device.phoneLines || device.phoneLines.length === 0) {\n        return;\n      }\n      phoneLines = phoneLines.concat(device.phoneLines);\n    });\n    return phoneLines;\n  }\n\n  _removeWebphone() {\n    if (!this._webphone || !this._webphone.userAgent) {\n      return;\n    }\n    this._webphone.userAgent.stop();\n    this._webphone.userAgent.unregister();\n    this._webphone.userAgent.removeAllListeners();\n    this._webphone.userAgent.transport.removeAllListeners();\n    this._webphone.userAgent.transport.disconnect();\n    this._webphone = null;\n  }\n\n  _createWebphone(provisionData) {\n    this._removeWebphone();\n    this._webphone = new RingCentralWebphone(provisionData, {\n      appKey: this._appKey,\n      appName: this._appName,\n      appVersion: this._appVersion,\n      uuid: this._auth.endpointId,\n      logLevel: this._webphoneLogLevel, // error 0, warn 1, log: 2, debug: 3\n      audioHelper: {\n        enabled: true, // enables audio feedback when web phone is ringing or making a call\n      },\n      media: {\n        remote: this._remoteVideo,\n        local: this._localVideo,\n      },\n      enableQos: isChrome(),\n      enableMidLinesInSDP: isFirefox(),\n      ...this._webphoneSDKOptions\n    });\n    this._webphone.userAgent.audioHelper.loadAudio({\n      incoming: incomingAudio, // path to audio file for incoming call\n      outgoing: outgoingAudio, // path to aduotfile for outgoing call\n    });\n    this._webphone.userAgent.audioHelper.setVolume(\n      this._audioSettings.ringtoneMuted ? 0 : this._audioSettings.ringtoneVolume\n    );\n    // Webphone userAgent registed event\n    this._webphone.userAgent.on('registered', () => {\n      if (!this.connected) {\n        this.store.dispatch({\n          type: this.actionTypes.registered,\n        });\n        this._alert.info({\n          message: webphoneErrors.connected,\n        });\n        this._hideRegisterErrorAlert();\n      }\n    });\n    this._webphone.userAgent.on('unregistered', (e) => {\n      console.log('web phone unregistered event', e);\n      if (this.disconnecting) {\n        // user unregister\n        this.store.dispatch({\n          type: this.actionTypes.unregistered,\n        });\n        return;\n      }\n      // unavailable\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n      });\n    });\n    this._webphone.userAgent.on('registrationFailed', (response, cause) => {\n      console.error('Webphone Register Error:', response, cause);\n      // For 401\n      if ((!response) && cause === 'Connection Error') {\n        return;\n      }\n      const message = (response && response.data) || response;\n      if (\n        message && typeof message === 'string' &&\n        this._webphone.userAgent.transport.isSipErrorCode(message)\n      ) {\n        // error is handled in webphone sdk;\n        return;\n      }\n      // don't handled in connection is disconnecting\n      if (this.disconnected || this.disconnecting) {\n        return;\n      }\n      let errorCode;\n      // limit logic:\n      /*\n       * Specialties of this flow are next:\n       *   6th WebRTC in another browser receives 6th ‘EndpointID’ and 1st ‘InstanceID’,\n       *   which has been given previously to the 1st ‘EndpointID’.\n       *   It successfully registers on WSX by moving 1st ‘EndpointID’ to a blacklist state.\n       *   When 1st WebRTC client re-registers on expiration timeout,\n       *   WSX defines that 1st ‘EndpointID’ is blacklisted and responds with ‘SIP/2.0 403 Forbidden,\n       *   instance id is intercepted by another registration’ and remove it from black list.\n       *   So if 1st WebRTC will send re-register again with the same ‘InstanceID’,\n       *   it will be accepted and 6th ‘EndpointID’ will be blacklisted.\n       *   (But the WebRTC client must logout on receiving SIP/2.0 403 Forbidden error and in case of login -\n       *   provision again via Platform API and receive new InstanceID)\n       */\n      const statusCode = response ? (response.statusCode || response.status_code) : null;\n      switch (statusCode) {\n        // Webphone account overlimit\n        case 603: {\n          errorCode = webphoneErrors.webphoneCountOverLimit;\n          break;\n        }\n        // Internal server error\n        case 500: {\n          errorCode = webphoneErrors.internalServerError;\n          break;\n        }\n        // Timeout\n        case 504: {\n          errorCode = webphoneErrors.serverTimeout;\n          break;\n        }\n        default: {\n          errorCode = webphoneErrors.unknownError;\n          break;\n        }\n      }\n      this._onConnectError({ errorCode, statusCode });\n    });\n    this._webphone.userAgent.on('invite', (session) => {\n      console.log('UA invite');\n      this._onInvite(session);\n    });\n    // sip provision expired\n    this._webphone.userAgent.on('provisionUpdate', () => {\n      if (this.sessions.length === 0) {\n        this._connect({ skipTimeout: true, force: true });\n        return;\n      }\n      this._needToReconnectAfterSessionEnd = true;\n    });\n    // websocket transport connecting event\n    this._webphone.userAgent.transport.on('connecting', () => {\n      // reconnecting event\n      console.log('web phone connecting event');\n      if (this.connected || this.connectError) {\n        this.store.dispatch({\n          type: this.actionTypes.reconnect,\n        });\n      }\n    });\n    // Server connection closed event after 10 time retry with primary server and backup server\n    this._webphone.userAgent.transport.on('closed', () => {\n      console.log('web phone closed event');\n      this.store.dispatch({\n        type: this.actionTypes.setRetryCounts,\n        retryCounts: 20,\n      });\n      this._onConnectError({\n        errorCode: webphoneErrors.connectFailed,\n        ttl: 0,\n      });\n    });\n    // Timeout to switch back to primary server\n    this._webphone.userAgent.transport.on('switchBackProxy', () => {\n      if (this.sessions.length === 0) {\n        this._connect({ skipTimeout: true, force: true });\n        return;\n      }\n      this._needToReconnectAfterSessionEnd = true;\n    });\n  }\n\n  @proxify\n  async _connect({ skipTimeout = false, force = false } = {}) {\n    // do not connect if it is connecting\n    // do not reconnect when user disconnected\n    // do not connect when connected\n    if (!force && (this.connecting || this.disconnecting || this.connected)) {\n      return;\n    }\n\n    if (this._tabManager && !this._tabManager.active) {\n      // wait until page become active\n      await sleep(RETRY_DELAY);\n      await this._connect({ skipTimeout, force });\n      return;\n    }\n    if (!this._auth.loggedIn) {\n      return;\n    }\n    // when last connect is connect error, use reconnect (will show connecting badge)\n    this.store.dispatch({\n      type: (this.connectError || force) ? this.actionTypes.reconnect : this.actionTypes.connect,\n    });\n\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    const connectFunc = async () => {\n      if (!this._auth.loggedIn) {\n        return;\n      }\n      let sipProvision;\n      try {\n        sipProvision = await this._sipProvision();\n      } catch (error) {\n        console.error(error, this.connectRetryCounts);\n        if (\n          error && error.message &&\n          (error.message.indexOf('Feature [WebPhone] is not available') > -1)\n        ) {\n          this._rolesAndPermissions.refreshServiceFeatures();\n          return;\n        }\n        this._onConnectError({\n          errorCode: webphoneErrors.sipProvisionError,\n          statusCode: null,\n          ttl: 0\n        });\n        return;\n      }\n      this._createWebphone(sipProvision);\n    };\n    if (skipTimeout) {\n      await connectFunc();\n    } else {\n      this._connectTimeout = setTimeout(() => {\n        this._connectTimeout = null;\n        connectFunc();\n      }, this._getConnectTimeoutTtl());\n    }\n  }\n\n  /**\n   * connect a web phone.\n   */\n  @proxify\n  async connect() {\n    if (\n      this._auth.loggedIn &&\n      this.enabled &&\n      (this.connectionStatus === null || this.disconnected || this.connectError)\n    ) {\n      if (!isBrowserSupport()) {\n        this.store.dispatch({\n          type: this.actionTypes.connectError,\n          errorCode: webphoneErrors.browserNotSupported,\n        });\n        this._alert.warning({\n          message: webphoneErrors.browserNotSupported,\n          ttl: 0,\n        });\n        return;\n      }\n      try {\n        const phoneLines = await this._fetchDL();\n        if (phoneLines.length === 0) {\n          this._alert.warning({\n            message: webphoneErrors.noOutboundCallWithoutDL,\n          });\n        }\n      } catch (error) {\n        console.error('fetch DL failed', error);\n        this._alert.warning({\n          message: webphoneErrors.checkDLError,\n          allowDuplicates: false,\n        });\n      }\n      await this._connect({ skipTimeout: true });\n    }\n  }\n\n  _reconnectWebphoneIfNecessaryOnSessionsEmpty() {\n    if (this._needToReconnectAfterSessionEnd && this.sessions.length === 0) {\n      this._needToReconnectAfterSessionEnd = false;\n      this._connect({ skipTimeout: true, force: true });\n    }\n  }\n\n  _getConnectTimeoutTtl() {\n    if (this.connectRetryCounts < 7) {\n      return this._reconnectDelays[this.connectRetryCounts];\n    }\n    return this._reconnectDelays[6];\n  }\n\n  async _onConnectError({ errorCode, statusCode, ttl }) {\n    if (this.connectRetryCounts > 2 || this.reconnecting || this.connected || this.connectError) {\n      this.store.dispatch({\n        type: this.actionTypes.connectError,\n        errorCode,\n        statusCode,\n      });\n      this._alert.danger({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode\n        }\n      });\n      this._hideConnectingAlert();\n      // Need to show unavailable badge and reconnect in background when third retry\n      // sleep before next reconnect for slient reconnect in background\n      await sleep(this._getConnectTimeoutTtl());\n      if (!this.connectError) {\n        return;\n      }\n      this._connect({ skipTimeout: true });\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.connectFailed,\n      errorCode,\n      statusCode,\n    });\n    if (this.connectRetryCounts === 1) {\n      this._alert.warning({\n        message: errorCode,\n        ttl,\n        allowDuplicates: false,\n        payload: {\n          statusCode,\n          isConnecting: true\n        }\n      });\n      this._hideConnectFailedAlert();\n    }\n    this._connect();\n  }\n\n  _hideConnectingAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i] && m.payload.isConnecting === true) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  async _hideConnectFailedAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i] && !m.payload.isConnecting) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _hideRegisterErrorAlert() {\n    const alertIds = this._alert.messages.filter((m) => {\n      for (let i = 0, len = registerErrors.length; i < len; i++) {\n        if (m.message === registerErrors[i]) return true;\n      }\n      return false;\n    }).map(m => m.id);\n    if (alertIds.length) {\n      this._alert.dismiss(alertIds);\n    }\n  }\n\n  _disconnect() {\n    if (\n      this.disconnected ||\n      this.disconnecting\n    ) {\n      return;\n    }\n    if (this._connectTimeout) {\n      clearTimeout(this._connectTimeout);\n    }\n    this.store.dispatch({\n      type: this.actionTypes.disconnect,\n    });\n    if (this._webphone) {\n      this._sessions.forEach((session) => {\n        this.hangup(session);\n      });\n      this._removeWebphone();\n      this._sessions = new Map();\n      this._updateSessions();\n    }\n    this.store.dispatch({\n      type: this.actionTypes.unregistered,\n    });\n  }\n\n  @proxify\n  async disconnect() {\n    this._disconnect();\n  }\n\n  async _playExtendedControls(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.playing;\n    const controls = session.__rc_extendedControls.slice();\n    for (let i = 0, len = controls.length; i < len; i += 1) {\n      if (session.__rc_extendedControlStatus === extendedControlStatus.playing) {\n        if (controls[i] === ',') {\n          await sleep(2000);\n        } else {\n          await this._sendDTMF(controls[i], session);\n        }\n      } else {\n        return;\n      }\n    }\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n  }\n\n  _onAccepted(session) {\n    session.on('accepted', (incomingResponse) => {\n      if (session.__rc_callStatus === sessionStatus.finished) {\n        return;\n      }\n      console.log('accepted');\n      session.__rc_callStatus = sessionStatus.connected;\n      extractHeadersData(session, incomingResponse.headers);\n      this._onCallStart(session);\n      if (\n        session.__rc_extendedControls &&\n        session.__rc_extendedControlStatus === extendedControlStatus.pending\n      ) {\n        this._playExtendedControls(session);\n      }\n    });\n    session.on('progress', (incomingResponse) => {\n      console.log('progress...');\n      session.__rc_callStatus = sessionStatus.connecting;\n      extractHeadersData(session, incomingResponse.headers);\n      this._updateSessions();\n    });\n    session.on('rejected', () => {\n      console.log('rejected');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('failed', (response, cause) => {\n      console.log('Event: Failed');\n      console.log(cause);\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('cancel', () => {\n      console.log('Event: Cancel');\n      session.__rc_callStatus = sessionStatus.finished;\n      this._onCallEnd(session);\n    });\n    session.on('refer', () => {\n      console.log('Event: Refer');\n    });\n    session.on('replaced', (newSession) => {\n      session.__rc_callStatus = sessionStatus.replaced;\n      newSession.__rc_callStatus = sessionStatus.connected;\n      newSession.__rc_direction = callDirections.inbound;\n      this._addSession(newSession);\n      this._onAccepted(newSession);\n    });\n    session.on('muted', () => {\n      console.log('Event: Muted');\n      session.__rc_isOnMute = true;\n      session.__rc_callStatus = sessionStatus.onMute;\n      this._updateSessions();\n    });\n    session.on('unmuted', () => {\n      console.log('Event: Unmuted');\n      session.__rc_isOnMute = false;\n      session.__rc_callStatus = sessionStatus.connected;\n      this._updateSessions();\n    });\n    session.on('userMediaFailed', () => {\n      this._audioSettings.onGetUserMediaError();\n    });\n  }\n\n  _onInvite(session) {\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_direction = callDirections.inbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    extractHeadersData(session, session.request.headers);\n    session.on('rejected', () => {\n      console.log('Event: Rejected');\n      this._onCallEnd(session);\n    });\n    session.on('terminated', () => {\n      console.log('Event: Terminated');\n      this._onCallEnd(session);\n    });\n    this._onCallRing(session);\n  }\n\n  @proxify\n  async answer(sessionId) {\n    const sipSession = this._sessions.get(sessionId);\n    const session = this.sessions.find(session => session.id === sessionId);\n    if (!session || !isRing(session)) {\n      return;\n    }\n    try {\n      await this._holdOtherSession(sessionId);\n      this._onAccepted(sipSession, 'inbound');\n      await sipSession.accept(this.acceptOptions);\n      this.store.dispatch({ // for track\n        type: this.actionTypes.callAnswer,\n      });\n    } catch (e) {\n      console.log('Accept failed');\n      console.error(e);\n      if (e.code !== INCOMING_CALL_INVALID_STATE_ERROR_CODE) {\n        // FIXME:\n        // 2 means the call is answered\n        this._onCallEnd(sipSession);\n      }\n    }\n  }\n\n  @proxify\n  async reject(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session || session.__rc_callStatus === sessionStatus.finished) {\n      return;\n    }\n    try {\n      await session.reject();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async resume(sessionId) {\n    await this.unhold(sessionId);\n  }\n\n  @proxify\n  async forward(sessionId, forwardNumber) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    try {\n      let validatedResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        validatedResult = validateNumbers([forwardNumber], this._regionSettings, this._brand.id);\n        validPhoneNumber = validatedResult[0];\n      } else {\n        validatedResult =\n        await this._numberValidate.validateNumbers([forwardNumber]);\n        if (!validatedResult.result) {\n          validatedResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber\n              }\n            });\n          });\n          return false;\n        }\n        validPhoneNumber =\n        validatedResult.numbers[0] && validatedResult.numbers[0].e164;\n      }\n      session.__rc_isForwarded = true;\n      await session.forward(validPhoneNumber, this.acceptOptions);\n      console.log('Forwarded');\n      this._onCallEnd(session);\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.forwardError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async mute(sessionId) {\n    try {\n      this._sessionHandleWithId(sessionId, (session) => {\n        session.__rc_isOnMute = true;\n        session.mute();\n        this._updateSessions();\n      });\n      return true;\n    } catch (e) {\n      console.error(e);\n      this._alert.warning({\n        message: webphoneErrors.muteError\n      });\n      return false;\n    }\n  }\n\n  @proxify\n  async unmute(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_isOnMute = false;\n      session.unmute();\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  async hold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return false;\n    }\n    if (session.localHold) {\n      return true;\n    }\n    try {\n      await session.hold();\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._updateSessions();\n      this._onCallHold(session);\n      return true;\n    } catch (e) {\n      console.error('hold error:', e);\n      this._alert.warning({\n        message: webphoneErrors.holdError\n      });\n      return false;\n    }\n  }\n\n  async _holdOtherSession(currentSessionId) {\n    await Promise.all(Array.from(this._sessions, async ([sessionId, session]) => {\n      if (currentSessionId === sessionId) {\n        return;\n      }\n      if (session.localHold) {\n        return;\n      }\n      if (session.__rc_callStatus === sessionStatus.connecting) {\n        return;\n      }\n      try {\n        await session.hold();\n      } catch (e) {\n        console.error('Hold call fail');\n        throw e;\n      }\n      session.__rc_callStatus = sessionStatus.onHold;\n      this._onCallHold(session);\n    }));\n    // update cached sessions\n    this.store.dispatch({\n      type: this.actionTypes.onholdCachedSession,\n    });\n  }\n\n  @proxify\n  async unhold(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      if (session.localHold) {\n        await this._holdOtherSession(session.id);\n        this._onBeforeCallResume(session);\n        await session.unhold();\n        session.__rc_callStatus = sessionStatus.connected;\n        this._updateSessions();\n        this._onCallResume(session);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  @proxify\n  async startRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    // If the status of current session is not connected,\n    // the recording process can not be started.\n    if (session.__rc_callStatus === sessionStatus.connecting) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.startRecord();\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n      // Recording has been disabled\n      if (e && e.code === -5) {\n        this._alert.danger({\n          message: webphoneErrors.recordDisabled\n        });\n        // Disabled phone recording\n        session.__rc_recordStatus = recordStatus.noAccess;\n        this._updateSessions();\n        return;\n      }\n      this._alert.danger({\n        message: webphoneErrors.recordError,\n        payload: {\n          errorCode: e.code\n        }\n      });\n    }\n  }\n\n  @proxify\n  async stopRecord(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_recordStatus = recordStatus.pending;\n      this._updateSessions();\n      await session.stopRecord();\n      session.__rc_recordStatus = recordStatus.idle;\n      this._updateSessions();\n    } catch (e) {\n      console.error(e);\n      session.__rc_recordStatus = recordStatus.recording;\n      this._updateSessions();\n    }\n  }\n\n  @proxify\n  async park(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.park();\n      console.log('Parked');\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async transfer(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isOnTransfer = true;\n      this._updateSessions();\n      let numberResult;\n      let validPhoneNumber;\n      if (!this._permissionCheck) {\n        numberResult = validateNumbers([transferNumber], this._regionSettings, this._brand.id);\n        validPhoneNumber = numberResult && numberResult[0];\n      } else {\n        numberResult = await this._numberValidate.validateNumbers([transferNumber]);\n        if (!numberResult.result) {\n          numberResult.errors.forEach((error) => {\n            this._alert.warning({\n              message: callErrors[error.type],\n              payload: {\n                phoneNumber: error.phoneNumber\n              }\n            });\n          });\n          session.__rc_isOnTransfer = false;\n          this._updateSessions();\n          return;\n        }\n        validPhoneNumber =\n        numberResult.numbers[0] && numberResult.numbers[0].e164;\n      }\n      await session.transfer(validPhoneNumber);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._onCallEnd(session);\n    } catch (e) {\n      console.error(e);\n      session.__rc_isOnTransfer = false;\n      this._updateSessions();\n      this._alert.danger({\n        message: webphoneErrors.transferError\n      });\n    }\n  }\n\n  @proxify\n  async transferWarm(transferNumber, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.hold();\n      const newSession = session.ua.invite(transferNumber, {\n        sessionDescriptionHandlerOptions: this.acceptOptions.sessionDescriptionHandlerOptions\n      });\n      newSession.once('accepted', async () => {\n        try {\n          await session.warmTransfer(newSession);\n          console.log('Transferred');\n          this._onCallEnd(session);\n        } catch (e) {\n          console.error(e);\n        }\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async flip(flipValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      await session.flip(flipValue);\n      // this._onCallEnd(session);\n      session.__rc_isOnFlip = true;\n      console.log('Flipped');\n    } catch (e) {\n      session.__rc_isOnFlip = false;\n      this._alert.warning({\n        message: webphoneErrors.flipError\n      });\n      console.error(e);\n    }\n    this._updateSessions();\n  }\n\n  @proxify\n  async _sendDTMF(dtmfValue, session) {\n    try {\n      await session.dtmf(dtmfValue, 100);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  @proxify\n  async sendDTMF(dtmfValue, sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (session) {\n      await this._sendDTMF(dtmfValue, session);\n    }\n  }\n\n  @proxify\n  async hangup(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      this._onBeforeCallEnd(session);\n      await session.terminate();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  @proxify\n  async toVoiceMail(sessionId) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isToVoicemail = true;\n      await session.toVoicemail();\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n      this._alert.warning({\n        message: webphoneErrors.toVoiceMailError\n      });\n    }\n  }\n\n  @proxify\n  async replyWithMessage(sessionId, replyOptions) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    try {\n      session.__rc_isReplied = true;\n      await session.replyWithMessage(replyOptions);\n    } catch (e) {\n      console.error(e);\n      this._onCallEnd(session);\n    }\n  }\n\n  _sessionHandleWithId(sessionId, func) {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n    return func(session);\n  }\n\n  /**\n   * start an outbound call.\n   * @param {toNumber} recipient number\n   * @param {fromNumber} call Id\n   * @param {homeCountryId} homeCountry Id\n   */\n  @proxify\n  async makeCall({\n    toNumber,\n    fromNumber,\n    homeCountryId,\n    extendedControls,\n  }) {\n    if (!this._webphone) {\n      this._alert.warning({\n        message: this.errorCode,\n      });\n      return null;\n    }\n    const phoneLines = await this._fetchDL();\n    if (phoneLines.length === 0) {\n      this._alert.warning({\n        message: webphoneErrors.noOutboundCallWithoutDL,\n      });\n      return null;\n    }\n    await this._holdOtherSession();\n    const session = this._webphone.userAgent.invite(toNumber, {\n      sessionDescriptionHandlerOptions: this.acceptOptions.sessionDescriptionHandlerOptions,\n      fromNumber,\n      homeCountryId,\n    });\n    session.__rc_direction = callDirections.outbound;\n    session.__rc_callStatus = sessionStatus.connecting;\n    session.__rc_creationTime = Date.now();\n    session.__rc_lastActiveTime = Date.now();\n    session.__rc_fromNumber = fromNumber;\n    session.__rc_extendedControls = extendedControls;\n    session.__rc_extendedControlStatus = extendedControlStatus.pending;\n    this._onAccepted(session);\n    this._onCallInit(session);\n    return session;\n  }\n\n  @proxify\n  async updateSessionMatchedContact(sessionId, contact) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_contactMatch = contact;\n      this._updateSessions();\n    });\n  }\n\n  @proxify\n  setSessionCaching(sessionIds) {\n    this.store.dispatch({\n      type: this.actionTypes.setSessionCaching,\n      cachingSessionIds: sessionIds,\n    });\n  }\n\n  @proxify\n  clearSessionCaching() {\n    this.store.dispatch({\n      type: this.actionTypes.clearSessionCaching,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _updateSessions() {\n    this.store.dispatch({\n      type: this.actionTypes.updateSessions,\n      sessions: [...this._sessions.values()].map(normalizeSession),\n    });\n  }\n\n  _addSession(session) {\n    this._sessions.set(session.id, session);\n    this._updateSessions();\n  }\n\n  _removeSession(session) {\n    this._sessions.delete(session.id);\n    this._updateSessions();\n  }\n\n  @proxify\n  async toggleMinimized(sessionId) {\n    this._sessionHandleWithId(sessionId, (session) => {\n      session.__rc_minimized = !session.__rc_minimized;\n      this._updateSessions();\n    });\n  }\n\n  _onCallInit(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callInit,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    this._eventEmitter.emit(EVENTS.callInit, normalizedSession, this.activeSession);\n  }\n\n  _onCallStart(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callStart,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(EVENTS.callStart, normalizedSession, this.activeSession);\n  }\n\n  _onCallRing(session) {\n    this._addSession(session);\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this.store.dispatch({\n      type: this.actionTypes.callRing,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    if (\n      this._contactMatcher &&\n      (!this._tabManager || this._tabManager.active)\n    ) {\n      this._contactMatcher.triggerMatch();\n    }\n    if (this.activeSession && !isOnHold(this.activeSession)) {\n      this._webphone.userAgent.audioHelper.playIncoming(false);\n    }\n    this._eventEmitter.emit(EVENTS.callRing, normalizedSession, this.ringSession);\n  }\n\n  _onBeforeCallEnd(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.beforeCallEnd, normalizedSession, this.activeSession);\n  }\n\n  _onCallEnd(session) {\n    session.__rc_extendedControlStatus = extendedControlStatus.stopped;\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    if (!normalizedSession) {\n      return;\n    }\n    this._removeSession(session);\n    this.store.dispatch({\n      type: this.actionTypes.callEnd,\n      session: normalizedSession,\n      sessions: this.sessions,\n    });\n    this._eventEmitter.emit(\n      EVENTS.callEnd, normalizedSession, this.activeSession, this.ringSession\n    );\n    this._reconnectWebphoneIfNecessaryOnSessionsEmpty();\n  }\n\n  _onBeforeCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.beforeCallResume, normalizedSession, this.activeSession);\n  }\n\n  _onCallResume(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.callResume, normalizedSession, this.activeSession);\n  }\n\n  _onCallHold(session) {\n    const normalizedSession = find(x => x.id === session.id, this.sessions);\n    this._eventEmitter.emit(EVENTS.callHold, normalizedSession, this.activeSession);\n  }\n\n  /**\n   * Inform user what is happening with webphone,\n   * this will be invoked when webphone itself run into error situation\n   */\n  @proxify\n  async showAlert() {\n    if (!this.errorCode) {\n      return;\n    }\n    this._alert.danger({\n      message: this.errorCode,\n      allowDuplicates: false,\n      payload: {\n        statusCode: this.statusCode,\n      },\n    });\n  }\n\n  onCallStart(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callStart, handler);\n    }\n  }\n\n  onCallInit(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callInit, handler);\n    }\n  }\n\n  onCallRing(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callRing, handler);\n    }\n  }\n\n  onCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callEnd, handler);\n    }\n  }\n\n  onBeforeCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallResume, handler);\n    }\n  }\n\n  onCallResume(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callResume, handler);\n    }\n  }\n\n  onCallHold(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.callHold, handler);\n    }\n  }\n\n  onBeforeCallEnd(handler) {\n    if (typeof handler === 'function') {\n      this._eventEmitter.on(EVENTS.beforeCallEnd, handler);\n    }\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get originalSessions() {\n    return this._sessions;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n\n  get pending() {\n    return this.state.status === moduleStatuses.pending;\n  }\n\n  get ringSessionId() {\n    return this.state.ringSessionId;\n  }\n\n  get activeSessionId() {\n    return this.state.activeSessionId;\n  }\n\n  /**\n   * Current active session(Outbound and InBound that answered)\n   */\n  get activeSession() {\n    return this._selectors.activeSession();\n  }\n\n  /**\n   * Current ring session(inbound)\n   */\n  get ringSession() {\n    return this._selectors.ringSession();\n  }\n\n  get sessions() {\n    return this.state.sessions;\n  }\n\n  get ringSessions() {\n    return this._selectors.ringSessions();\n  }\n\n  get onHoldSessions() {\n    return this._selectors.onHoldSessions();\n  }\n\n  get lastEndedSessions() {\n    return this.state.lastEndedSessions;\n  }\n\n  get cachedSessions() {\n    return this._selectors.cachedSessions();\n  }\n\n  get videoElementPrepared() {\n    return this.state.videoElementPrepared;\n  }\n\n  get enabled() {\n    return this._rolesAndPermissions.webphoneEnabled;\n  }\n\n  get connectionStatus() {\n    return this.state.connectionStatus;\n  }\n\n  get connectRetryCounts() {\n    return this.state.connectRetryCounts;\n  }\n\n  get acceptOptions() {\n    return {\n      sessionDescriptionHandlerOptions: {\n        constraints: {\n          audio: {\n            deviceId: this._audioSettings.inputDeviceId,\n          },\n          video: false,\n        },\n      }\n    };\n  }\n\n  get isOnTransfer() {\n    return this.activeSession && this.activeSession.isOnTransfer;\n  }\n\n  get errorCode() {\n    return this.state.errorCode;\n  }\n\n  get statusCode() {\n    return this.state.statusCode;\n  }\n\n  get disconnecting() {\n    return this.connectionStatus === connectionStatus.disconnecting;\n  }\n\n  get connecting() {\n    return this.connectionStatus === connectionStatus.connecting;\n  }\n\n  get reconnecting() {\n    return this.connectionStatus === connectionStatus.reconnecting;\n  }\n\n  get connected() {\n    return this.connectionStatus === connectionStatus.connected;\n  }\n\n  get disconnected() {\n    return this.connectionStatus === connectionStatus.disconnected;\n  }\n\n  get connectFailed() {\n    return this.connectionStatus === connectionStatus.connectFailed;\n  }\n\n  get connectError() {\n    return this.connectionStatus === connectionStatus.connectError;\n  }\n\n  @selector\n  ringingCallOnView = [\n    () => this.ringSessions,\n    sessions => find(\n      session => !session.minimized,\n      sessions,\n    )\n  ]\n}\n"],"file":"index.js"}