{"version":3,"sources":["modules/ComposeText/index.js"],"names":["ComposeText","deps","dep","optional","alert","auth","storage","messageSender","numberValidate","contactSearch","rolesAndPermissions","conversations","options","actionTypes","composeTextActionTypes","_alert","_auth","_storage","_rolesAndPermissions","_storageKey","_reducer","_cacheReducer","_messageSender","_numberValidate","_contactSearch","_lastContactSearchResult","senderNumbersList","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","dispatch","type","initSuccess","isFreshLogin","clean","_initSenderNumber","_shouldHandleRecipient","_handleRecipient","_shouldReset","_resetModuleStatus","ready","length","searchResult","resetSuccess","cachedPhoneNumber","cache","senderNumber","updateSenderNumber","phoneNumber","dummy","toNumbers","find","toNumber","entityType","recipient","item","id","addToNumber","slice","message","ttlConfig","messageSenderMessages","noAreaCode","ttl","warning","_validateIsOnlyPager","validateResult","validateFormat","result","error","errors","_alertWarning","recipientNumberInvalids","onlyPagerPermission","noSMSPermission","text","messageText","fromNumber","map","number","typingToNumber","_validatePhoneNumber","push","send","updateTypingToNumber","entityId","toNumberMatched","shouldClean","isAdded","cleanTypingToNumber","removeToNumber","textTooLong","updateMessageText","sending","alertMessage","messages","m","dismiss","getItem","state","status","moduleStatuses","toNumberEntity","RcModule","proxify"],"mappings":"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","sourcesContent":["import { Module } from '../../lib/di';\nimport RcModule from '../../lib/RcModule';\nimport isBlank from '../../lib/isBlank';\nimport moduleStatuses from '../../enums/moduleStatuses';\n\nimport composeTextActionTypes from './actionTypes';\nimport getComposeTextReducer from './getComposeTextReducer';\nimport getCacheReducer from './getCacheReducer';\n\nimport messageSenderMessages from '../MessageSender/messageSenderMessages';\nimport proxify from '../../lib/proxy/proxify';\n/**\n * @class\n * @description Compose text managing module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Auth',\n    'Storage',\n    'MessageSender',\n    'NumberValidate',\n    'RolesAndPermissions',\n    // { dep: 'Conversations', optional: true },\n    { dep: 'ContactSearch', optional: true },\n    { dep: 'ComposeTextOptions', optional: true }\n  ]\n})\nexport default class ComposeText extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Auth} params.auth - auth module instance\n   * @param {Storage} params.storage - storage module instance\n   * @param {MessageSender} params.messageSender - messageSender module instance\n   * @param {NumberValidate} params.numberValidate - numberValidate module instance\n   * @param {ContactSearch} params.contactSearch - contactSearch module instance\n   */\n  constructor({\n    alert,\n    auth,\n    storage,\n    messageSender,\n    numberValidate,\n    contactSearch,\n    rolesAndPermissions,\n    conversations,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: composeTextActionTypes,\n    });\n\n    this._alert = alert;\n    this._auth = auth;\n    this._storage = storage;\n    this._rolesAndPermissions = rolesAndPermissions;\n    this._storageKey = 'composeText';\n    this._reducer = getComposeTextReducer(this.actionTypes);\n    this._cacheReducer = getCacheReducer(this.actionTypes);\n    this._messageSender = messageSender;\n    this._numberValidate = numberValidate;\n    this._contactSearch = contactSearch;\n    // this._conversations = conversations;\n    this._lastContactSearchResult = [];\n    this.senderNumbersList = [];\n    storage.registerReducer({ key: this._storageKey, reducer: this._cacheReducer });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (\n      this._shouldInit()\n    ) {\n      this.senderNumbersList = this._messageSender.senderNumbersList;\n      this.store.dispatch({\n        type: this.actionTypes.initSuccess,\n      });\n      if (this._auth.isFreshLogin) {\n        this.clean();\n      }\n      this._initSenderNumber();\n    } else if (\n      this._shouldHandleRecipient()\n    ) {\n      this._handleRecipient();\n    } else if (\n      this._shouldReset()\n    ) {\n      this._resetModuleStatus();\n    }\n    if (\n      this.ready &&\n      this._messageSender.senderNumbersList.length !== this.senderNumbersList.length\n    ) {\n      this.senderNumbersList = this._messageSender.senderNumbersList;\n      this._initSenderNumber();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._messageSender.ready &&\n      this._auth.ready &&\n      !this.ready\n    );\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._messageSender.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _shouldHandleRecipient() {\n    return (\n      this.ready &&\n      (!!this._contactSearch &&\n        this._contactSearch.ready &&\n        this._contactSearch.searchResult.length > 0) &&\n      this._contactSearch.searchResult !== this._lastContactSearchResult\n    );\n  }\n\n  _resetModuleStatus() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess,\n    });\n  }\n\n  _initSenderNumber() {\n    const cachedPhoneNumber = this.cache && this.cache.senderNumber;\n    if (cachedPhoneNumber) {\n      this.updateSenderNumber(cachedPhoneNumber);\n    } else {\n      this.updateSenderNumber(\n        this._messageSender.senderNumbersList[0] &&\n        this._messageSender.senderNumbersList[0].phoneNumber\n      );\n    }\n  }\n\n  _handleRecipient() {\n    const dummy = this.toNumbers.find(toNumber => !toNumber.entityType);\n    if (dummy) {\n      const recipient = this._contactSearch.searchResult.find(\n        item => item.id === dummy.id\n      );\n      if (recipient) {\n        this.addToNumber(recipient);\n        this._lastContactSearchResult = this._contactSearch.searchResult.slice();\n      }\n    }\n  }\n\n  _alertWarning(message) {\n    if (message) {\n      const ttlConfig = message !== messageSenderMessages.noAreaCode\n        ? { ttl: 0 } : null;\n      this._alert.warning({\n        message,\n        ...ttlConfig\n      });\n      return true;\n    }\n    return false;\n  }\n\n  _validatePhoneNumber(phoneNumber) {\n    if (this._validateIsOnlyPager(phoneNumber)) {\n      return null;\n    }\n    const validateResult = this._numberValidate.validateFormat([phoneNumber]);\n    if (!validateResult.result) {\n      const error = validateResult.errors[0];\n      if (error && this._alertWarning(messageSenderMessages[error.type])) {\n        return false;\n      }\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return false;\n    }\n    return true;\n  }\n\n  _validateIsOnlyPager(phoneNumber) {\n    if (\n      phoneNumber.length >= 7 &&\n      this._rolesAndPermissions.onlyPagerPermission\n    ) {\n      this._alertWarning(messageSenderMessages.noSMSPermission);\n      return true;\n    }\n    return false;\n  }\n\n  @proxify\n  async send() {\n    const text = this.messageText;\n    const fromNumber = this.senderNumber;\n    const toNumbers = this.toNumbers.map(number => number.phoneNumber);\n    const { typingToNumber } = this;\n    if (!isBlank(typingToNumber)) {\n      if (this._validatePhoneNumber(typingToNumber)) {\n        toNumbers.push(typingToNumber);\n      } else {\n        return null;\n      }\n    }\n    // this._conversations.addEntities(this.toNumbers);\n    return this._messageSender.send({ fromNumber, toNumbers, text });\n  }\n\n  @proxify\n  async updateSenderNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.updateSenderNumber,\n      number: (number || ''),\n    });\n  }\n\n  @proxify\n  async updateTypingToNumber(number) {\n    if (number.length > 30) {\n      this._alertWarning(messageSenderMessages.recipientNumberInvalids);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateTypingToNumber,\n      number,\n    });\n  }\n\n  @proxify\n  async onToNumberMatch({ entityId }) {\n    this.store.dispatch({\n      type: this.actionTypes.toNumberMatched,\n      entityId,\n    });\n  }\n\n  @proxify\n  async addToRecipients(recipient, shouldClean = true) {\n    const isAdded = await this.addToNumber(recipient);\n    if (isAdded && shouldClean) {\n      await this.cleanTypingToNumber();\n    }\n  }\n\n  @proxify\n  async cleanTypingToNumber() {\n    this.store.dispatch({\n      type: this.actionTypes.cleanTypingToNumber,\n    });\n  }\n\n  @proxify\n  async addToNumber(number) {\n    if (isBlank(number.phoneNumber)) {\n      return false;\n    }\n    if (!this._validatePhoneNumber(number.phoneNumber)) {\n      return false;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.addToNumber,\n      number,\n    });\n    return true;\n  }\n\n  @proxify\n  async removeToNumber(number) {\n    this.store.dispatch({\n      type: this.actionTypes.removeToNumber,\n      number,\n    });\n  }\n\n  @proxify\n  async updateMessageText(text) {\n    if (text.length > 1000) {\n      this._alertWarning(messageSenderMessages.textTooLong);\n      return;\n    }\n    this.store.dispatch({\n      type: this.actionTypes.updateMessageText,\n      text,\n    });\n  }\n\n  @proxify\n  async clean() {\n    this.store.dispatch({\n      type: this.actionTypes.clean,\n    });\n  }\n\n  @proxify\n  async alertMessageSending() {\n    this._alert.warning({\n      message: messageSenderMessages.sending,\n      ttl: 0,\n    });\n  }\n\n  @proxify\n  async dismissMessageSending() {\n    const alertMessage = this._alert.messages.find(m => (\n      m.message === messageSenderMessages.sending\n    ));\n    if (alertMessage && alertMessage.id) {\n      this._alert.dismiss(alertMessage.id);\n    }\n  }\n\n  get cache() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get ready() {\n    return this.status === moduleStatuses.ready;\n  }\n\n  get senderNumber() {\n    return this.state.senderNumber;\n  }\n\n  get typingToNumber() {\n    return this.state.typingToNumber;\n  }\n\n  get toNumbers() {\n    return this.state.toNumbers;\n  }\n\n  get toNumberEntity() {\n    return this.state.toNumberEntity;\n  }\n\n  get messageText() {\n    return this.state.messageText;\n  }\n}\n"],"file":"index.js"}