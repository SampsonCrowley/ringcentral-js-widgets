{"version":3,"sources":["components/GlipTeamCreation/index.js"],"names":["GlipTeamCreationModal","props","state","selectedContacts","teamName","creating","error","updateSeachString","e","setState","searchString","target","value","updateFilter","updateTeamName","name","removeContact","email","previousState","filter","c","onCancel","closeModal","onConfirm","length","createTeam","console","log","message","addContact","contact","emails","oldIndex","findIndex","concat","contacts","searchFilter","filteredContacts","slice","show","styles","errorMessage","searchInput","map","selectedContactItem","closeIcon","contactItem","contactName","contactEmail","Component","propTypes","PropTypes","bool","isRequired","func","string","array"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'ringcentral-widgets/components/Modal';\nimport SearchInput from 'ringcentral-widgets/components/SearchInput';\nimport TextInput from 'ringcentral-widgets/components/TextInput';\n\nimport styles from './styles.scss';\n\nexport default class GlipTeamCreationModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedContacts: [],\n      teamName: '',\n      creating: false,\n      error: null\n    };\n\n    this.updateSeachString = (e) => {\n      this.setState({\n        error: null\n      });\n      const searchString = e.target.value;\n      this.props.updateFilter(searchString);\n    };\n\n    this.updateTeamName = (e) => {\n      const name = e.target.value;\n      this.setState({\n        teamName: name,\n        error: null\n      });\n    };\n\n    this.removeContact = (email) => {\n      this.setState(previousState => ({\n        selectedContacts:\n          previousState.selectedContacts.filter(c => c.email !== email)\n      }));\n    };\n\n    this.onCancel = () => {\n      this.props.updateFilter('');\n      this.props.closeModal();\n      this.setState({\n        selectedContacts: [],\n        teamName: ''\n      });\n    };\n\n    this.onConfirm = async () => {\n      if (this.state.creating) {\n        return;\n      }\n      if (this.state.teamName === '') {\n        // TODO: update error message with i18n\n        this.setState({ error: 'Please enter a valid team name.' });\n        return;\n      }\n      if (this.state.selectedContacts.length === 0) {\n        // TODO: update error message with i18n\n        this.setState({ error: 'Please select team number.' });\n        return;\n      }\n      this.setState({ creating: true });\n      try {\n        await this.props.createTeam(this.state);\n        this.props.updateFilter('');\n        this.setState({\n          selectedContacts: [],\n          teamName: '',\n          creating: false\n        });\n        this.props.closeModal();\n      } catch (e) {\n        console.log(e.message);\n        this.setState({ error: e.message, creating: false });\n      }\n    };\n\n    this.addContact = (contact) => {\n      this.setState({\n        error: null\n      });\n      const email = contact.email || (contact.emails && contact.emails[0]);\n      const oldIndex = this.state.selectedContacts\n        .findIndex(c => c.email === email);\n      if (oldIndex > -1) {\n        return;\n      }\n\n      this.setState({\n        selectedContacts: [{\n          name: contact.name,\n          email\n        }].concat(this.state.selectedContacts)\n      });\n      this.props.updateFilter('');\n    };\n  }\n\n  render() {\n    let contacts;\n    if (this.props.searchFilter.length < 3) {\n      contacts = [];\n    } else {\n      contacts = this.props.filteredContacts.filter(c => c.emails.length).slice(0, 10);\n    }\n    // TODO: update title message with i18n\n    return (\n      <Modal\n        onConfirm={this.onConfirm}\n        onCancel={this.onCancel}\n        currentLocale=\"en-US\"\n        show={this.props.show}\n        title=\"Create Team\"\n        textCancel=\"Close\"\n        textConfirm={this.state.creating ? 'Creating' : 'Create'}\n      >\n        {\n          this.state.error ? (\n            <div className={styles.errorMessage}>\n              {this.state.error}\n            </div>\n          ) : null\n        }\n        <TextInput\n          className={styles.teamName}\n          value={this.state.teamName}\n          onChange={this.updateTeamName}\n          placeholder=\"Team name\"\n        />\n        <SearchInput\n          className={styles.searchInput}\n          value={this.props.searchFilter}\n          onChange={this.updateSeachString}\n          placeholder=\"Search and add people..\"\n        />\n        <div className={styles.selectedContacts}>\n          {\n            this.state.selectedContacts.map(contact => (\n              <span\n                className={styles.selectedContactItem}\n                key={contact.email}\n              >\n                {contact.name}\n                <span\n                  className={styles.closeIcon}\n                  onClick={() => this.removeContact(contact.email)}\n                >\n                  x\n                </span>\n              </span>\n            ))\n          }\n        </div>\n        <div className={styles.contacts}>\n          {\n            contacts.map(contact => (\n              <div\n                className={styles.contactItem}\n                key={contact.email || contact.emails && contact.emails[0]}\n                onClick={() => this.addContact(contact)}\n              >\n                <div className={styles.contactName} title={contact.name}>{contact.name}</div>\n                <div\n                  className={styles.contactEmail}\n                  title={contact.email || contact.emails && contact.emails[0]\n                }>\n                  {contact.email || contact.emails && contact.emails[0]}\n                </div>\n              </div>\n            ))\n          }\n        </div>\n      </Modal>\n    );\n  }\n}\n\nGlipTeamCreationModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  createTeam: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired,\n  searchFilter: PropTypes.string.isRequired,\n  filteredContacts: PropTypes.array.isRequired\n};\n"]}