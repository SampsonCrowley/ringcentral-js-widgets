{"version":3,"sources":["components/ComposeTextPanel/index.js"],"names":["ComposeTextPanel","props","state","messageText","onSenderChange","value","updateSenderNumber","cleanReceiverValue","cleanTypingToNumber","addToRecipients","receiver","shouldClean","addToNumber","isAdded","removeFromRecipients","phoneNumber","removeToNumber","nextProps","setState","senderNumbers","length","styles","root","className","showSpinner","currentLocale","outboundSMS","hasSenderNumbers","brand","typingToNumber","recipients","updateTypingToNumber","toNumbers","searchContact","searchContactList","formatContactPhone","phoneTypeRenderer","phoneSourceNameRenderer","recipientsContactInfoRenderer","recipientsContactPhoneRenderer","autoFocus","senderField","senderNumber","formatPhone","updateMessageText","sendButtonDisabled","send","inputExpandable","Component","propTypes","PropTypes","string","func","isRequired","arrayOf","shape","bool","name","entityType","phoneType","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\nimport RecipientsInput from '../RecipientsInput';\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport NoSenderAlert from './NoSenderAlert';\nimport FromField from '../FromField';\nimport MessageInput from '../MessageInput';\n\n\nclass ComposeTextPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageText: props.messageText,\n    };\n\n    this.onSenderChange = (value) => {\n      this.props.updateSenderNumber(value);\n    };\n\n\n    this.cleanReceiverValue = () => {\n      this.props.cleanTypingToNumber();\n    };\n\n    this.addToRecipients = async (receiver, shouldClean = true) => {\n      const isAdded = await this.props.addToNumber(receiver);\n      if (isAdded && shouldClean) {\n        this.props.cleanTypingToNumber();\n      }\n    };\n\n    this.removeFromRecipients = (phoneNumber) => {\n      this.props.removeToNumber({ phoneNumber });\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.messageText !== this.state.messageText) {\n      this.setState({\n        messageText: nextProps.messageText,\n      });\n    }\n  }\n\n  hasSenderNumbers() {\n    return this.props.senderNumbers.length > 0;\n  }\n\n  render() {\n    return (\n      <div className={classnames(styles.root, this.props.className)}>\n        {this.props.showSpinner ? <SpinnerOverlay /> : null}\n        <NoSenderAlert\n          currentLocale={this.props.currentLocale}\n          outboundSMS={this.props.outboundSMS}\n          hasSenderNumbers={this.hasSenderNumbers()}\n          brand={this.props.brand}\n        />\n        <RecipientsInput\n          value={this.props.typingToNumber}\n          recipientsClassName={styles.recipients}\n          onChange={this.props.updateTypingToNumber}\n          onClean={this.cleanReceiverValue}\n          recipients={this.props.toNumbers}\n          addToRecipients={this.addToRecipients}\n          removeFromRecipients={this.removeFromRecipients}\n          searchContact={this.props.searchContact}\n          searchContactList={this.props.searchContactList}\n          formatContactPhone={this.props.formatContactPhone}\n          currentLocale={this.props.currentLocale}\n          phoneTypeRenderer={this.props.phoneTypeRenderer}\n          phoneSourceNameRenderer={this.props.phoneSourceNameRenderer}\n          contactInfoRenderer={this.props.recipientsContactInfoRenderer}\n          contactPhoneRenderer={this.props.recipientsContactPhoneRenderer}\n          titleEnabled\n          autoFocus={this.props.autoFocus}\n          multiple\n        />\n        <div className={styles.senderField}>\n          <FromField\n            currentLocale={this.props.currentLocale}\n            fromNumber={this.props.senderNumber}\n            fromNumbers={this.props.senderNumbers}\n            formatPhone={this.props.formatPhone}\n            onChange={this.onSenderChange}\n            hidden={!this.hasSenderNumbers()}\n            showAnonymous={false}\n          />\n        </div>\n        <MessageInput\n          value={this.props.messageText}\n          onChange={this.props.updateMessageText}\n          disabled={this.props.sendButtonDisabled}\n          currentLocale={this.props.currentLocale}\n          onSend={this.props.send}\n          inputExpandable={this.props.inputExpandable}\n        />\n      </div>\n    );\n  }\n}\n\nComposeTextPanel.propTypes = {\n  brand: PropTypes.string,\n  className: PropTypes.string,\n  send: PropTypes.func.isRequired,\n  senderNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  sendButtonDisabled: PropTypes.bool.isRequired,\n  formatPhone: PropTypes.func.isRequired,\n  formatContactPhone: PropTypes.func.isRequired,\n  searchContact: PropTypes.func.isRequired,\n  searchContactList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    entityType: PropTypes.string.isRequired,\n    phoneType: PropTypes.string.isRequired,\n    phoneNumber: PropTypes.string.isRequired,\n  })).isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  updateSenderNumber: PropTypes.func.isRequired,\n  updateTypingToNumber: PropTypes.func.isRequired,\n  cleanTypingToNumber: PropTypes.func.isRequired,\n  addToNumber: PropTypes.func.isRequired,\n  removeToNumber: PropTypes.func.isRequired,\n  updateMessageText: PropTypes.func.isRequired,\n  messageText: PropTypes.string,\n  typingToNumber: PropTypes.string,\n  senderNumber: PropTypes.string,\n  toNumbers: PropTypes.arrayOf(PropTypes.shape({\n    phoneNumber: PropTypes.string.isRequired,\n    name: PropTypes.string,\n  })).isRequired,\n  outboundSMS: PropTypes.bool,\n  showSpinner: PropTypes.bool,\n  phoneTypeRenderer: PropTypes.func,\n  phoneSourceNameRenderer: PropTypes.func,\n  recipientsContactInfoRenderer: PropTypes.func,\n  recipientsContactPhoneRenderer: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  inputExpandable: PropTypes.bool,\n};\n\nComposeTextPanel.defaultProps = {\n  brand: 'RingCentral',\n  className: null,\n  messageText: '',\n  typingToNumber: '',\n  senderNumber: '',\n  outboundSMS: false,\n  showSpinner: false,\n  phoneTypeRenderer: undefined,\n  phoneSourceNameRenderer: undefined,\n  recipientsContactInfoRenderer: undefined,\n  recipientsContactPhoneRenderer: undefined,\n  autoFocus: false,\n  inputExpandable: undefined,\n};\n\nexport default ComposeTextPanel;\n"],"file":"index.js"}