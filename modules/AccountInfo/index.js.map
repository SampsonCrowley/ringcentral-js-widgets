{"version":3,"sources":["modules/AccountInfo/index.js"],"names":["AccountInfo","deps","dep","optional","client","rolesAndPermissions","alert","options","name","fetchFunction","account","get","readyCheckFn","_rolesAndPermissions","ready","ensureExist","_alert","_auth","loginStatus","loggedIn","_hasPermission","logout","danger","message","permissionsMessages","insufficientPrivilege","ttl","info","id","serviceInfo","brand","homeCountry","country","isoCode","mainNumber","permissions","ReadCompanyInfo","DataFetcher","selector","data","servicePlan"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcqBA,W;AAZrB;;;;OAIC,gBAAO;AACNC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI,EAGJ,OAHI,EAIJ;AAAEC,IAAAA,GAAG,EAAE,oBAAP;AAA6BC,IAAAA,QAAQ,EAAE;AAAvC,GAJI;AADA,CAAP,C;;;;;AASC;;;;;AAKA,6BAKG;AAAA;;AAAA;;AAAA,QAJDC,MAIC,QAJDA,MAIC;AAAA,QAHDC,mBAGC,QAHDA,mBAGC;AAAA,QAFDC,KAEC,QAFDA,KAEC;AAAA,QADEC,OACF;;AAAA;;AACD;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEJ,MAAAA,MAAM,EAANA,MAFF;AAGEK,MAAAA,aAAa;AAAA;AAAA;AAAA,gCAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAYL,MAAM,CAACM,OAAP,GAAiBC,GAAjB,EAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,SAHf;AAIEC,MAAAA,YAAY,EAAE;AAAA,eAAM,MAAKC,oBAAL,CAA0BC,KAAhC;AAAA;AAJhB,OAKKP,OALL;;AADC;;AAAA;;AAAA;;AASD,UAAKM,oBAAL,GAA4B,oEAAOE,oBAAP,kBAAmBV,mBAAnB,EAAwC,qBAAxC,CAA5B;AACA,UAAKW,MAAL,GAAcV,KAAd;AAVC;AAWF;;;;;;;;;;;;;;;;sBAKG,KAAKW,KAAL,CAAWC,WAAX,KAA2BA,qBAAYC,QAAvC,IACA,KAAKL,KADL,IAEA,CAAC,KAAKM,c;;;;;;uBAEA,KAAKH,KAAL,CAAWI,MAAX,E;;;AACN,oBAAI,KAAKL,MAAT,EAAiB;AACf,uBAAKA,MAAL,CAAYM,MAAZ,CAAmB;AACjBC,oBAAAA,OAAO,EAAEC,6BAAoBC,qBADZ;AAEjBC,oBAAAA,GAAG,EAAE;AAFY,mBAAnB;AAID;;;;;;;;;;;;;;;;;;wBAsBI;AACP,aAAO,KAAKC,IAAL,CAAUC,EAAjB;AACD;;;wBAEa;AACZ,aAAO,KAAKD,IAAL,CAAUE,WAAV,IAAyB,KAAKF,IAAL,CAAUE,WAAV,CAAsBC,KAAtB,CAA4BC,WAA5D;AACD;;;wBAEiB;AAChB,aAAQ,KAAKC,OAAL,IAAgB,KAAKA,OAAL,CAAaC,OAA9B,IAA0C,IAAjD;AACD;;;wBAEuB;AACtB,aAAO,KAAKN,IAAL,CAAUO,UAAjB;AACD;;;wBAEoB;AACnB,aAAO,CAAC,CAAC,KAAKrB,oBAAL,CAA0BsB,WAA1B,CAAsCC,eAA/C;AACD;;;;EA7EsCC,qB,gFAyCtCC,kB;;;;;;;WACM,CACL;AAAA,aAAM,MAAI,CAACC,IAAX;AAAA,KADK,EAEL,UAAAA,IAAI;AAAA,aAAIA,IAAI,IAAI,EAAZ;AAAA,KAFC,C;;gFAKND,kB;;;;;;;WACa,CACZ;AAAA,aAAM,MAAI,CAACX,IAAX;AAAA,KADY,EAEZ,UAAAA,IAAI;AAAA,aAAIA,IAAI,CAACE,WAAL,IAAoB,EAAxB;AAAA,KAFQ,C;;gFAKbS,kB;;;;;;;WACa,CACZ;AAAA,aAAM,MAAI,CAACT,WAAX;AAAA,KADY,EAEZ,UAAAA,WAAW;AAAA,aAAIA,WAAW,CAACW,WAAZ,IAA2B,EAA/B;AAAA,KAFC,C","sourcesContent":["import { Module } from '../../lib/di';\nimport DataFetcher from '../../lib/DataFetcher';\nimport ensureExist from '../../lib/ensureExist';\nimport { selector } from '../../lib/selector';\n\nimport loginStatus from '../Auth/loginStatus';\nimport permissionsMessages from '../RolesAndPermissions/permissionsMessages';\n\n/**\n * @class\n * @description Accound info managing module.\n */\n@Module({\n  deps: [\n    'Client',\n    'RolesAndPermissions',\n    'Alert',\n    { dep: 'AccountInfoOptions', optional: true }\n  ]\n})\nexport default class AccountInfo extends DataFetcher {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Client} params.client - client module instance\n   */\n  constructor({\n    client,\n    rolesAndPermissions,\n    alert,\n    ...options\n  }) {\n    super({\n      name: 'accountInfo',\n      client,\n      fetchFunction: async () => client.account().get(),\n      readyCheckFn: () => this._rolesAndPermissions.ready,\n      ...options,\n    });\n\n    this._rolesAndPermissions = this:: ensureExist(rolesAndPermissions, 'rolesAndPermissions');\n    this._alert = alert;\n  }\n\n  async _onStateChange() {\n    await super._onStateChange();\n    if (\n      this._auth.loginStatus === loginStatus.loggedIn &&\n      this.ready &&\n      !this._hasPermission\n    ) {\n      await this._auth.logout();\n      if (this._alert) {\n        this._alert.danger({\n          message: permissionsMessages.insufficientPrivilege,\n          ttl: 0,\n        });\n      }\n    }\n  }\n\n  @selector\n  info = [\n    () => this.data,\n    data => data || {},\n  ]\n\n  @selector\n  serviceInfo = [\n    () => this.info,\n    info => info.serviceInfo || {},\n  ]\n\n  @selector\n  servicePlan = [\n    () => this.serviceInfo,\n    serviceInfo => serviceInfo.servicePlan || {},\n  ]\n\n  get id() {\n    return this.info.id;\n  }\n\n  get country() {\n    return this.info.serviceInfo && this.info.serviceInfo.brand.homeCountry;\n  }\n\n  get countryCode() {\n    return (this.country && this.country.isoCode) || 'US';\n  }\n\n  get mainCompanyNumber() {\n    return this.info.mainNumber;\n  }\n\n  get _hasPermission() {\n    return !!this._rolesAndPermissions.permissions.ReadCompanyInfo;\n  }\n}\n"],"file":"index.js"}