{"version":3,"sources":["components/ActiveCallItemV2/index.js"],"names":["WebphoneButtons","currentLocale","session","webphoneReject","webphoneHangup","webphoneResume","webphoneAnswer","webphoneHold","showMergeCall","showHold","disableMerge","onMergeCall","hangupFunc","endIcon","EndIcon","answerBtn","rejectTitle","i18n","getString","holdTitle","unholdTitle","callStatus","sessionStatus","connecting","VoicemailIcon","styles","webphoneButton","answerButton","e","stopPropagation","id","AnswerIcon","holdBtn","mergeBtn","holdButton","active","HoldIcon","mergeTitle","mergeButton","disabled","MergeIntoConferenceIcon","webphoneButtons","rejectButton","propTypes","PropTypes","string","isRequired","object","func","bool","defaultProps","undefined","i","ActiveCallItem","props","onSelectContact","value","idx","_userSelection","setState","selected","getAvatarUrl","then","avatarUrl","call","webphoneSession","updateSessionMatchedContact","getSelectedContactIdx","nextProps","contactMatches","getContactMatches","length","contact","contactMatch","findIndex","match","getSelectedContact","state","isLogging","extraNum","contactDisplay","webphoneToVoicemail","sessionId","toVoicemailTimeout","setTimeout","isOnConferenceCall","conferenceCallParties","map","profile","_mounted","setContact","clearTimeout","telephonyStatus","startTime","offset","disableLinks","showCallDetail","telephonyStatusInfo","callDetail","split","from","name","to","fromMatches","toMatches","phoneNumber","extensionNumber","areaCode","countryCode","enableContactFallback","brand","showContactDisplayPlaceholder","sourceIcons","renderContactName","renderExtraButton","contactDisplayStyle","onClick","getPhoneNumber","fallbackContactName","getFallbackContactName","contactName","extraButton","callItemContainer","pointer","wrapper","callIcon","avatar","content","icon","getCallInfo","Component","shape","direction","number","activityMatches","array"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport sessionStatus from 'ringcentral-integration/modules/Webphone/sessionStatus';\nimport { isInbound } from 'ringcentral-integration/lib/callLogHelpers';\nimport { isOnHold } from 'ringcentral-integration/modules/Webphone/webphoneHelper';\n\nimport CallAvatar from '../CallAvatar';\nimport ContactDisplay from '../ContactDisplay';\nimport CircleButton from '../CircleButton';\nimport EndIcon from '../../assets/images/End.svg';\nimport HoldIcon from '../../assets/images/Hold.svg';\nimport VoicemailIcon from '../../assets/images/Voicemail.svg';\nimport AnswerIcon from '../../assets/images/Answer.svg';\nimport MergeIntoConferenceIcon from '../../assets/images/MergeIntoConferenceIcon.svg';\nimport MediaObject from '../MediaObject';\nimport DurationCounter from '../DurationCounter';\n\nimport styles from './styles.scss';\nimport i18n from '../ActiveCallItem/i18n';// Reuse the exsisting translations\n\nfunction WebphoneButtons({\n  currentLocale,\n  session,\n  webphoneReject,\n  webphoneHangup,\n  webphoneResume,\n  webphoneAnswer,\n  webphoneHold,\n  showMergeCall,\n  showHold,\n  disableMerge,\n  onMergeCall,\n}) {\n  if (!session) {\n    return null;\n  }\n  let hangupFunc = webphoneHangup;\n  let endIcon = EndIcon;\n  let answerBtn = null;\n\n  let rejectTitle = i18n.getString('hangup', currentLocale);\n  const holdTitle = i18n.getString('hold', currentLocale);\n  const unholdTitle = i18n.getString('unhold', currentLocale);\n\n  if (\n    isInbound(session) &&\n    session.callStatus === sessionStatus.connecting\n  ) {\n    hangupFunc = webphoneReject;\n    endIcon = VoicemailIcon;\n    rejectTitle = i18n.getString('toVoicemail', currentLocale);\n    showHold = false;\n    answerBtn = (\n      <span title={i18n.getString('accept', currentLocale)} className={styles.webphoneButton}>\n        <CircleButton\n          className={styles.answerButton}\n          onClick={(e) => {\n                e.stopPropagation();\n                webphoneAnswer(session.id);\n              }}\n          icon={AnswerIcon}\n          showBorder={false}\n            />\n      </span>\n    );\n  }\n\n  let holdBtn;\n  let mergeBtn;\n\n  if (showHold) {\n    if (isOnHold(session)) {\n      holdBtn = (\n        <span title={unholdTitle} className={styles.webphoneButton}>\n          <CircleButton\n            className={classnames(styles.holdButton, styles.active)}\n            onClick={(e) => {\n              e.stopPropagation();\n              webphoneResume(session.id);\n            }}\n            iconWidth={260}\n            iconX={120}\n            icon={HoldIcon}\n            showBorder\n          />\n        </span>\n      );\n    } else {\n      holdBtn = (\n        <span title={holdTitle} className={styles.webphoneButton}>\n          <CircleButton\n            className={styles.holdButton}\n            onClick={(e) => {\n              e.stopPropagation();\n              webphoneHold(session.id);\n            }}\n            iconWidth={260}\n            iconX={120}\n            icon={HoldIcon}\n            showBorder\n          />\n        </span>\n      );\n    }\n  }\n\n  if (showMergeCall) {\n    const mergeTitle = i18n.getString('mergeToConference', currentLocale);\n\n    mergeBtn = (\n      <span title={mergeTitle} className={styles.webphoneButton}>\n        <CircleButton\n          className={\n            classnames({\n              [styles.mergeButton]: true,\n              [styles.disabled]: disableMerge\n            })\n          }\n          onClick={(e) => {\n            e.stopPropagation();\n            onMergeCall(session.id);\n          }}\n          iconWidth={260}\n          iconX={120}\n          icon={MergeIntoConferenceIcon}\n          showBorder\n          disabled={disableMerge}\n        />\n      </span>\n    );\n  }\n\n  return (\n    <div className={styles.webphoneButtons}>\n      {mergeBtn}\n      {holdBtn}\n      <span title={rejectTitle} className={styles.webphoneButton}>\n        <CircleButton\n          className={styles.rejectButton}\n          onClick={(e) => {\n            e.stopPropagation();\n            hangupFunc(session.id);\n          }}\n          iconWidth={260}\n          iconX={120}\n          icon={endIcon}\n          showBorder={false}\n        />\n      </span>\n      {answerBtn}\n    </div>\n  );\n}\n\nWebphoneButtons.propTypes = {\n  currentLocale: PropTypes.string.isRequired,\n  session: PropTypes.object,\n  webphoneReject: PropTypes.func,\n  webphoneHangup: PropTypes.func,\n  webphoneResume: PropTypes.func,\n  webphoneHold: PropTypes.func,\n  showMergeCall: PropTypes.bool,\n  showHold: PropTypes.bool,\n  disableMerge: PropTypes.bool,\n  onMergeCall: PropTypes.func,\n  webphoneAnswer: PropTypes.func,\n};\n\nWebphoneButtons.defaultProps = {\n  session: undefined,\n  webphoneReject: undefined,\n  webphoneHangup: undefined,\n  webphoneResume: undefined,\n  webphoneHold: undefined,\n  showMergeCall: false,\n  showHold: true,\n  disableMerge: true,\n  onMergeCall: i => i,\n  webphoneAnswer: i => i,\n};\n\n/**\n * TODO: Gradually replace <ActiveCallItem/> with this component\n */\nexport default class ActiveCallItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      isLogging: false,\n      avatarUrl: null,\n      extraNum: 0\n    };\n    this._userSelection = false;\n    this.contactDisplay = null;\n\n    this.webphoneToVoicemail = (sessionId) => {\n      if (typeof this.props.webphoneToVoicemail !== 'function') {\n        return;\n      }\n      this.props.webphoneToVoicemail(sessionId);\n      this.toVoicemailTimeout = setTimeout(() => {\n        this.props.webphoneReject(sessionId);\n      }, 3000);\n    };\n  }\n\n  setContact(nextProps = this.props) {\n    const {\n      isOnConferenceCall, conferenceCallParties\n    } = nextProps;\n\n    if (isOnConferenceCall) {\n      this.setState({\n        avatarUrl: conferenceCallParties.map(profile => profile.avatarUrl)[0],\n        extraNum: conferenceCallParties.length > 0 ? conferenceCallParties.length - 1 : 0\n      });\n      return;\n    }\n\n    const selected = this.getSelectedContactIdx(nextProps);\n    this.onSelectContact(\n      this.getSelectedContact(\n        selected,\n        nextProps),\n      selected,\n    );\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    this.setContact();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.getContactMatches(nextProps) !== this.getContactMatches()) {\n      this.setContact(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n    if (this.toVoicemailTimeout) {\n      clearTimeout(this.toVoicemailTimeout);\n      this.toVoicemailTimeout = null;\n    }\n  }\n\n  getCallInfo() {\n    const {\n      call: {\n        telephonyStatus,\n        startTime,\n        offset,\n      },\n      disableLinks,\n      currentLocale,\n      showCallDetail,\n    } = this.props;\n\n    if (!showCallDetail) {\n      return null;\n    }\n\n    const telephonyStatusInfo = i18n.getString(telephonyStatus, currentLocale);\n    return (\n      <div className={styles.callDetail}>\n        {\n          disableLinks ?\n            i18n.getString('unavailable', currentLocale) :\n            <DurationCounter startTime={startTime} offset={offset} />\n        }\n        <span className={styles.split}>|</span>\n        <span title={telephonyStatusInfo}>\n          {telephonyStatusInfo}\n        </span>\n      </div>\n    );\n  }\n\n  getFallbackContactName() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.name) :\n      (this.props.call.to.name);\n  }\n\n  onSelectContact = (value, idx) => {\n    if (!value) {\n      return;\n    }\n\n    this._userSelection = true;\n    this.setState({\n      selected: idx,\n    });\n    if (value) {\n      this.props.getAvatarUrl(value).then((avatarUrl) => {\n        this.setState({ avatarUrl });\n      });\n      if (this.props.call.webphoneSession) {\n        this.props.updateSessionMatchedContact(this.props.call.webphoneSession.id, value);\n      }\n    }\n  }\n\n  getSelectedContactIdx = (nextProps = this.props) => {\n    const contactMatches = this.getContactMatches(nextProps);\n    let selected = null;\n\n    if (!nextProps.call.webphoneSession) {\n      selected = 0;\n    } else if (contactMatches && contactMatches.length) {\n      const contact = nextProps.call.webphoneSession.contactMatch;\n      if (contact) {\n        selected = contactMatches.findIndex(match =>\n          match.id === contact.id\n        );\n      }\n      if (selected === -1 || !contact) {\n        selected = 0;\n      }\n    }\n    return selected;\n  }\n\n  getSelectedContact = (selected = this.getSelectedContactIdx(), nextProps = this.props) => {\n    const contactMatches = this.getContactMatches(nextProps);\n    return (contactMatches && contactMatches[selected]) || null;\n  }\n\n  getContactMatches(nextProps = this.props) {\n    return isInbound(nextProps.call) ?\n      nextProps.call.fromMatches :\n      nextProps.call.toMatches;\n  }\n\n  getPhoneNumber() {\n    return isInbound(this.props.call) ?\n      (this.props.call.from.phoneNumber || this.props.call.from.extensionNumber) :\n      (this.props.call.to.phoneNumber || this.props.call.to.extensionNumber);\n  }\n\n  render() {\n    const {\n      call: {\n        webphoneSession,\n      },\n      disableLinks,\n      currentLocale,\n      areaCode,\n      countryCode,\n      enableContactFallback,\n      isLogging,\n      brand,\n      showContactDisplayPlaceholder,\n      webphoneHangup,\n      webphoneResume,\n      sourceIcons,\n      renderContactName,\n      renderExtraButton,\n      contactDisplayStyle,\n      isOnConferenceCall,\n      webphoneHold,\n      onClick,\n      showMergeCall,\n      showHold,\n      disableMerge,\n      onMergeCall,\n      showCallDetail,\n      webphoneAnswer,\n    } = this.props;\n\n    const { avatarUrl, extraNum } = this.state;\n    const phoneNumber = this.getPhoneNumber();\n    const contactMatches = this.getContactMatches();\n    const fallbackContactName = this.getFallbackContactName();\n    const contactName = typeof renderContactName === 'function' ?\n      renderContactName(this.props.call) :\n      undefined;\n    const extraButton = typeof renderExtraButton === 'function' ?\n      renderExtraButton(this.props.call) :\n      undefined;\n\n    return (\n      <div\n        onClick={onClick}\n        className={classnames(styles.callItemContainer, onClick\n        ? styles.pointer\n        : null)}\n      >\n        <MediaObject\n          containerCls={styles.wrapper}\n          mediaLeft={\n            <div className={classnames(styles.callIcon, styles.avatar)}>\n              <CallAvatar\n                isOnConferenceCall={isOnConferenceCall}\n                avatarUrl={avatarUrl}\n                extraNum={extraNum} />\n            </div>\n          }\n          bodyCls={styles.content}\n          mediaBody={\n            <div>\n              <ContactDisplay\n                isOnConferenceCall={isOnConferenceCall}\n                contactName={contactName}\n                className={classnames(styles.contactDisplay, contactDisplayStyle)}\n                contactMatches={contactMatches}\n                selected={this.state.selected}\n                onSelectContact={this.onSelectContact}\n                disabled\n                iconClassName={styles.icon}\n                isLogging={isLogging || this.state.isLogging}\n                fallBackName={fallbackContactName}\n                enableContactFallback={enableContactFallback}\n                areaCode={areaCode}\n                countryCode={countryCode}\n                phoneNumber={phoneNumber}\n                currentLocale={currentLocale}\n                brand={brand}\n                showPlaceholder={showContactDisplayPlaceholder}\n                showType={false}\n                sourceIcons={sourceIcons}\n                stopPropagation\n              />\n              {showCallDetail ? this.getCallInfo() : null}\n            </div>\n        }\n          mediaRight={\n            <div>\n              <WebphoneButtons\n                session={webphoneSession}\n                webphoneReject={this.webphoneToVoicemail}\n                webphoneHangup={webphoneHangup}\n                webphoneResume={webphoneResume}\n                webphoneHold={webphoneHold}\n                currentLocale={currentLocale}\n                showMergeCall={showMergeCall}\n                showHold={showHold}\n                disableMerge={disableMerge}\n                onMergeCall={onMergeCall}\n                webphoneAnswer={webphoneAnswer}\n              />\n              {extraButton}\n            </div>\n        }\n      />\n      </div>\n    );\n  }\n}\n\nActiveCallItem.propTypes = {\n  call: PropTypes.shape({\n    direction: PropTypes.string.isRequired,\n    telephonyStatus: PropTypes.string,\n    startTime: PropTypes.number.isRequired,\n    activityMatches: PropTypes.array.isRequired,\n    fromMatches: PropTypes.array.isRequired,\n    toMatches: PropTypes.array.isRequired,\n    from: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    to: PropTypes.shape({\n      phoneNumber: PropTypes.string,\n      extensionNumber: PropTypes.string,\n      name: PropTypes.string,\n    }),\n    webphoneSession: PropTypes.object,\n  }).isRequired,\n  areaCode: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  disableLinks: PropTypes.bool,\n  isLogging: PropTypes.bool,\n  webphoneReject: PropTypes.func,\n  webphoneHangup: PropTypes.func,\n  webphoneResume: PropTypes.func,\n  webphoneToVoicemail: PropTypes.func,\n  webphoneHold: PropTypes.func,\n  enableContactFallback: PropTypes.bool,\n  brand: PropTypes.string,\n  showContactDisplayPlaceholder: PropTypes.bool,\n  sourceIcons: PropTypes.object,\n  renderContactName: PropTypes.func,\n  renderExtraButton: PropTypes.func,\n  contactDisplayStyle: PropTypes.string,\n  isOnConferenceCall: PropTypes.bool,\n  onClick: PropTypes.func,\n  getAvatarUrl: PropTypes.func,\n  showMergeCall: PropTypes.bool,\n  showHold: PropTypes.bool,\n  disableMerge: PropTypes.bool,\n  onMergeCall: PropTypes.func,\n  showCallDetail: PropTypes.bool,\n  updateSessionMatchedContact: PropTypes.func,\n  webphoneAnswer: PropTypes.func,\n};\n\nActiveCallItem.defaultProps = {\n  isLogging: false,\n  disableLinks: false,\n  webphoneReject: undefined,\n  webphoneHangup: undefined,\n  webphoneResume: undefined,\n  webphoneToVoicemail: undefined,\n  webphoneHold: undefined,\n  enableContactFallback: undefined,\n  brand: 'RingCentral',\n  showContactDisplayPlaceholder: true,\n  sourceIcons: undefined,\n  renderContactName: undefined,\n  renderExtraButton: undefined,\n  contactDisplayStyle: undefined,\n  isOnConferenceCall: false,\n  onClick: undefined,\n  getAvatarUrl: i => i,\n  showMergeCall: false,\n  showHold: true,\n  disableMerge: false,\n  onMergeCall: i => i,\n  showCallDetail: false,\n  updateSessionMatchedContact: i => i,\n  webphoneAnswer: i => i,\n};\n"]}