{"version":3,"sources":["containers/SettingsPage/index.js"],"names":["mapToProps","_","phone","accountInfo","auth","brand","extensionInfo","locale","localeSettings","regionSettings","callingSettings","version","rolesAndPermissions","presence","showRegion","showCalling","showAudio","showFeedback","showUserGuide","showPresenceSettings","showMsteamsSettings","showQuickAccess","params","loginNumber","loggedIn","loginStatus","ready","extensionNumber","phoneNumber","mainCompanyNumber","join","countryCode","areaCode","showSpinner","callingEnabled","id","showReginSetting","currentLocale","brandId","ringoutEnabled","outboundSMS","permissions","OutboundSMS","InternalSMS","isCallQueueMember","dndStatus","userStatus","openPresenceSettings","hasEditPresencePermission","supportedLocales","savedLocale","hasUserGuidePermission","mapToFunctions","routerInteraction","userGuide","quickAccess","regionSettingsUrl","callingSettingsUrl","audioSettingsUrl","feedbackSettingsUrl","msteamsSettingsUrl","onLogoutButtonClick","logout","onRegionSettingsLinkClick","push","onCallingSettingsLinkClick","onAudioSettingsLinkClick","onFeedbackSettingsLinkClick","onMsteamsSettingsLinkClick","onUserGuideClick","start","onQuickAccessLinkClick","enter","setAvailable","setBusy","setDoNotDisturb","setInvisible","toggleAcceptCallQueueCalls","saveLocale","SettingsPage","SettingsPanel"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport loginStatus from 'ringcentral-integration/modules/Auth/loginStatus';\nimport formatNumber from 'ringcentral-integration/lib/formatNumber';\n\nimport SettingsPanel from '../../components/SettingsPanel';\nimport { withPhone } from '../../lib/phoneContext';\n\nfunction mapToProps(_, {\n  phone: {\n    accountInfo,\n    auth,\n    brand,\n    extensionInfo,\n    locale,\n    localeSettings,\n    regionSettings,\n    callingSettings,\n    version,\n    rolesAndPermissions,\n    presence,\n  },\n  showRegion = true,\n  showCalling = true,\n  showAudio = true,\n  showFeedback = true,\n  showUserGuide = true,\n  showPresenceSettings = true,\n  showMsteamsSettings = false,\n  showQuickAccess = false,\n  params,\n}) {\n  let loginNumber = '';\n  const loggedIn = auth.loginStatus === loginStatus.loggedIn;\n  if (\n    loggedIn &&\n    accountInfo.ready &&\n    extensionInfo.ready\n  ) {\n    // If no extensionNumber, extensionNumber field needs to be omitted\n    const extensionNumber = extensionInfo.extensionNumber &&\n      extensionInfo.extensionNumber !== '0' ? extensionInfo.extensionNumber : null;\n    const phoneNumber = [accountInfo.mainCompanyNumber, extensionNumber].join('*');\n    loginNumber = formatNumber({\n      phoneNumber,\n      countryCode: regionSettings.countryCode,\n      areaCode: regionSettings.areaCode,\n    });\n  }\n  return {\n    showSpinner: !(\n      accountInfo.ready &&\n      auth.ready &&\n      loggedIn &&\n      extensionInfo.ready &&\n      locale.ready &&\n      regionSettings.ready &&\n      (!callingSettings || callingSettings.ready) &&\n      rolesAndPermissions.ready &&\n      (!presence || presence.ready) &&\n      (!localeSettings || localeSettings.ready)\n    ),\n    showFeedback,\n    showQuickAccess,\n    showCalling: showCalling && callingSettings && rolesAndPermissions.callingEnabled,\n    showAudio: showAudio && rolesAndPermissions.callingEnabled,\n    showRegion:\n      loggedIn &&\n      brand.id === '1210' &&\n      regionSettings.showReginSetting &&\n      rolesAndPermissions.callingEnabled &&\n      showRegion,\n    loginNumber,\n    version,\n    currentLocale: locale.currentLocale,\n    brandId: brand.id,\n    ringoutEnabled: rolesAndPermissions.ringoutEnabled,\n    outboundSMS: !!rolesAndPermissions.permissions.OutboundSMS ||\n    !!rolesAndPermissions.permissions.InternalSMS,\n    isCallQueueMember: extensionInfo.isCallQueueMember,\n    dndStatus: presence && presence.dndStatus,\n    userStatus: presence && presence.userStatus,\n    openPresenceSettings: !!(presence && params && params.showPresenceSettings),\n    showPresenceSettings:\n      showPresenceSettings && rolesAndPermissions.hasEditPresencePermission,\n    supportedLocales: localeSettings && localeSettings.supportedLocales,\n    savedLocale: localeSettings && localeSettings.savedLocale,\n    showUserGuide: showUserGuide && rolesAndPermissions.hasUserGuidePermission,\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    auth,\n    presence,\n    routerInteraction,\n    localeSettings,\n    userGuide,\n    quickAccess\n  },\n  regionSettingsUrl = '/settings/region',\n  callingSettingsUrl = '/settings/calling',\n  audioSettingsUrl = '/settings/audio',\n  feedbackSettingsUrl = '/settings/feedback',\n  msteamsSettingsUrl = '/settings/msteams'\n}) {\n  return {\n    async onLogoutButtonClick() {\n      await auth.logout();\n    },\n    onRegionSettingsLinkClick() {\n      routerInteraction.push(regionSettingsUrl);\n    },\n    onCallingSettingsLinkClick() {\n      routerInteraction.push(callingSettingsUrl);\n    },\n    onAudioSettingsLinkClick() {\n      routerInteraction.push(audioSettingsUrl);\n    },\n    onFeedbackSettingsLinkClick() {\n      routerInteraction.push(feedbackSettingsUrl);\n    },\n    onMsteamsSettingsLinkClick() {\n      routerInteraction.push(msteamsSettingsUrl);\n    },\n    onUserGuideClick() {\n      userGuide.start();\n    },\n    onQuickAccessLinkClick() {\n      quickAccess.enter();\n    },\n\n    setAvailable: (...args) => (presence && presence.setAvailable(...args)),\n    setBusy: (...args) => (presence && presence.setBusy(...args)),\n    setDoNotDisturb: (...args) => (presence && presence.setDoNotDisturb(...args)),\n    setInvisible: (...args) => (presence && presence.setInvisible(...args)),\n    toggleAcceptCallQueueCalls: (...args) => (\n      presence && presence.toggleAcceptCallQueueCalls(...args)\n    ),\n    saveLocale: localeSettings && (locale => localeSettings.saveLocale(locale)),\n  };\n}\nconst SettingsPage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(SettingsPanel));\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  SettingsPage as default,\n};\n"],"file":"index.js"}