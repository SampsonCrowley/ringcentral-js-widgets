{"version":3,"sources":["modules/RateLimiter/index.js"],"names":["DEFAULT_THROTTLE_DURATION","DEFAULT_ALERT_TTL","RateLimiter","deps","dep","optional","alert","client","environment","globalStorage","throttleDuration","options","actionTypes","_beforeRequestHandler","throttling","Error","errorMessages","rateLimitReached","_checkTimestamp","store","dispatch","type","stopThrottle","_requestErrorHandler","apiResponse","message","wasThrottling","startThrottle","timestamp","Date","now","showAlert","setTimeout","_throttleDuration","_alert","_client","_environment","_storage","_storageKey","_reducer","registerReducer","key","reducer","_timeoutId","_lastEnvironmentCounter","subscribe","ready","_bindHandlers","initSuccess","changeCounter","danger","ttl","allowDuplicates","_unbindHandlers","service","platform","on","events","requestError","beforeRequest","removeListener","state","status","getItem","moduleStatuses","RcModule","proxify"],"mappings":"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","sourcesContent":["import RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport actionTypes from './actionTypes';\nimport moduleStatuses from '../../enums/moduleStatuses';\nimport getRateLimiterReducer, { getTimestampReducer } from './getRateLimiterReducer';\nimport errorMessages from './errorMessages';\nimport proxify from '../../lib/proxy/proxify';\n\nconst DEFAULT_THROTTLE_DURATION = 61 * 1000;\nconst DEFAULT_ALERT_TTL = 5 * 1000;\n\n/**\n * @class\n * @description Rate limiter managing module\n */\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    { dep: 'Environment', optional: true },\n    'GlobalStorage',\n    { dep: 'RateLimiterOptions', optional: true }\n  ]\n})\nexport default class RateLimiter extends RcModule {\n  /**\n   * @constructor\n   * @param {Object} params - params object\n   * @param {Alert} params.alert - alert module instance\n   * @param {Client} params.client - client module instance\n   * @param {Environment} params.environment - environment module instance\n   * @param {GlobalStorage} params.globalStorage - globalStorage module instance\n   * @param {Number} params.throttleDuration - throttle duration, default 61 seconds\n   */\n  constructor({\n    alert,\n    client,\n    environment,\n    globalStorage,\n    throttleDuration = DEFAULT_THROTTLE_DURATION,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._environment = environment;\n    this._storage = globalStorage;\n    this._throttleDuration = throttleDuration;\n    this._storageKey = 'rateLimiterTimestamp';\n    this._reducer = getRateLimiterReducer(this.actionTypes);\n    this._storage.registerReducer({\n      key: this._storageKey,\n      reducer: getTimestampReducer(this.actionTypes),\n    });\n    this._timeoutId = null;\n    this._lastEnvironmentCounter = 0;\n  }\n  initialize() {\n    this.store.subscribe(async () => {\n      if (\n        !this.ready &&\n        this._storage.ready &&\n        (!this._environment || this._environment.ready)\n      ) {\n        this._bindHandlers();\n        this.store.dispatch({\n          type: this.actionTypes.initSuccess,\n        });\n      } else if (\n        this.ready &&\n        this._environment &&\n        this._environment.changeCounter !== this._lastEnvironmentCounter\n      ) {\n        this._lastEnvironmentCounter = this._environment.changeCounter;\n        this._bindHandlers();\n      }\n    });\n  }\n  _beforeRequestHandler = () => {\n    if (this.throttling) {\n      throw new Error(errorMessages.rateLimitReached);\n    }\n  }\n  _checkTimestamp = () => {\n    if (!this.throttling) {\n      this.store.dispatch({\n        type: this.actionTypes.stopThrottle,\n      });\n    }\n  }\n  @proxify\n  async showAlert() {\n    if (this.throttling && this._alert) {\n      this._alert.danger({\n        message: errorMessages.rateLimitReached,\n        ttl: DEFAULT_ALERT_TTL,\n        allowDuplicates: false,\n      });\n    }\n  }\n  _requestErrorHandler = (apiResponse) => {\n    if (\n      apiResponse instanceof Error &&\n      apiResponse.message === 'Request rate exceeded'\n    ) {\n      const wasThrottling = this.throttling;\n      this.store.dispatch({\n        type: this.actionTypes.startThrottle,\n        timestamp: Date.now(),\n      });\n      if (!wasThrottling) {\n        this.showAlert();\n      }\n      setTimeout(this._checkTimestamp, this._throttleDuration);\n    }\n  }\n  _bindHandlers() {\n    if (this._unbindHandlers) {\n      this._unbindHandlers();\n    }\n    const client = this._client.service.platform().client();\n    client.on(client.events.requestError, this._requestErrorHandler);\n    client.on(client.events.beforeRequest, this._beforeRequestHandler);\n    this._unbindHandlers = () => {\n      client.removeListener(client.events.requestError, this._requestErrorHandler);\n      client.removeListener(client.events.beforeRequest, this._beforeRequestHandler);\n      this._unbindHandlers = null;\n    };\n  }\n\n  get ttl() {\n    return this.throttling ? this._throttleDuration - (Date.now() - this.timestamp) : 0;\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get timestamp() {\n    return this._storage.getItem(this._storageKey);\n  }\n\n  get throttleDuration() {\n    return this._throttleDuration;\n  }\n\n  get throttling() {\n    return Date.now() - this._storage.getItem(this._storageKey) <= this._throttleDuration;\n  }\n\n  get ready() {\n    return this.state.status === moduleStatuses.ready;\n  }\n}\n"],"file":"index.js"}