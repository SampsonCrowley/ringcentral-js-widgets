{"version":3,"sources":["containers/ConferencePage/index.js"],"names":["mapToProps","_","phone","conference","regionSettings","locale","currentLocale","localeReady","ready","composeText","serviceFeatures","extensionInfo","brand","data","hostCode","participantCode","allowJoinBeforeHost","phoneNumbers","countryCounter","acc","item","country","isoCode","dialInNumbers","countryName","countryNames","getString","region","location","phoneNumber","disableTxtBtn","SMS","enabled","Pager","dialInNumber","additionalNumbers","countryCode","areaCode","code","name","showSpinner","mapToFunctions","routerInteraction","call","alert","msg","warning","message","updateDialInNumber","updateAdditionalNumbers","additionalDialInNumbers","inviteWithText","text","updateMessageText","onInviteWithText","push","joinAsHost","onJoinAsHost","history","onAllowJoinBeforeHostChange","updateEnableJoinBeforeHost","showHelpCommands","ConferencePage","ConferencePanel","default"],"mappings":"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","file":"index.js","sourcesContent":["import { connect } from 'react-redux';\nimport { reduce, map } from 'ramda';\nimport ConferencePanel from '../../components/ConferencePanel';\nimport withPhone from '../../lib/withPhone';\nimport countryNames from '../../lib/countryNames';\n\nfunction mapToProps(_, {\n  phone: {\n    conference,\n    regionSettings,\n    locale: {\n      currentLocale,\n      ready: localeReady\n    },\n    composeText,\n    extensionInfo: { serviceFeatures },\n    brand\n  },\n}) {\n  const {\n    hostCode = '',\n    participantCode = '',\n    allowJoinBeforeHost = false,\n    phoneNumbers = [],\n  } = conference.data || {};\n  const countryCounter = reduce((acc, item) => {\n    if (!acc[item.country.isoCode]) {\n      acc[item.country.isoCode] = 1;\n    } else {\n      acc[item.country.isoCode] += 1;\n    }\n    return acc;\n  }, {}, phoneNumbers);\n  const dialInNumbers = map((item) => {\n    const countryName = countryNames.getString(item.country.isoCode, currentLocale);\n    // only show the provinces of canada\n    return {\n      region: countryCounter[item.country.isoCode] > 1 ?\n        `${countryName}, ${item.location}` :\n        countryName,\n      phoneNumber: item.phoneNumber\n    };\n  }, phoneNumbers);\n  const disableTxtBtn = (\n    (!serviceFeatures.SMS || !serviceFeatures.SMS.enabled) &&\n    (!serviceFeatures.Pager || !serviceFeatures.Pager.enabled)\n  );\n  return {\n    dialInNumbers,\n    dialInNumber: conference.dialInNumber || '',\n    hostCode,\n    participantCode,\n    allowJoinBeforeHost,\n    additionalNumbers: conference.additionalNumbers,\n    disableTxtBtn,\n    countryCode: regionSettings.countryCode,\n    areaCode: regionSettings.areaCode,\n    currentLocale,\n    brand: {\n      code: brand.code,\n      name: brand.name\n    },\n    showSpinner: !(\n      conference.ready &&\n      regionSettings.ready &&\n      localeReady &&\n      composeText.ready\n    ),\n  };\n}\n\nfunction mapToFunctions(_, {\n  phone: {\n    conference,\n    composeText,\n    routerInteraction,\n    call,\n    alert\n  },\n}) {\n  return {\n    alert(msg) {\n      alert.warning({ message: msg });\n    },\n    updateDialInNumber(dialInNumber) {\n      conference.updateDialInNumber(dialInNumber);\n    },\n    updateAdditionalNumbers(additionalDialInNumbers) {\n      conference.updateAdditionalNumbers(additionalDialInNumbers);\n    },\n    inviteWithText(text) {\n      composeText.updateMessageText(text);\n      // for track\n      conference.onInviteWithText();\n      routerInteraction.push('/composeText');\n    },\n    joinAsHost(phoneNumber) {\n      // for track\n      conference.onJoinAsHost();\n      routerInteraction.history.push('/dialer');\n      call.call({ phoneNumber });\n    },\n    onAllowJoinBeforeHostChange(allowJoinBeforeHost) {\n      conference.updateEnableJoinBeforeHost(allowJoinBeforeHost);\n    },\n    showHelpCommands() {\n      routerInteraction.push('/conference/commands');\n    }\n  };\n}\n\n\nconst ConferencePage = withPhone(connect(\n  mapToProps,\n  mapToFunctions,\n)(ConferencePanel));\n\n\nexport {\n  mapToFunctions,\n  mapToProps,\n  ConferencePage as default,\n};\n"]}