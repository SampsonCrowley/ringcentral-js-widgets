{"version":3,"sources":["modules/Meeting/index.js"],"names":["UTC_TIMEZONE_ID","MeetingType","SCHEDULED","RECURRING","INSTANT","getDefaultMeetingSettings","extensionName","startTime","topic","meetingType","password","schedule","durationInMinutes","timeZone","id","host","allowJoinBeforeHost","startHostVideo","startParticipantsVideo","audioOptions","_requireMeetingPassword","_showDate","_showTime","_saved","MeetingErrors","type","_errors","push","message","length","Meeting","deps","dep","optional","alert","client","extensionInfo","storage","availabilityMonitor","reducers","options","actionTypes","_alert","_client","_extensionInfo","_storage","_availabilityMonitor","_reducer","_lastMeetingSettingKey","registerReducer","key","reducer","store","subscribe","_onStateChange","_shouldInit","_init","_shouldReset","_reset","ready","pending","dispatch","initSuccess","resetSuccess","_initMeeting","info","name","now","Date","setHours","getHours","updateMeeting","meeting","lastMeetingInfo","dialInNumbers","meetingId","map","phoneNumber","location","join","country","filterFormattedNumber","countryCode","isoCode","formatTypes","international","isAlertSuccess","opener","isScheduling","initScheduling","_validate","formattedMeeting","_format","Promise","all","account","extension","post","serviceInfo","get","resp","scheduled","mobileDialingNumberTpl","getMobileDialingNumberTpl","phoneDialingNumberTpl","getPhoneDialingNumberTpl","result","scheduledHook","setTimeout","meetingStatus","scheduledSuccess","resetScheduling","error","warning","apiResponse","json","errorCode","permissionName","danger","insufficientPermissions","payload","internalError","_isUpdating","initUpdating","put","updated","updatedSuccess","resetUpdating","state","updatingStatus","obj","formatted","_schedule","moment","utc","format","invalidMeetingInfo","errors","emptyTopic","noPassword","durationIncorrect","getItem","schedulingStatus","scheduleStatus","scheduling","status","RcModule","background","proxify"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { find } from 'ramda';\nimport format, { formatTypes } from '@ringcentral-integration/phone-number/lib/format';\n\nimport RcModule from '../../lib/RcModule';\nimport { Module } from '../../lib/di';\nimport proxify from '../../lib/proxy/proxify';\nimport background from '../../lib/background';\nimport actionTypes from './actionTypes';\nimport scheduleStatus from './scheduleStatus';\nimport meetingStatus from './meetingStatus';\nimport getMeetingReducer, { getMeetingStorageReducer } from './getMeetingReducer';\n\nexport const UTC_TIMEZONE_ID = '1';\nexport const MeetingType = {\n  SCHEDULED: 'Scheduled',\n  RECURRING: 'Recurring',\n  INSTANT: 'Instant',\n};\n\n// Basic default meeting type information\nexport const getDefaultMeetingSettings = (extensionName, startTime) => ({\n  topic: `${extensionName}'s Meeting`,\n  meetingType: MeetingType.SCHEDULED,\n  password: null,\n  schedule: {\n    startTime,\n    durationInMinutes: 60,\n    timeZone: {\n      id: UTC_TIMEZONE_ID\n    }\n  },\n  host: {\n    id: null,\n  },\n  allowJoinBeforeHost: false,\n  startHostVideo: false,\n  startParticipantsVideo: false,\n  audioOptions: ['Phone', 'ComputerAudio'],\n  _requireMeetingPassword: false,\n  _showDate: false,\n  _showTime: false,\n  _saved: false,\n});\n\nexport class MeetingErrors {\n  constructor(type) {\n    this._errors = [];\n    if (type) this._errors.push({ message: type });\n  }\n\n  push(type) {\n    if (type) this._errors.push({ message: type });\n  }\n\n  get all() {\n    return this._errors;\n  }\n\n  get length() {\n    return this._errors.length;\n  }\n}\n\n@Module({\n  deps: [\n    'Alert',\n    'Client',\n    'ExtensionInfo',\n    'Storage',\n    { dep: 'AvailabilityMonitor', optional: true },\n    { dep: 'MeetingOptions', optional: true }\n  ]\n})\nexport default class Meeting extends RcModule {\n  constructor({\n    alert,\n    client,\n    extensionInfo,\n    storage,\n    availabilityMonitor,\n    reducers,\n    ...options\n  }) {\n    super({\n      ...options,\n      actionTypes: options.actionTypes || actionTypes,\n    });\n    this._alert = alert;\n    this._client = client;\n    this._extensionInfo = extensionInfo;\n    this._storage = storage;\n    this._availabilityMonitor = availabilityMonitor;\n    this._reducer = getMeetingReducer(this.actionTypes);\n    this._lastMeetingSettingKey = 'lastMeetingSetting';\n    this._storage.registerReducer({\n      key: this._lastMeetingSettingKey,\n      reducer: getMeetingStorageReducer(this.actionTypes)\n    });\n  }\n\n  initialize() {\n    this.store.subscribe(() => this._onStateChange());\n  }\n\n  _onStateChange() {\n    if (this._shouldInit()) {\n      this._init();\n    } else if (this._shouldReset()) {\n      this._reset();\n    }\n  }\n\n  _shouldInit() {\n    return (\n      this._alert.ready &&\n      this._storage.ready &&\n      this._extensionInfo.ready &&\n      (!this._availabilityMonitor || this._availabilityMonitor.ready) &&\n      this.pending\n    );\n  }\n\n  _init() {\n    this.store.dispatch({\n      type: this.actionTypes.initSuccess\n    });\n  }\n\n  _shouldReset() {\n    return (\n      (\n        !this._alert.ready ||\n        !this._storage.ready ||\n        !this._extensionInfo.ready\n      ) &&\n      this.ready\n    );\n  }\n\n  _reset() {\n    this.store.dispatch({\n      type: this.actionTypes.resetSuccess\n    });\n  }\n\n  /**\n   * Init basic meeting information\n   * also load meeting settings from previous one.\n   */\n  @background\n  init() {\n    this._initMeeting();\n  }\n\n  @proxify\n  reload() {\n    this._initMeeting();\n  }\n\n  _initMeeting() {\n    const extensionName = this._extensionInfo.info.name || '';\n    const now = new Date();\n    const startTime = now.setHours(now.getHours() + 1, 0, 0);\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting: {\n        ...getDefaultMeetingSettings(extensionName, startTime),\n        // Load last meeting settings\n        ...this.lastMeetingInfo\n      }\n    });\n  }\n\n  @proxify\n  update(meeting) {\n    this.store.dispatch({\n      type: this.actionTypes.updateMeeting,\n      meeting\n    });\n  }\n\n  getMobileDialingNumberTpl(dialInNumbers, meetingId) {\n    return dialInNumbers\n      .map(({ phoneNumber, location = '' }) => `${phoneNumber},,${meetingId}# ${location}`)\n      .join('\\n    ');\n  }\n\n  getPhoneDialingNumberTpl(dialInNumbers) {\n    return dialInNumbers\n      .map(({ phoneNumber, location = '', country }) => {\n        const filterFormattedNumber = format({\n          phoneNumber,\n          countryCode: country.isoCode,\n          type: formatTypes.international\n        });\n        return `${filterFormattedNumber}${location}`;\n      })\n      .join('\\n    ');\n  }\n\n  @proxify\n  async schedule(meeting, { isAlertSuccess = true } = {}, opener) {\n    if (this.isScheduling) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initScheduling\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      const [resp, serviceInfo] = await Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .post(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get()\n      ]);\n\n      this.store.dispatch({\n        type: this.actionTypes.scheduled,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        }\n      });\n      const mobileDialingNumberTpl = this.getMobileDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      const phoneDialingNumberTpl = this.getPhoneDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      serviceInfo.mobileDialingNumberTpl = mobileDialingNumberTpl;\n      serviceInfo.phoneDialingNumberTpl = phoneDialingNumberTpl;\n      const result = {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n      if (typeof this.scheduledHook === 'function') {\n        await this.scheduledHook(result, opener);\n      }\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been scheduled\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.scheduledSuccess\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetScheduling\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      } else if (errors && errors.apiResponse) {\n        const { errorCode, permissionName } = errors.apiResponse.json();\n        if (errorCode === 'InsufficientPermissions' && permissionName) {\n          this._alert.danger({\n            message: meetingStatus.insufficientPermissions,\n            payload: {\n              permissionName,\n            },\n          });\n        } else {\n          this._alert.danger({\n            message: meetingStatus.internalError,\n          });\n        }\n      }\n      return null;\n    }\n  }\n\n  @proxify\n  async getMeeting(meetingId) {\n    return this._client\n      .account()\n      .extension()\n      .meeting(meetingId)\n      .get();\n  }\n\n  @proxify\n  async updateMeeting(meetingId, meeting, { isAlertSuccess = false } = {}, opener) {\n    if (this._isUpdating(meetingId)) return null;\n    meeting = meeting || this.meeting;\n    try {\n      this.store.dispatch({\n        type: this.actionTypes.initUpdating,\n        meetingId,\n      });\n      // Validate meeting\n      this._validate(meeting);\n      const formattedMeeting = this._format(meeting);\n\n      const [resp, serviceInfo] = await Promise.all([\n        this._client\n          .account()\n          .extension()\n          .meeting(meetingId)\n          .put(formattedMeeting),\n        this._client\n          .account()\n          .extension()\n          .meeting()\n          .serviceInfo()\n          .get()\n      ]);\n\n      this.store.dispatch({\n        type: this.actionTypes.updated,\n        meeting: {\n          ...formattedMeeting,\n          _saved: meeting._saved\n        },\n        meetingId,\n      });\n      const mobileDialingNumberTpl = this.getMobileDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      const phoneDialingNumberTpl = this.getPhoneDialingNumberTpl(serviceInfo.dialInNumbers,\n        resp.id);\n      serviceInfo.mobileDialingNumberTpl = mobileDialingNumberTpl;\n      serviceInfo.phoneDialingNumberTpl = phoneDialingNumberTpl;\n      const result = {\n        meeting: resp,\n        serviceInfo,\n        extensionInfo: this.extensionInfo\n      };\n      if (typeof this.scheduledHook === 'function') {\n        await this.scheduledHook(result, opener);\n      }\n      // Reload meeting info\n      this._initMeeting();\n      // Notify user the meeting has been updated\n      if (isAlertSuccess) {\n        setTimeout(() => {\n          this._alert.info({\n            message: meetingStatus.updatedSuccess\n          });\n        }, 50);\n      }\n      return result;\n    } catch (errors) {\n      this.store.dispatch({\n        type: this.actionTypes.resetUpdating,\n        meetingId,\n      });\n      if (errors instanceof MeetingErrors) {\n        for (const error of errors.all) {\n          this._alert.warning(error);\n        }\n      } else if (errors && errors.apiResponse) {\n        const { errorCode, permissionName } = errors.apiResponse.json();\n        if (errorCode === 'InsufficientPermissions' && permissionName) {\n          this._alert.danger({\n            message: meetingStatus.insufficientPermissions,\n            payload: {\n              permissionName,\n            },\n          });\n        } else {\n          this._alert.danger({\n            message: meetingStatus.internalError,\n          });\n        }\n      }\n      return null;\n    }\n  }\n\n  /**\n   * @param {number} meetingId\n   */\n  _isUpdating(meetingId) {\n    return this.state.updatingStatus &&\n      find(obj => obj.meetingId === meetingId, this.state.updatingStatus);\n  }\n\n  /**\n   * Format meeting information.\n   * @param {Object} meeting\n   */\n  _format(meeting) {\n    const {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n      password,\n      schedule,\n    } = meeting;\n    const formatted = {\n      topic,\n      meetingType,\n      allowJoinBeforeHost,\n      startHostVideo,\n      startParticipantsVideo,\n      audioOptions,\n    };\n    if (password) {\n      formatted.password = password;\n    }\n    // Recurring meetings do not have schedule info\n    if (meetingType !== MeetingType.RECURRING) {\n      const _schedule = {\n        durationInMinutes: schedule.durationInMinutes,\n        timeZone: { id: UTC_TIMEZONE_ID }\n      };\n      if (schedule.startTime) {\n        // Format selected startTime to utc standard time\n        // Timezone information is not included here\n        _schedule.startTime = moment.utc(schedule.startTime).format();\n      }\n      formatted.schedule = _schedule;\n    }\n    return formatted;\n  }\n\n  /**\n   * Validate meeting information format.\n   * @param {Object} meeting\n   * @throws\n   */\n  _validate(meeting) {\n    if (!meeting) {\n      throw new MeetingErrors(meetingStatus.invalidMeetingInfo);\n    }\n    const {\n      topic,\n      password,\n      schedule,\n      _requireMeetingPassword,\n    } = meeting;\n    const errors = new MeetingErrors();\n    if (topic.length <= 0) {\n      errors.push(meetingStatus.emptyTopic);\n    }\n    if (_requireMeetingPassword && (!password || password.length <= 0)) {\n      errors.push(meetingStatus.noPassword);\n    }\n    if (schedule) {\n      if (schedule.durationInMinutes < 0) {\n        errors.push(meetingStatus.durationIncorrect);\n      }\n    }\n    if (errors.length > 0) {\n      throw errors;\n    }\n  }\n\n  get extensionInfo() {\n    return this._extensionInfo.info;\n  }\n\n  get meeting() {\n    return this.state.meeting;\n  }\n\n  get lastMeetingInfo() {\n    const state = this._storage.getItem(this._lastMeetingSettingKey);\n    return state;\n  }\n\n  get isScheduling() {\n    return this.state.schedulingStatus === scheduleStatus.scheduling;\n  }\n\n  get isUpdating() {\n    return this.meeting && this.meeting.id && this._isUpdating(this.meeting.id);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n}\n"],"file":"index.js"}