{"version":3,"sources":["lib/phoneContext/index.tsx"],"names":["PhoneContext","React","createContext","PhoneProvider","phone","theme","children","Children","only","withPhone","Comp","WithPhone","props","connectModule","fn","WithModule","_","getUIProps","getUIFunctions"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;AAOA,IAAMA,YAAY,GAAGC,kBAAMC,aAAN,CAAoB,IAApB,CAArB;;eACeF,Y;;;AAER,IAAMG,aAAyD,GAAG,SAA5DA,aAA4D;AAAA,MACvEC,KADuE,QACvEA,KADuE;AAAA,MAEvEC,KAFuE,QAEvEA,KAFuE;AAAA,MAGvEC,QAHuE,QAGvEA,QAHuE;AAAA,SAKvE,gCAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF;AAA9B,KACGH,kBAAMM,QAAN,CAAeC,IAAf,CAAoBF,QAApB,CADH,CALuE;AAAA,CAAlE;;;;AAUA,SAASG,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,WAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,WACE,gCAAC,YAAD,CAAc,QAAd,QAEI,UAACR,KAAD;AAAA,aACE,gCAAC,IAAD;AACE,QAAA,KAAK,EAAEA;AADT,SAEMQ,KAFN,EADF;AAAA,KAFJ,CADF;AAYD;;AACD,SAAOD,SAAP;AACD,C,CAED;;;AACO,SAASE,aAAT,CAAuBC,EAAvB,EAA2B;AAChC,SAAO,UAACJ,IAAD,EAAU;AACf,QAAMK,UAAU,GAAG,yBACjB,UAACC,CAAD,EAAIJ,KAAJ;AAAA,aAAmBE,EAAE,CAACF,KAAK,CAACR,KAAP,CAAF,CAAgBa,UAAhB,CAA2BL,KAA3B,CAAnB;AAAA,KADiB,EAEjB,UAACI,CAAD,EAAIJ,KAAJ;AAAA,aAAmBE,EAAE,CAACF,KAAK,CAACR,KAAP,CAAF,CAAgBc,cAAhB,CAA+BN,KAA/B,CAAnB;AAAA,KAFiB,EAGjBF,IAHiB,CAAnB;AAIA,WAAO,UAACE,KAAD;AAAA,aACL,gCAAC,YAAD,CAAc,QAAd,QAEI,UAACR,KAAD;AAAA,eACE,gCAAC,UAAD;AACE,UAAA,KAAK,EAAEA;AADT,WAEMQ,KAFN,EADF;AAAA,OAFJ,CADK;AAAA,KAAP;AAYD,GAjBD;AAkBD","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nexport interface PhoneProviderProps<T = any>{\n  phone: T;\n  theme?: any;\n}\n\nconst PhoneContext = React.createContext(null);\nexport default PhoneContext;\n\nexport const PhoneProvider:React.FunctionComponent<PhoneProviderProps> = ({\n  phone,\n  theme,\n  children,\n}) => (\n  <PhoneContext.Provider value={phone}>\n    {React.Children.only(children)}\n  </PhoneContext.Provider>\n);\n\nexport function withPhone(Comp) {\n  function WithPhone(props) {\n    return (\n      <PhoneContext.Consumer>\n        {\n          (phone) => (\n            <Comp\n              phone={phone}\n              {...props}\n            />\n          )\n        }\n      </PhoneContext.Consumer>\n    );\n  }\n  return WithPhone;\n}\n\n// router properties\nexport function connectModule(fn) {\n  return (Comp) => {\n    const WithModule = connect(\n      (_, props: any) => fn(props.phone).getUIProps(props),\n      (_, props: any) => fn(props.phone).getUIFunctions(props),\n    )(Comp);\n    return (props) => (\n      <PhoneContext.Consumer>\n        {\n          (phone) => (\n            <WithModule\n              phone={phone}\n              {...props}\n            />\n          )\n        }\n      </PhoneContext.Consumer>\n    );\n  };\n}\n"],"file":"index.js"}