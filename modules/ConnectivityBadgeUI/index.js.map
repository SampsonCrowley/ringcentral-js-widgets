{"version":3,"sources":["modules/ConnectivityBadgeUI/index.ts"],"names":["ConnectivityBadgeUI","name","deps","locale","connectivityManager","options","_locale","_connectivityManager","currentLocale","mode","ready","webphoneConnecting","hasLimitedStatusError","onClick","isWebphoneUnavailableMode","checkWebphoneAndConnect","checkStatus","showConnectivityAlert","showBadgeAlert","RcUIModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASqBA,mB,WAPpB,wBAAO;AACNC,EAAAA,IAAI,EAAE,qBADA;AAENC,EAAAA,IAAI,EAAE,CACJ,QADI,EAEJ,qBAFI;AAFA,CAAP,C;;;;;AAYC,qCAIG;AAAA;;AAAA,QAHDC,MAGC,QAHDA,MAGC;AAAA,QAFDC,mBAEC,QAFDA,mBAEC;AAAA,QADEC,OACF;;AAAA;;AACD,+GACKA,OADL;AADC,UARHC,OAQG;AAAA,UANHC,oBAMG;AAKD,UAAKD,OAAL,GAAeH,MAAf;AACA,UAAKI,oBAAL,GAA4BH,mBAA5B;AANC;AAOF;;;;iCAEY;AACX,aAAO;AACLI,QAAAA,aAAa,EAAE,KAAKF,OAAL,CAAaE,aADvB;AAELC,QAAAA,IAAI,EAAG,KAAKF,oBAAL,CAA0BG,KAA1B,IAAmC,KAAKH,oBAAL,CAA0BE,IAA9D,IAAuE,IAFxE;AAGLE,QAAAA,kBAAkB,EAAE,KAAKJ,oBAAL,CAA0BG,KAA1B,IAClB,KAAKH,oBAAL,CAA0BI,kBAJvB;AAKLC,QAAAA,qBAAqB,EAAE,KAAKL,oBAAL,CAA0BG,KAA1B,IACrB,KAAKH,oBAAL,CAA0BK;AANvB,OAAP;AAQD;;;qCAEgB;AACf,UAAMR,mBAAmB,GAAG,KAAKG,oBAAjC;AACA,aAAO;AACLM,QAAAA,OADK,qBACK;AACR,cAAIT,mBAAmB,CAACU,yBAAxB,EAAmD;AACjDV,YAAAA,mBAAmB,CAACW,uBAApB;AACD,WAFD,MAEO,IAAIX,mBAAmB,CAACQ,qBAAxB,EAA+C;AACpDR,YAAAA,mBAAmB,CAACY,WAApB;AACD,WAFM,MAEA;AACLZ,YAAAA,mBAAmB,CAACa,qBAApB;AACD;AACF,SATI;AAULC,QAAAA,cAAc,EAAEd,mBAAmB,CAACa;AAV/B,OAAP;AAYD;;;;EA3C8CE,uB","sourcesContent":["\nimport Module from 'ringcentral-integration/lib/di/decorators/module';\nimport RcUIModule from '../../lib/RcUIModule';\n\n@Module({\n  name: 'ConnectivityBadgeUI',\n  deps: [\n    'Locale',\n    'ConnectivityManager',\n  ],\n})\nexport default class ConnectivityBadgeUI extends RcUIModule {\n  _locale: any;\n\n  _connectivityManager: any;\n\n  constructor({\n    locale,\n    connectivityManager,\n    ...options\n  }) {\n    super({\n      ...options,\n    });\n\n    this._locale = locale;\n    this._connectivityManager = connectivityManager;\n  }\n\n  getUIProps() {\n    return {\n      currentLocale: this._locale.currentLocale,\n      mode: (this._connectivityManager.ready && this._connectivityManager.mode) || null,\n      webphoneConnecting: this._connectivityManager.ready &&\n        this._connectivityManager.webphoneConnecting,\n      hasLimitedStatusError: this._connectivityManager.ready &&\n        this._connectivityManager.hasLimitedStatusError\n    };\n  }\n\n  getUIFunctions() {\n    const connectivityManager = this._connectivityManager;\n    return {\n      onClick() {\n        if (connectivityManager.isWebphoneUnavailableMode) {\n          connectivityManager.checkWebphoneAndConnect();\n        } else if (connectivityManager.hasLimitedStatusError) {\n          connectivityManager.checkStatus();\n        } else {\n          connectivityManager.showConnectivityAlert();\n        }\n      },\n      showBadgeAlert: connectivityManager.showConnectivityAlert,\n    };\n  }\n}\n"],"file":"index.js"}