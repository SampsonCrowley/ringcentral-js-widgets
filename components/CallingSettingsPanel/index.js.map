{"version":3,"sources":["components/CallingSettingsPanel/index.js"],"names":["TooltipCom","Tooltip","default","CallingSettingsContent","props","onSave","state","callWith","myLocation","ringoutPrompt","onReset","setState","onCallWithChange","availableNumbers","defaultRingoutPrompt","onMyLocationChange","onMyLocationTextChange","e","target","value","onRingoutPromptChange","checked","renderHandler","option","brand","callingOptions","myphone","replace","i18n","getString","currentLocale","newProps","contentKeys","browser","softphone","map","contentKey","callWithOptions","disabled","hasChanges","ringout","styles","ringoutHint","select","locationSelect","iconField","toolTip","getTooltipContent","offset","tooltipContainner","infoIcon","Component","propTypes","PropTypes","string","isRequired","arrayOf","bool","object","func","defaultProps","CallingSettingsPanel","className","onBackButtonClick","showSpinner","content","root"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport formatMessage from 'format-message';\n\nimport callingOptions from 'ringcentral-integration/modules/CallingSettings/callingOptions';\nimport Tooltip from 'rc-tooltip';\nimport 'rc-tooltip/assets/bootstrap_white.css';\n\nimport InfoIcon from '../../assets/images/Info.svg';\n\nimport styles from './styles.scss';\nimport i18n from './i18n';\n\nimport SpinnerOverlay from '../SpinnerOverlay';\nimport BackHeader from '../BackHeader';\nimport Panel from '../Panel';\nimport Switch from '../Switch';\nimport IconField from '../IconField';\nimport InputField from '../InputField';\nimport TextInput from '../TextInput';\nimport Select from '../DropdownSelect';\nimport SaveButton from '../SaveButton';\n\nconst TooltipCom = typeof Tooltip === 'function' ? Tooltip : Tooltip.default;\nclass CallingSettingsContent extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultRingoutPrompt = props.ringoutPrompt;\n    this.state = {\n      callWith: props.callWith,\n      ringoutPrompt: props.ringoutPrompt,\n      myLocation: props.myLocation,\n    };\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.callWith !== this.props.callWith) {\n      this.setState({\n        callWith: newProps.callWith,\n      });\n    }\n    if (newProps.ringoutPrompt !== this.props.ringoutPrompt) {\n      this.setState({\n        ringoutPrompt: newProps.ringoutPrompt,\n      });\n    }\n    if (newProps.myLocation !== this.props.myLocation) {\n      this.setState({\n        myLocation: newProps.myLocation,\n      });\n    }\n  }\n  onSave = () => {\n    if (typeof this.props.onSave === 'function') {\n      const { callWith, myLocation, ringoutPrompt } = this.state;\n      this.props.onSave({\n        callWith,\n        myLocation,\n        ringoutPrompt,\n      });\n    }\n  };\n  onReset = () => {\n    const { callWith, myLocation, ringoutPrompt } = this.props;\n    this.setState({\n      callWith,\n      myLocation,\n      ringoutPrompt,\n    });\n  };\n  onCallWithChange = (callWith) => {\n    if (callWith === this.props.callWith) {\n      this.setState({\n        callWith,\n        myLocation: this.props.myLocation,\n        ringoutPrompt: this.props.ringoutPrompt,\n      });\n      return;\n    }\n    this.setState({\n      callWith,\n      myLocation:\n        (this.props.availableNumbers[callWith] &&\n          this.props.availableNumbers[callWith][0]) ||\n        '',\n      ringoutPrompt: this.defaultRingoutPrompt,\n    });\n  };\n  onMyLocationChange = (myLocation) => {\n    this.setState({\n      myLocation,\n    });\n  };\n  onMyLocationTextChange = (e) => {\n    const myLocation = e.target.value;\n    this.setState({\n      myLocation,\n    });\n  };\n  onRingoutPromptChange = (checked) => {\n    this.setState({\n      ringoutPrompt: checked,\n    });\n  };\n\n  getTooltipContent() {\n    let contentKeys;\n    if (\n      this.state.callWith === callingOptions.browser ||\n      this.state.callWith === callingOptions.softphone\n    ) {\n      contentKeys = [`${this.state.callWith}Tooltip`];\n    } else {\n      contentKeys = [\n        `${this.state.callWith}Tooltip`,\n        `${this.state.callWith}Tooltip1`,\n      ];\n    }\n    return (\n      <div>\n        {contentKeys.map(contentKey => (\n          <div key={contentKey}>\n            {formatMessage(\n              i18n.getString(contentKey, this.props.currentLocale),\n              { brand: this.props.brand },\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  renderHandler = (option) => {\n    let { brand } = this.props;\n    if (option === callingOptions.myphone) {\n      brand = brand.replace(/\\sPhone$/, '');\n    }\n    return formatMessage(i18n.getString(option, this.props.currentLocale), {\n      brand,\n    });\n  };\n\n  render() {\n    const {\n      currentLocale,\n      callWith,\n      callWithOptions,\n      myLocation,\n      ringoutPrompt,\n      availableNumbers,\n      disabled,\n    } = this.props;\n\n    const hasChanges = (\n      this.state.callWith !== callWith ||\n      this.state.myLocation !== myLocation ||\n      this.state.ringoutPrompt !== ringoutPrompt\n    );\n    const ringout = (\n      this.state.callWith !== callingOptions.softphone &&\n      this.state.callWith !== callingOptions.browser\n    ) ? (\n      <div>\n        <div className={styles.ringoutHint}>\n          {i18n.getString('ringoutHint', currentLocale)}\n        </div>\n        <InputField\n          dataSign=\"myLocation\"\n          label={i18n.getString('myLocationLabel', currentLocale)}\n        >\n          {availableNumbers[this.state.callWith] ? (\n            <Select\n              className={classnames(styles.select, styles.locationSelect)}\n              value={this.state.myLocation}\n              onChange={this.onMyLocationChange}\n              options={availableNumbers[this.state.callWith]}\n              disabled={disabled}\n              dropdownAlign=\"left\"\n              titleEnabled\n            />\n          ) : (\n            <TextInput\n              dataSign=\"myLocationInput\"\n              value={this.state.myLocation}\n              maxLength={30}\n              onChange={this.onMyLocationTextChange}\n            />\n          )}\n        </InputField>\n        <IconField\n          className={styles.iconField}\n          icon={\n            <Switch\n              dataSign=\"ringoutPromptToggle\"\n              checked={this.state.ringoutPrompt}\n              onChange={this.onRingoutPromptChange}\n            />\n          }\n        >\n          {i18n.getString('press1ToStartCallLabel', currentLocale)}\n        </IconField>\n      </div>\n      ) : null;\n\n    const toolTip = this.getTooltipContent();\n    return (\n      <React.Fragment>\n        <InputField\n          label={\n            <span>\n              {i18n.getString('makeCallsWith', currentLocale)}\n              <TooltipCom\n                placement=\"bottom\"\n                trigger=\"click\"\n                overlay={toolTip}\n                align={{\n                  offset: [0, 47],\n                }}\n                arrowContent={<div className=\"rc-tooltip-arrow-inner\" />}\n                getTooltipContainer={() => this.tooltipContainner}\n              >\n                <InfoIcon width={14} height={14} className={styles.infoIcon} />\n              </TooltipCom>\n            </span>\n          }\n          noBorder\n        >\n          <Select\n            dataSign=\"callingSetting\"\n            className={styles.select}\n            value={this.state.callWith}\n            onChange={this.onCallWithChange}\n            options={callWithOptions}\n            dropdownAlign=\"left\"\n            renderFunction={this.renderHandler}\n            renderValue={this.renderHandler}\n            disabled={disabled}\n            titleEnabled\n          />\n          <div\n            className={styles.tooltipContainner}\n            ref={(tooltipContainner) => {\n              this.tooltipContainner = tooltipContainner;\n            }}\n          />\n        </InputField>\n        {ringout}\n        <SaveButton\n          currentLocale={currentLocale}\n          onClick={this.onSave}\n          disabled={!hasChanges}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nCallingSettingsContent.propTypes = {\n  brand: PropTypes.string.isRequired,\n  currentLocale: PropTypes.string.isRequired,\n  callWithOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  callWith: PropTypes.string.isRequired,\n  myLocation: PropTypes.string.isRequired,\n  ringoutPrompt: PropTypes.bool.isRequired,\n  availableNumbers: PropTypes.object.isRequired,\n  onSave: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nCallingSettingsContent.defaultProps = {\n  disabled: false,\n};\n\nexport default function CallingSettingsPanel({\n  className,\n  onBackButtonClick,\n  currentLocale,\n  showSpinner,\n  ...props\n}) {\n  const content = showSpinner ? (\n    <SpinnerOverlay />\n  ) : (\n    <CallingSettingsContent {...props} currentLocale={currentLocale} />\n  );\n  return (\n    <div\n      data-sign=\"callingSettings\"\n      className={classnames(styles.root, className)}\n    >\n      <BackHeader onBackClick={onBackButtonClick}>\n        {i18n.getString('title', currentLocale)}\n      </BackHeader>\n      <Panel className={styles.content}>{content}</Panel>\n    </div>\n  );\n}\nCallingSettingsPanel.propTypes = {\n  className: PropTypes.string,\n  currentLocale: PropTypes.string.isRequired,\n  onBackButtonClick: PropTypes.func.isRequired,\n  showSpinner: PropTypes.bool,\n};\n\nCallingSettingsPanel.defaultProps = {\n  className: null,\n  showSpinner: false,\n};\n"],"file":"index.js"}