{"version":3,"sources":["modules/RecentCalls/getRecentCallsReducer.js"],"names":["getCallsReducer","types","state","type","contact","calls","sessionId","contactId","String","id","loadSuccess","loadReset","_","rest","getCallStatusReducer","initLoad","callStatus","loading","loaded","getRecentCallsReducer","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEO,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO,YAED;AAAA,QAFEC,KAEF,uEAFU,EAEV;;AAAA;AAAA,QADJC,IACI,QADJA,IACI;AAAA,QADEC,OACF,QADEA,OACF;AAAA,QADWC,KACX,QADWA,KACX;AAAA,QADkBC,SAClB,QADkBA,SAClB;;AACJ,QAAMC,SAAS,GAAGC,MAAM,CAACJ,OAAO,IAAIA,OAAO,CAACK,EAApB,CAAxB;;AACA,QAAIN,IAAI,KAAKF,KAAK,CAACS,WAAnB,EAAgC;AAC9B,+BACKR,KADL,sBAEGI,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SAF7C,EAEyDF,KAFzD;AAID,KALD,MAKO,IAAIF,IAAI,KAAKF,KAAK,CAACU,SAAnB,EAA8B;AAAA,UAC4BC,CAD5B,GAC2CV,KAD3C,CAC1BI,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SADhB;AAAA,UACkCM,IADlC,4BAC2CX,KAD3C,GAC1BI,SAAS,aAAMC,SAAN,cAAmBD,SAAnB,IAAiCC,SADhB;;AAEnC,aAAOM,IAAP;AACD;;AACD,WAAOX,KAAP;AACD,GAdD;AAeD;;AAEM,SAASY,oBAAT,CAA8Bb,KAA9B,EAAqC;AAC1C,SAAO,YAA4B;AAAA,QAA3BC,KAA2B,uEAAnB,IAAmB;;AAAA;AAAA,QAAXC,IAAW,SAAXA,IAAW;;AACjC,YAAQA,IAAR;AACE,WAAKF,KAAK,CAACc,QAAX;AACE,eAAOC,oBAAWC,OAAlB;;AACF,WAAKhB,KAAK,CAACU,SAAX;AACA,WAAKV,KAAK,CAACS,WAAX;AACE,eAAOM,oBAAWE,MAAlB;;AACF;AACE,eAAOhB,KAAP;AAPJ;AASD,GAVD;AAWD;;AAEc,SAASiB,qBAAT,CAA+BlB,KAA/B,EAAsC;AACnD,SAAO,4BAAgB;AACrBmB,IAAAA,MAAM,EAAE,qCAAuBnB,KAAvB,CADa;AAErBI,IAAAA,KAAK,EAAEL,eAAe,CAACC,KAAD,CAFD;AAGrBe,IAAAA,UAAU,EAAEF,oBAAoB,CAACb,KAAD;AAHX,GAAhB,CAAP;AAKD","sourcesContent":["import { combineReducers } from 'redux';\nimport getModuleStatusReducer from '../../lib/getModuleStatusReducer';\nimport callStatus from './callStatus';\n\nexport function getCallsReducer(types) {\n  return (state = {}, {\n    type, contact, calls, sessionId\n  }) => {\n    const contactId = String(contact && contact.id);\n    if (type === types.loadSuccess) {\n      return {\n        ...state,\n        [sessionId ? `${contactId}-${sessionId}` : contactId]: calls\n      };\n    } else if (type === types.loadReset) {\n      const { [sessionId ? `${contactId}-${sessionId}` : contactId]: _, ...rest } = state;\n      return rest;\n    }\n    return state;\n  };\n}\n\nexport function getCallStatusReducer(types) {\n  return (state = null, { type }) => {\n    switch (type) {\n      case types.initLoad:\n        return callStatus.loading;\n      case types.loadReset:\n      case types.loadSuccess:\n        return callStatus.loaded;\n      default:\n        return state;\n    }\n  };\n}\n\nexport default function getRecentCallsReducer(types) {\n  return combineReducers({\n    status: getModuleStatusReducer(types),\n    calls: getCallsReducer(types),\n    callStatus: getCallStatusReducer(types)\n  });\n}\n"],"file":"getRecentCallsReducer.js"}